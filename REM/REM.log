2021-04-28 02:47:32,407: client.py: INFO: settings locale to Thai
2021-04-28 02:47:32,425: client.py: INFO: dates will be offset by 543 years
2021-04-28 02:47:32,425: client.py: WARNING: unable to find translations for locale en - [Errno 2] No translation file found for domain: 'base'
2021-04-28 02:47:32,426: client.py: INFO: opening a socket to connect to the server
2021-04-28 02:47:32,427: client.py: INFO: socket successfully created
2021-04-28 02:47:32,427: client.py: INFO: initializing connection to server 192.168.1.12 on port 65432
2021-04-28 02:47:32,427: client.py: INFO: loading program configuration from the server
2021-04-28 02:47:32,848: client.py: INFO: sending request "constants" to ('192.168.1.12', 65432)
2021-04-28 02:47:34,762: client.py: INFO: receiving response to request "constants" from ('192.168.1.12', 65432)
2021-04-28 02:47:34,797: client.py: DEBUG: server process completed
2021-04-28 02:47:34,842: main.py: DEBUG: determining screen size
2021-04-28 02:47:34,946: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,947: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,979: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,980: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,981: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:47:34,981: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:47:34,981: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 02:47:34,981: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 02:47:34,985: records.py: WARNING: no reference record types configured for CashAuditRecord
2021-04-28 02:47:34,991: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,992: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,992: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 02:47:34,992: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,992: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,992: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:34,993: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:47:34,993: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:47:34,993: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:47:34,993: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 02:47:34,993: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 02:47:34,996: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 02:47:35,001: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:47:35,002: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,002: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:47:35,002: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,002: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,006: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,006: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:47:35,006: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,006: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,007: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,010: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,010: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:47:35,010: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,010: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,014: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,014: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:47:35,014: parameters.py: DEBUG: DataParameter TransactionType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:47:35,015: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,015: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:47:35,019: main.py: DEBUG: creating the layout for accounting method audit_rules, rule Transactions
2021-04-28 02:47:35,039: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:47:35,039: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:47:35,039: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 02:47:35,062: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:47:35,063: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:47:35,063: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 02:47:35,083: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:47:35,083: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:47:35,084: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 02:47:35,099: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:35,099: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:47:35,100: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:47:35,118: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:47:35,118: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:47:35,119: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:47:35,119: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,120: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 02:47:35,133: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:35,134: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:47:35,138: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:47:35,138: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 02:47:35,156: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:35,157: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:47:35,157: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:47:35,158: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,158: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 02:47:35,164: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:35,164: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:47:35,164: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:47:35,165: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 02:47:35,184: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:35,184: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:47:35,184: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:47:35,186: main.py: DEBUG: creating the layout for accounting method bank_rules, rule Account 532-6-00669-3
2021-04-28 02:47:35,196: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,197: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:35,198: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:47:35,207: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,208: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:47:35,209: elements.py: INFO: DataTable Withdrawal: calculating table totals
2021-04-28 02:47:35,218: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,220: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:47:35,220: elements.py: INFO: DataTable TransactionsIn: calculating table totals
2021-04-28 02:47:35,235: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:47:35,236: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:47:35,236: elements.py: INFO: DataTable Account 5045-4: calculating table totals
2021-04-28 02:47:38,022: main.py: INFO: starting the program
2021-04-28 02:47:38,023: main.py: DEBUG: screen size is 1920 x 1080
2021-04-28 02:47:38,024: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 02:47:38,025: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:47:38,025: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,025: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 02:47:38,025: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:47:38,025: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,026: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 02:47:38,026: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:47:38,026: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,026: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 02:47:38,026: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:38,027: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,027: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 02:47:38,027: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:47:38,027: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,027: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:47:38,028: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:47:38,028: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:38,028: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:47:38,029: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:47:38,029: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:38,029: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:47:38,029: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:38,030: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:47:38,031: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 02:47:38,031: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:38,031: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:47:38,031: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 02:47:38,031: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:47:38,032: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,041: main.py: DEBUG: new window size is 1920 x 1017
2021-04-28 02:47:38,042: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 02:47:38,042: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:47:38,042: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,042: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,043: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 02:47:38,044: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:38,044: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,044: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 02:47:38,044: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:47:38,044: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,045: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:47:38,045: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:47:38,045: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:38,045: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:47:38,046: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:47:38,046: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:38,046: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:47:38,046: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:47:38,046: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:47:38,047: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:47:38,047: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:47:38,047: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:47:38,047: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:47:38,047: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:47:38,048: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:47:38,049: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:47:39,488: main.py: DEBUG: displaying user login screen
2021-04-28 02:47:41,191: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:41,270: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:41,273: client.py: DEBUG: server process completed
2021-04-28 02:47:41,323: main.py: INFO: user signed in as "christopher"
2021-04-28 02:47:44,579: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:47:44,579: parameters.py: DEBUG: DataParameter Branch: resetting parameter value None to None
2021-04-28 02:47:44,580: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 02:47:44,580: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 02:47:44,580: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 02:47:44,580: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:47:44,580: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 02:47:44,580: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 02:47:44,581: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 02:47:44,584: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 02:47:44,597: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:47:44,599: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:47:44,599: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 02:47:44,600: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 02:47:44,604: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 02:47:44,618: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:47:44,618: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:47:44,618: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 02:47:44,618: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 02:47:44,621: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 02:47:44,621: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:47:44,621: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 02:47:44,621: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 02:47:44,621: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 02:47:44,624: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 02:47:44,629: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:47:44,630: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:47:44,630: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 02:47:44,630: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 02:47:44,634: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 02:47:44,647: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:47:44,648: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:47:44,648: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 02:47:44,648: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 02:47:44,651: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 02:47:44,652: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 02:47:44,665: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:47:44,665: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 02:47:44,665: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 02:47:44,666: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 02:47:44,666: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:44,666: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:44,666: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:44,667: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:44,667: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:44,668: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:44,668: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:44,671: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 02:47:44,671: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 02:47:44,673: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 02:47:44,673: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 02:47:44,693: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:47:44,694: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 02:47:44,694: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 02:47:44,694: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 02:47:44,694: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 02:47:44,694: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 02:47:44,695: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 02:47:44,697: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 02:47:44,697: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 02:47:44,715: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:47:44,715: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 02:47:44,715: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 02:47:44,716: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 02:47:44,716: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:44,716: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:44,716: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:44,717: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:44,717: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:44,718: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:44,719: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:44,721: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 02:47:44,721: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 02:47:44,723: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 02:47:44,723: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 02:47:44,738: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:47:44,739: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:47:44,739: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 02:47:44,739: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 02:47:44,739: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:44,740: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:44,740: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:44,741: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:44,741: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:44,742: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:44,742: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:44,743: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 02:47:44,743: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 02:47:44,746: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 02:47:44,746: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 02:47:44,763: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:47:44,763: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:47:44,763: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 02:47:44,763: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 02:47:44,763: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:44,764: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:44,764: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:44,765: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:44,765: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:44,766: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:44,766: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:44,767: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 02:47:44,768: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 02:47:44,772: main.py: DEBUG: panel in view is Transactions
2021-04-28 02:47:46,520: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:46,521: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2
2021-04-28 02:47:46,693: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:46,695: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20
2021-04-28 02:47:46,908: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:46,909: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 201
2021-04-28 02:47:47,071: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:47,072: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019
2021-04-28 02:47:47,355: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:47,356: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20190
2021-04-28 02:47:47,569: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:47,570: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01
2021-04-28 02:47:47,859: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:47,861: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-010
2021-04-28 02:47:48,849: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:48,851: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-
2021-04-28 02:47:49,215: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:49,216: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-011
2021-04-28 02:47:49,345: main.py: INFO: running window event -RecordDate_980906182_Element- of rule Transactions
2021-04-28 02:47:49,347: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-11
2021-04-28 02:47:51,147: main.py: INFO: running window event -Branch_631553592_Element- of rule Transactions
2021-04-28 02:47:51,148: parameters.py: DEBUG: DataParameter Branch: enforcing correct formatting of input value แม่อาย
2021-04-28 02:47:52,521: main.py: INFO: running window event -Transactions_598048391_Start- of rule Transactions
2021-04-28 02:47:52,523: audit.py: INFO: AuditRecordTab CashAuditRecord: attempting to load an existing audit record
2021-04-28 02:47:52,523: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo AS RecordID, CashAuditRecords.DocDate AS RecordDate, CashAuditRecords.DepartCode AS Branch, CashAuditRecords.Remainder, CashAuditRecords.Notes, CashAuditRecords.CashTotal AS CashSum, CashAuditRecords.ReceiptTotal AS ReceiptSum, CashAuditRecords.DepositTotal AS DepositSum, CashAuditRecords.ARVTotal AS ARVSum, CashAuditRecords.ReturnTotal AS ReturnSum, CashAuditRecords.OtherIncome AS SumOtherIncome, CashAuditRecords.OtherExpense AS SumExpenseReduction, CashAuditRecords.Withdrawal, CashAuditRecords.CreationTime, CashAuditRecords.CreatorName, CashAuditRecords.EditTime, CashAuditRecords.EditorName, CashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, CashAuditRecords.IsDeleted AS Deleted FROM CashAuditRecords WHERE CashAuditRecords.IsDeleted = ? AND CashAuditRecords.DocDate = ? AND CashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-11 00:00:00', 'B')"
2021-04-28 02:47:52,570: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:52,644: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:52,647: client.py: DEBUG: server process completed
2021-04-28 02:47:52,659: audit.py: INFO: AuditSummaryTab CashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 02:47:52,659: records.py: INFO: creating a new ID for the record
2021-04-28 02:47:52,709: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:47:52,793: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:47:52,796: client.py: DEBUG: server process completed
2021-04-28 02:47:52,805: records.py: DEBUG: RecordEntry CashAuditRecord: new ID has date component 6201
2021-04-28 02:47:52,805: records.py: DEBUG: RecordEntry CashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 02:47:52,805: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 02:47:52,805: records.py: DEBUG: RecordEntry CashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 02:47:52,805: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo FROM CashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY CashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 02:47:52,854: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:52,916: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:52,919: client.py: DEBUG: server process completed
2021-04-28 02:47:52,930: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 database records with date component 6201
2021-04-28 02:47:52,931: records.py: INFO: RecordEntry CashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 02:47:52,931: records.py: INFO: RecordEntry CashAuditRecord: new record ID is CAR6201-0001
2021-04-28 02:47:52,989: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,057: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,060: client.py: DEBUG: server process completed
2021-04-28 02:47:53,071: audit.py: DEBUG: AuditRuleTab CashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 02:47:53,071: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Notes
2021-04-28 02:47:53,071: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Totals
2021-04-28 02:47:53,071: records.py: INFO: RecordType CashAuditRecord: initializing record
2021-04-28 02:47:53,071: records.py: DEBUG: RecordType CashAuditRecord: {'RecordID': 'CAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 11, 0, 0), 'Branch': 'B'}
2021-04-28 02:47:53,072: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordID with value CAR6201-0001
2021-04-28 02:47:53,072: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordDate with value 2019-01-11 00:00:00
2021-04-28 02:47:53,072: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for header Remainder
2021-04-28 02:47:53,072: records.py: DEBUG: RecordType CashAuditRecord: initializing data element Branch with value B
2021-04-28 02:47:53,072: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 02:47:53,072: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for data element Notes
2021-04-28 02:47:53,075: records.py: INFO: RecordType CashAuditRecord: initialized record has ID CAR6201-0001
2021-04-28 02:47:53,075: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('CAR6201-0001', 'CAR6201-0001')"
2021-04-28 02:47:53,127: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,201: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,206: client.py: DEBUG: server process completed
2021-04-28 02:47:53,218: records.py: INFO: RecordType CashAuditRecord: importing references and components
2021-04-28 02:47:53,220: audit.py: INFO: AuditRecordTab NonCashAuditRecord: attempting to load an existing audit record
2021-04-28 02:47:53,220: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo AS RecordID, NonCashAuditRecords.DocDate AS RecordDate, NonCashAuditRecords.DepartCode AS Branch, NonCashAuditRecords.Remainder, NonCashAuditRecords.Notes, NonCashAuditRecords.ChequeTotal AS ChequeSum, NonCashAuditRecords.TransferTotal AS BankSum, NonCashAuditRecords.CreditTotal AS CreditSum, NonCashAuditRecords.CreationTime, NonCashAuditRecords.CreatorName, NonCashAuditRecords.EditTime, NonCashAuditRecords.EditorName, NonCashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, NonCashAuditRecords.IsDeleted AS Deleted FROM NonCashAuditRecords WHERE NonCashAuditRecords.IsDeleted = ? AND NonCashAuditRecords.DocDate = ? AND NonCashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-11 00:00:00', 'B')"
2021-04-28 02:47:53,268: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,341: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,356: client.py: DEBUG: server process completed
2021-04-28 02:47:53,368: audit.py: INFO: AuditSummaryTab NonCashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 02:47:53,369: records.py: INFO: creating a new ID for the record
2021-04-28 02:47:53,422: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,485: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,489: client.py: DEBUG: server process completed
2021-04-28 02:47:53,501: records.py: DEBUG: RecordEntry NonCashAuditRecord: new ID has date component 6201
2021-04-28 02:47:53,501: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 02:47:53,502: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 02:47:53,502: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 02:47:53,502: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo FROM NonCashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY NonCashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 02:47:53,553: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,616: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,619: client.py: DEBUG: server process completed
2021-04-28 02:47:53,629: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 database records with date component 6201
2021-04-28 02:47:53,629: records.py: INFO: RecordEntry NonCashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 02:47:53,629: records.py: INFO: RecordEntry NonCashAuditRecord: new record ID is NAR6201-0001
2021-04-28 02:47:53,682: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,757: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,760: client.py: DEBUG: server process completed
2021-04-28 02:47:53,771: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 02:47:53,771: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Notes
2021-04-28 02:47:53,771: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Totals
2021-04-28 02:47:53,771: records.py: INFO: RecordType NonCashAuditRecord: initializing record
2021-04-28 02:47:53,771: records.py: DEBUG: RecordType NonCashAuditRecord: {'RecordID': 'NAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 11, 0, 0), 'Branch': 'B'}
2021-04-28 02:47:53,771: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordID with value NAR6201-0001
2021-04-28 02:47:53,772: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordDate with value 2019-01-11 00:00:00
2021-04-28 02:47:53,772: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for header Remainder
2021-04-28 02:47:53,772: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Branch with value B
2021-04-28 02:47:53,772: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 02:47:53,772: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for data element Notes
2021-04-28 02:47:53,774: records.py: INFO: RecordType NonCashAuditRecord: initialized record has ID NAR6201-0001
2021-04-28 02:47:53,775: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('NAR6201-0001', 'NAR6201-0001')"
2021-04-28 02:47:53,824: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:53,898: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:53,901: client.py: DEBUG: server process completed
2021-04-28 02:47:53,912: records.py: INFO: RecordType NonCashAuditRecord: importing references and components
2021-04-28 02:47:53,914: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.DocDate = ? AND BCARInvoice.DepartCode = ? AND BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 0, 2, 1, 0)"
2021-04-28 02:47:53,961: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:54,797: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:54,801: client.py: DEBUG: server process completed
2021-04-28 02:47:54,813: audit.py: INFO: AuditTransactionTab Cash: loaded data for audit rule Transactions
2021-04-28 02:47:54,814: elements.py: DEBUG: DataTable Cash: appending 53 rows to the table
2021-04-28 02:47:54,817: elements.py: INFO: DataTable Cash: setting column data types to configured data types
2021-04-28 02:47:54,826: elements.py: INFO: DataTable Cash: setting column default values
2021-04-28 02:47:54,826: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.DocDate = ? AND BCCreditNoteSub.DepartCode = ? AND BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 0, 0)"
2021-04-28 02:47:54,874: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:54,953: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:54,958: client.py: DEBUG: server process completed
2021-04-28 02:47:54,973: audit.py: INFO: AuditTransactionTab Return: loaded data for audit rule Transactions
2021-04-28 02:47:54,973: elements.py: DEBUG: DataTable Return: appending 6 rows to the table
2021-04-28 02:47:54,977: elements.py: INFO: DataTable Return: setting column data types to configured data types
2021-04-28 02:47:54,985: elements.py: INFO: DataTable Return: setting column default values
2021-04-28 02:47:54,986: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.DocDate = ? AND BCReceipt1.DepartCode = ? AND BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 1, '01', '02', '03', '21902')"
2021-04-28 02:47:55,032: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:55,325: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:55,328: client.py: DEBUG: server process completed
2021-04-28 02:47:55,341: audit.py: INFO: AuditTransactionTab Receipt: loaded data for audit rule Transactions
2021-04-28 02:47:55,341: elements.py: DEBUG: DataTable Receipt: appending 16 rows to the table
2021-04-28 02:47:55,344: elements.py: INFO: DataTable Receipt: setting column data types to configured data types
2021-04-28 02:47:55,350: elements.py: INFO: DataTable Receipt: setting column default values
2021-04-28 02:47:55,350: client.py: DEBUG: query string is "SELECT BCARDeposit.DocNo AS RecordID, BCARDeposit.DocDate AS RecordDate, BCARDeposit.DepartCode AS Branch, BCARDeposit.RefNo AS PreEmpt, BCARDeposit.BeforeTaxAmount, BCARDeposit.TaxAmount, BCARDeposit.TotalAmount, BCARDeposit.NetAmount AS Amount, BCARDeposit.SumCashAmount, BCARDeposit.SumBankAmount, BCARDeposit.SumCreditAmount, BCARDeposit.SumChqAmount, BCARDeposit.MyDescription AS Notes, BCARDeposit.CreatorCode AS CreatorName, BCARDeposit.CreateDateTime AS CreationTime, BCARDeposit.LastEditorCode AS EditorName, BCARDeposit.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDeposit LEFT JOIN BCRecMoney ON BCARDeposit.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDeposit.ArCode = BCAR.Code WHERE BCARDeposit.DocDate = ? AND BCARDeposit.DepartCode = ? AND BCARDeposit.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 02:47:55,397: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:55,462: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:55,465: client.py: DEBUG: server process completed
2021-04-28 02:47:55,475: audit.py: INFO: AuditTransactionTab Deposit: loaded data for audit rule Transactions
2021-04-28 02:47:55,476: elements.py: INFO: DataTable Deposit: setting column default values
2021-04-28 02:47:55,476: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.DocDate = ? AND BCARDepositSpecial.DepartCode = ? AND BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 02:47:55,521: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:47:55,597: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:47:55,600: client.py: DEBUG: server process completed
2021-04-28 02:47:55,612: audit.py: INFO: AuditTransactionTab ARV: loaded data for audit rule Transactions
2021-04-28 02:47:55,612: elements.py: INFO: DataTable ARV: setting column default values
2021-04-28 02:47:55,613: audit.py: INFO: AuditRule Transactions: transaction audit in progress with parameters RecordDate=2019-01-11 00:00:00, Branch=B
2021-04-28 02:47:55,613: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=True"
2021-04-28 02:47:55,613: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=True"
2021-04-28 02:47:55,613: audit.py: DEBUG: AuditRuleSummary Transactions: summary title components are ['RecordDate', 'Branch']
2021-04-28 02:47:55,614: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value 2562-01-11 to title
2021-04-28 02:47:55,614: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value แม่อาย to title
2021-04-28 02:47:55,614: audit.py: INFO: AuditRuleSummary Transactions: formatted summary title is สรุปยอดขาย วันที่ 2562-01-11 สาขา แม่อาย
2021-04-28 02:47:55,614: elements.py: DEBUG: DataTable Cash: enabling table action elements
2021-04-28 02:47:55,615: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 02:47:55,616: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 02:47:55,616: elements.py: INFO: DataTable Cash: filtering the display table based on user-supplied parameter values
2021-04-28 02:47:55,618: elements.py: INFO: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 02:47:55,618: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 02:47:55,622: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:47:55,622: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 02:47:55,623: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:47:55,656: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:47:55,656: elements.py: DEBUG: DataTable Cash: table totals calculated as 118998.0
2021-04-28 02:47:55,657: elements.py: DEBUG: DataTable Cash: table totals are formatted as float
2021-04-28 02:47:55,657: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 02:47:55,657: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:55,658: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:55,658: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:55,660: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:55,660: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:55,662: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:55,663: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:55,665: audit.py: DEBUG: AuditTransactionTab Cash: ID is formatted as ['Branch', 'CH', 'YYMM', '-', '0000']
2021-04-28 02:47:55,665: audit.py: DEBUG: AuditTransactionTab Cash: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CH', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:47:55,665: elements.py: DEBUG: DataTable Return: enabling table action elements
2021-04-28 02:47:55,666: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 02:47:55,667: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 02:47:55,668: elements.py: INFO: DataTable Return: filtering the display table based on user-supplied parameter values
2021-04-28 02:47:55,669: elements.py: INFO: DataTable Return: annotating display table on configured annotation rules
2021-04-28 02:47:55,669: elements.py: DEBUG: DataTable Return: annotating table based on configured annotation rule "ReturnBeforePay"
2021-04-28 02:47:55,671: elements.py: DEBUG: DataTable Return: annotation results of rule ReturnBeforePay are [False, False, True, True, True, True]
2021-04-28 02:47:55,671: elements.py: DEBUG: DataTable Return: table row 2 annotated on annotation code ReturnBeforePay
2021-04-28 02:47:55,671: elements.py: DEBUG: DataTable Return: table row 3 annotated on annotation code ReturnBeforePay
2021-04-28 02:47:55,671: elements.py: DEBUG: DataTable Return: table row 4 annotated on annotation code ReturnBeforePay
2021-04-28 02:47:55,671: elements.py: DEBUG: DataTable Return: table row 5 annotated on annotation code ReturnBeforePay
2021-04-28 02:47:55,703: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:47:55,704: elements.py: DEBUG: DataTable Return: table totals calculated as 6617.0
2021-04-28 02:47:55,704: elements.py: DEBUG: DataTable Return: table totals are formatted as float
2021-04-28 02:47:55,704: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 02:47:55,704: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 02:47:55,705: audit.py: DEBUG: AuditTransactionTab Return: ID is formatted as ['Branch', 'CN', 'YYMM', '-', '0000']
2021-04-28 02:47:55,705: audit.py: DEBUG: AuditTransactionTab Return: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CN', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:47:55,705: elements.py: DEBUG: DataTable Receipt: enabling table action elements
2021-04-28 02:47:55,706: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 02:47:55,707: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 02:47:55,707: elements.py: INFO: DataTable Receipt: filtering the display table based on user-supplied parameter values
2021-04-28 02:47:55,708: elements.py: INFO: DataTable Receipt: annotating display table on configured annotation rules
2021-04-28 02:47:55,708: elements.py: DEBUG: DataTable Receipt: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 02:47:55,709: elements.py: DEBUG: DataTable Receipt: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:47:55,734: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:47:55,734: elements.py: DEBUG: DataTable Receipt: table totals calculated as 157462.0
2021-04-28 02:47:55,734: elements.py: DEBUG: DataTable Receipt: table totals are formatted as float
2021-04-28 02:47:55,734: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 02:47:55,735: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:55,735: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:55,735: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:55,737: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:55,737: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:55,738: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:55,739: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:55,741: audit.py: DEBUG: AuditTransactionTab Receipt: ID is formatted as ['Branch', 'RC', 'YYMM', '-', '0000']
2021-04-28 02:47:55,741: audit.py: DEBUG: AuditTransactionTab Receipt: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'RC', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:47:55,741: elements.py: DEBUG: DataTable Deposit: enabling table action elements
2021-04-28 02:47:55,741: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 02:47:55,742: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 02:47:55,757: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:47:55,757: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:47:55,757: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 02:47:55,757: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 02:47:55,757: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:55,758: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:55,758: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:55,759: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:55,759: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:55,760: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:55,760: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:55,761: audit.py: DEBUG: AuditTransactionTab Deposit: ID is formatted as ['Branch', 'DR', 'YYMM', '-', '0000']
2021-04-28 02:47:55,761: audit.py: DEBUG: AuditTransactionTab Deposit: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'DR', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:47:55,762: elements.py: DEBUG: DataTable ARV: enabling table action elements
2021-04-28 02:47:55,762: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 02:47:55,763: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 02:47:55,786: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:47:55,786: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:47:55,787: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 02:47:55,787: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 02:47:55,787: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:47:55,787: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:47:55,788: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 02:47:55,789: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:47:55,789: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 02:47:55,790: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:47:55,790: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:47:55,792: audit.py: DEBUG: AuditTransactionTab ARV: ID is formatted as ['Branch', 'ARV', 'YYMM', '-', '0000']
2021-04-28 02:47:55,792: audit.py: DEBUG: AuditTransactionTab ARV: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'ARV', (1, 4)), ('date', 'YYMM', (4, 8)), ('separator', '-', (8, 9)), ('variable', 4, (9, 13))]
2021-04-28 02:48:19,113: client.py: INFO: closing connection to ('192.168.1.12', 65432)
2021-04-28 02:48:19,177: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,188: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,188: records.py: ERROR: failed to obtain list of unsaved record IDs of type AccountRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,188: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:48:19,248: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,262: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,262: records.py: ERROR: failed to obtain list of unsaved record IDs of type DepositRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,263: records.py: DEBUG: RecordEntry DepositRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:48:19,325: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,338: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,339: records.py: ERROR: failed to obtain list of unsaved record IDs of type BankRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,339: records.py: DEBUG: RecordEntry BankRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:48:19,397: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,410: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,411: records.py: ERROR: failed to obtain list of unsaved record IDs of type CashExpenseRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,411: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:48:19,476: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,488: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,488: records.py: ERROR: failed to obtain list of unsaved record IDs of type CashAuditRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,488: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:48:19,550: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:48:19,561: client.py: ERROR: server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,562: records.py: ERROR: failed to obtain list of unsaved record IDs of type NonCashAuditRecord from the server - server request failed - 'NoneType' object has no attribute 'send'
2021-04-28 02:48:19,562: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs None from the list of unsaved record IDs
2021-04-28 02:49:07,635: client.py: INFO: settings locale to Thai
2021-04-28 02:49:07,654: client.py: INFO: dates will be offset by 543 years
2021-04-28 02:49:07,654: client.py: WARNING: unable to find translations for locale en - [Errno 2] No translation file found for domain: 'base'
2021-04-28 02:49:07,654: client.py: INFO: opening a socket to connect to the server
2021-04-28 02:49:07,656: client.py: INFO: socket successfully created
2021-04-28 02:49:07,656: client.py: INFO: initializing connection to server 192.168.1.12 on port 65432
2021-04-28 02:49:07,656: client.py: INFO: loading program configuration from the server
2021-04-28 02:49:08,116: client.py: INFO: sending request "constants" to ('192.168.1.12', 65432)
2021-04-28 02:49:09,312: client.py: INFO: receiving response to request "constants" from ('192.168.1.12', 65432)
2021-04-28 02:49:09,335: client.py: DEBUG: server process completed
2021-04-28 02:49:09,372: main.py: DEBUG: determining screen size
2021-04-28 02:49:09,500: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,500: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:49:09,531: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:49:09,532: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 02:49:09,532: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 02:49:09,535: records.py: WARNING: no reference record types configured for CashAuditRecord
2021-04-28 02:49:09,540: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,540: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,540: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:49:09,541: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 02:49:09,541: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 02:49:09,541: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 02:49:09,544: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 02:49:09,549: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:49:09,549: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,550: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:49:09,550: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,550: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,553: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,553: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:49:09,554: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,554: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,554: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,557: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,557: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:49:09,557: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,558: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,561: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,561: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 02:49:09,561: parameters.py: DEBUG: DataParameter TransactionType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 02:49:09,561: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,562: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 02:49:09,565: main.py: DEBUG: creating the layout for accounting method audit_rules, rule Transactions
2021-04-28 02:49:09,581: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:49:09,582: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:49:09,582: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 02:49:09,606: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:49:09,607: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:49:09,607: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 02:49:09,627: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:49:09,627: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:49:09,629: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 02:49:09,647: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:09,647: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:49:09,647: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:49:09,668: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:49:09,668: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:49:09,670: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:49:09,670: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,670: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 02:49:09,683: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:09,685: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:49:09,689: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:49:09,691: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 02:49:09,707: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:09,709: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:49:09,709: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:49:09,710: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,710: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 02:49:09,716: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:09,716: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:49:09,716: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:49:09,718: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 02:49:09,737: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:09,737: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:49:09,739: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:49:09,740: main.py: DEBUG: creating the layout for accounting method bank_rules, rule Account 532-6-00669-3
2021-04-28 02:49:09,751: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,752: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:09,752: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:49:09,766: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,767: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:49:09,767: elements.py: INFO: DataTable Withdrawal: calculating table totals
2021-04-28 02:49:09,784: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,785: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:49:09,785: elements.py: INFO: DataTable TransactionsIn: calculating table totals
2021-04-28 02:49:09,797: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 02:49:09,799: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:49:09,799: elements.py: INFO: DataTable Account 5045-4: calculating table totals
2021-04-28 02:49:12,470: main.py: INFO: starting the program
2021-04-28 02:49:12,470: main.py: DEBUG: screen size is 1920 x 1080
2021-04-28 02:49:12,472: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 02:49:12,472: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:49:12,472: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,472: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,473: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 02:49:12,474: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:12,474: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,474: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 02:49:12,474: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:49:12,474: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,474: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:49:12,475: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:49:12,475: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:12,475: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:49:12,476: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:49:12,476: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:12,476: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:49:12,476: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:49:12,477: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:49:12,478: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:12,478: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:49:12,479: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:49:12,479: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:12,479: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:49:12,480: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 02:49:12,480: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:12,480: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:49:12,481: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 02:49:12,481: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:49:12,481: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,481: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 02:49:12,481: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:49:12,482: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:49:12,482: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 02:49:12,482: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:49:12,482: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,495: main.py: DEBUG: new window size is 1920 x 1017
2021-04-28 02:49:12,496: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 02:49:12,496: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 02:49:12,497: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,497: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 02:49:12,497: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 02:49:12,498: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,498: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 02:49:12,498: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 02:49:12,498: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 02:49:12,499: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,500: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:49:12,500: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:49:12,500: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:12,500: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:49:12,502: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 02:49:12,502: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 02:49:12,503: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 02:49:12,504: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 02:49:12,505: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 02:49:34,588: main.py: DEBUG: displaying user login screen
2021-04-28 02:49:36,287: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:36,364: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:36,367: client.py: DEBUG: server process completed
2021-04-28 02:49:36,415: main.py: INFO: user signed in as "christopher"
2021-04-28 02:49:38,336: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:49:38,336: parameters.py: DEBUG: DataParameter Branch: resetting parameter value None to None
2021-04-28 02:49:38,336: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 02:49:38,337: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 02:49:38,337: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 02:49:38,337: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:49:38,337: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 02:49:38,337: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 02:49:38,338: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 02:49:38,341: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 02:49:38,354: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:49:38,356: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:49:38,356: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 02:49:38,356: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 02:49:38,361: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 02:49:38,375: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:49:38,375: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:49:38,375: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 02:49:38,376: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 02:49:38,377: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 02:49:38,378: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 02:49:38,378: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 02:49:38,378: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 02:49:38,378: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 02:49:38,383: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 02:49:38,389: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 02:49:38,389: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 02:49:38,390: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 02:49:38,390: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 02:49:38,393: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 02:49:38,411: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 02:49:38,411: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 02:49:38,411: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 02:49:38,411: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 02:49:38,416: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 02:49:38,416: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 02:49:38,433: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:49:38,433: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 02:49:38,433: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 02:49:38,434: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 02:49:38,434: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:38,434: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:38,434: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:38,436: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:38,436: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:38,437: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:38,437: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:38,439: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 02:49:38,439: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 02:49:38,442: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 02:49:38,442: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 02:49:38,463: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:49:38,464: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 02:49:38,464: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 02:49:38,464: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 02:49:38,464: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 02:49:38,464: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 02:49:38,465: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 02:49:38,467: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 02:49:38,467: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 02:49:38,485: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:49:38,485: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 02:49:38,485: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 02:49:38,486: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 02:49:38,486: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:38,486: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:38,486: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:38,487: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:38,488: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:38,488: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:38,489: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:38,490: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 02:49:38,490: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 02:49:38,493: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 02:49:38,493: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 02:49:38,508: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:49:38,508: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:49:38,509: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 02:49:38,509: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 02:49:38,509: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:38,509: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:38,509: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:38,510: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:38,510: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:38,511: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:38,511: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:38,513: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 02:49:38,513: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 02:49:38,515: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 02:49:38,516: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 02:49:38,532: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:49:38,533: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:49:38,533: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 02:49:38,533: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 02:49:38,533: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:38,533: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:38,533: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:38,534: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:38,535: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:38,535: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:38,536: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:38,537: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 02:49:38,538: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 02:49:38,542: main.py: DEBUG: panel in view is Transactions
2021-04-28 02:49:40,062: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:40,063: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2
2021-04-28 02:49:40,228: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:40,229: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20
2021-04-28 02:49:40,443: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:40,444: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 201
2021-04-28 02:49:40,614: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:40,615: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019
2021-04-28 02:49:40,983: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:40,984: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20190
2021-04-28 02:49:41,184: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:41,185: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01
2021-04-28 02:49:41,565: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:41,566: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-011
2021-04-28 02:49:41,682: main.py: INFO: running window event -RecordDate_83322371_Element- of rule Transactions
2021-04-28 02:49:41,683: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-11
2021-04-28 02:49:43,338: main.py: INFO: running window event -Branch_953599011_Element- of rule Transactions
2021-04-28 02:49:43,339: parameters.py: DEBUG: DataParameter Branch: enforcing correct formatting of input value แม่อาย
2021-04-28 02:49:44,081: main.py: INFO: running window event -Transactions_302718634_Start- of rule Transactions
2021-04-28 02:49:44,083: audit.py: INFO: AuditRecordTab CashAuditRecord: attempting to load an existing audit record
2021-04-28 02:49:44,083: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo AS RecordID, CashAuditRecords.DocDate AS RecordDate, CashAuditRecords.DepartCode AS Branch, CashAuditRecords.Remainder, CashAuditRecords.Notes, CashAuditRecords.CashTotal AS CashSum, CashAuditRecords.ReceiptTotal AS ReceiptSum, CashAuditRecords.DepositTotal AS DepositSum, CashAuditRecords.ARVTotal AS ARVSum, CashAuditRecords.ReturnTotal AS ReturnSum, CashAuditRecords.OtherIncome AS SumOtherIncome, CashAuditRecords.OtherExpense AS SumExpenseReduction, CashAuditRecords.Withdrawal, CashAuditRecords.CreationTime, CashAuditRecords.CreatorName, CashAuditRecords.EditTime, CashAuditRecords.EditorName, CashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, CashAuditRecords.IsDeleted AS Deleted FROM CashAuditRecords WHERE CashAuditRecords.IsDeleted = ? AND CashAuditRecords.DocDate = ? AND CashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-11 00:00:00', 'B')"
2021-04-28 02:49:44,129: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,200: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,205: client.py: DEBUG: server process completed
2021-04-28 02:49:44,217: audit.py: INFO: AuditSummaryTab CashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 02:49:44,218: records.py: INFO: creating a new ID for the record
2021-04-28 02:49:44,267: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,334: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,337: client.py: DEBUG: server process completed
2021-04-28 02:49:44,346: records.py: DEBUG: RecordEntry CashAuditRecord: new ID has date component 6201
2021-04-28 02:49:44,346: records.py: DEBUG: RecordEntry CashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 02:49:44,346: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 02:49:44,346: records.py: DEBUG: RecordEntry CashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 02:49:44,347: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo FROM CashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY CashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 02:49:44,398: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,468: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,480: client.py: DEBUG: server process completed
2021-04-28 02:49:44,495: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 database records with date component 6201
2021-04-28 02:49:44,495: records.py: INFO: RecordEntry CashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 02:49:44,495: records.py: INFO: RecordEntry CashAuditRecord: new record ID is CAR6201-0001
2021-04-28 02:49:44,558: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,627: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,629: client.py: DEBUG: server process completed
2021-04-28 02:49:44,639: audit.py: DEBUG: AuditRuleTab CashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 02:49:44,640: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Notes
2021-04-28 02:49:44,640: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Totals
2021-04-28 02:49:44,640: records.py: INFO: RecordType CashAuditRecord: initializing record
2021-04-28 02:49:44,640: records.py: DEBUG: RecordType CashAuditRecord: {'RecordID': 'CAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 11, 0, 0), 'Branch': 'B'}
2021-04-28 02:49:44,640: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordID with value CAR6201-0001
2021-04-28 02:49:44,640: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordDate with value 2019-01-11 00:00:00
2021-04-28 02:49:44,640: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for header Remainder
2021-04-28 02:49:44,641: records.py: DEBUG: RecordType CashAuditRecord: initializing data element Branch with value B
2021-04-28 02:49:44,641: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 02:49:44,641: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for data element Notes
2021-04-28 02:49:44,644: records.py: INFO: RecordType CashAuditRecord: initialized record has ID CAR6201-0001
2021-04-28 02:49:44,644: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('CAR6201-0001', 'CAR6201-0001')"
2021-04-28 02:49:44,696: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,771: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,775: client.py: DEBUG: server process completed
2021-04-28 02:49:44,784: records.py: INFO: RecordType CashAuditRecord: importing references and components
2021-04-28 02:49:44,785: audit.py: INFO: AuditRecordTab NonCashAuditRecord: attempting to load an existing audit record
2021-04-28 02:49:44,785: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo AS RecordID, NonCashAuditRecords.DocDate AS RecordDate, NonCashAuditRecords.DepartCode AS Branch, NonCashAuditRecords.Remainder, NonCashAuditRecords.Notes, NonCashAuditRecords.ChequeTotal AS ChequeSum, NonCashAuditRecords.TransferTotal AS BankSum, NonCashAuditRecords.CreditTotal AS CreditSum, NonCashAuditRecords.CreationTime, NonCashAuditRecords.CreatorName, NonCashAuditRecords.EditTime, NonCashAuditRecords.EditorName, NonCashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, NonCashAuditRecords.IsDeleted AS Deleted FROM NonCashAuditRecords WHERE NonCashAuditRecords.IsDeleted = ? AND NonCashAuditRecords.DocDate = ? AND NonCashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-11 00:00:00', 'B')"
2021-04-28 02:49:44,834: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:44,897: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:44,902: client.py: DEBUG: server process completed
2021-04-28 02:49:44,912: audit.py: INFO: AuditSummaryTab NonCashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 02:49:44,912: records.py: INFO: creating a new ID for the record
2021-04-28 02:49:44,964: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:49:45,042: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:49:45,045: client.py: DEBUG: server process completed
2021-04-28 02:49:45,055: records.py: DEBUG: RecordEntry NonCashAuditRecord: new ID has date component 6201
2021-04-28 02:49:45,055: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 02:49:45,055: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 02:49:45,055: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 02:49:45,055: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo FROM NonCashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY NonCashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 02:49:45,104: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:45,168: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:45,171: client.py: DEBUG: server process completed
2021-04-28 02:49:45,182: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 database records with date component 6201
2021-04-28 02:49:45,183: records.py: INFO: RecordEntry NonCashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 02:49:45,183: records.py: INFO: RecordEntry NonCashAuditRecord: new record ID is NAR6201-0001
2021-04-28 02:49:45,234: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 02:49:45,312: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 02:49:45,316: client.py: DEBUG: server process completed
2021-04-28 02:49:45,326: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 02:49:45,326: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Notes
2021-04-28 02:49:45,326: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Totals
2021-04-28 02:49:45,326: records.py: INFO: RecordType NonCashAuditRecord: initializing record
2021-04-28 02:49:45,326: records.py: DEBUG: RecordType NonCashAuditRecord: {'RecordID': 'NAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 11, 0, 0), 'Branch': 'B'}
2021-04-28 02:49:45,326: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordID with value NAR6201-0001
2021-04-28 02:49:45,327: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordDate with value 2019-01-11 00:00:00
2021-04-28 02:49:45,327: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for header Remainder
2021-04-28 02:49:45,327: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Branch with value B
2021-04-28 02:49:45,327: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 02:49:45,327: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for data element Notes
2021-04-28 02:49:45,330: records.py: INFO: RecordType NonCashAuditRecord: initialized record has ID NAR6201-0001
2021-04-28 02:49:45,330: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('NAR6201-0001', 'NAR6201-0001')"
2021-04-28 02:49:45,380: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:45,461: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:45,465: client.py: DEBUG: server process completed
2021-04-28 02:49:45,476: records.py: INFO: RecordType NonCashAuditRecord: importing references and components
2021-04-28 02:49:45,478: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.DocDate = ? AND BCARInvoice.DepartCode = ? AND BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 0, 2, 1, 0)"
2021-04-28 02:49:45,526: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:46,380: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:46,384: client.py: DEBUG: server process completed
2021-04-28 02:49:46,391: audit.py: INFO: AuditTransactionTab Cash: loaded data for audit rule Transactions
2021-04-28 02:49:46,391: elements.py: DEBUG: DataTable Cash: appending 53 rows to the table
2021-04-28 02:49:46,395: elements.py: INFO: DataTable Cash: setting column data types to configured data types
2021-04-28 02:49:46,402: elements.py: INFO: DataTable Cash: setting column default values
2021-04-28 02:49:46,403: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.DocDate = ? AND BCCreditNoteSub.DepartCode = ? AND BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 0, 0)"
2021-04-28 02:49:46,451: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:46,517: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:46,521: client.py: DEBUG: server process completed
2021-04-28 02:49:46,527: audit.py: INFO: AuditTransactionTab Return: loaded data for audit rule Transactions
2021-04-28 02:49:46,528: elements.py: DEBUG: DataTable Return: appending 6 rows to the table
2021-04-28 02:49:46,531: elements.py: INFO: DataTable Return: setting column data types to configured data types
2021-04-28 02:49:46,538: elements.py: INFO: DataTable Return: setting column default values
2021-04-28 02:49:46,539: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.DocDate = ? AND BCReceipt1.DepartCode = ? AND BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, 1, '01', '02', '03', '21902')"
2021-04-28 02:49:46,586: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:46,884: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:46,888: client.py: DEBUG: server process completed
2021-04-28 02:49:46,896: audit.py: INFO: AuditTransactionTab Receipt: loaded data for audit rule Transactions
2021-04-28 02:49:46,897: elements.py: DEBUG: DataTable Receipt: appending 16 rows to the table
2021-04-28 02:49:46,901: elements.py: INFO: DataTable Receipt: setting column data types to configured data types
2021-04-28 02:49:46,910: elements.py: INFO: DataTable Receipt: setting column default values
2021-04-28 02:49:46,910: client.py: DEBUG: query string is "SELECT BCARDeposit.DocNo AS RecordID, BCARDeposit.DocDate AS RecordDate, BCARDeposit.DepartCode AS Branch, BCARDeposit.RefNo AS PreEmpt, BCARDeposit.BeforeTaxAmount, BCARDeposit.TaxAmount, BCARDeposit.TotalAmount, BCARDeposit.NetAmount AS Amount, BCARDeposit.SumCashAmount, BCARDeposit.SumBankAmount, BCARDeposit.SumCreditAmount, BCARDeposit.SumChqAmount, BCARDeposit.MyDescription AS Notes, BCARDeposit.CreatorCode AS CreatorName, BCARDeposit.CreateDateTime AS CreationTime, BCARDeposit.LastEditorCode AS EditorName, BCARDeposit.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDeposit LEFT JOIN BCRecMoney ON BCARDeposit.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDeposit.ArCode = BCAR.Code WHERE BCARDeposit.DocDate = ? AND BCARDeposit.DepartCode = ? AND BCARDeposit.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 02:49:46,959: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:47,035: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:47,038: client.py: DEBUG: server process completed
2021-04-28 02:49:47,042: audit.py: INFO: AuditTransactionTab Deposit: loaded data for audit rule Transactions
2021-04-28 02:49:47,043: elements.py: INFO: DataTable Deposit: setting column default values
2021-04-28 02:49:47,043: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.DocDate = ? AND BCARDepositSpecial.DepartCode = ? AND BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-11 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 02:49:47,093: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 02:49:47,159: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 02:49:47,163: client.py: DEBUG: server process completed
2021-04-28 02:49:47,170: audit.py: INFO: AuditTransactionTab ARV: loaded data for audit rule Transactions
2021-04-28 02:49:47,170: elements.py: INFO: DataTable ARV: setting column default values
2021-04-28 02:49:47,171: audit.py: INFO: AuditRule Transactions: transaction audit in progress with parameters RecordDate=2019-01-11 00:00:00, Branch=B
2021-04-28 02:49:47,171: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=True"
2021-04-28 02:49:47,171: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=True"
2021-04-28 02:49:47,172: audit.py: DEBUG: AuditRuleSummary Transactions: summary title components are ['RecordDate', 'Branch']
2021-04-28 02:49:47,172: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value 2562-01-11 to title
2021-04-28 02:49:47,172: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value แม่อาย to title
2021-04-28 02:49:47,172: audit.py: INFO: AuditRuleSummary Transactions: formatted summary title is สรุปยอดขาย วันที่ 2562-01-11 สาขา แม่อาย
2021-04-28 02:49:47,173: elements.py: DEBUG: DataTable Cash: enabling table action elements
2021-04-28 02:49:47,174: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 02:49:47,176: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 02:49:47,176: elements.py: INFO: DataTable Cash: filtering the display table based on user-supplied parameter values
2021-04-28 02:49:47,178: elements.py: INFO: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 02:49:47,178: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 02:49:47,180: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:49:47,181: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 02:49:47,181: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:49:47,208: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 02:49:47,208: elements.py: DEBUG: DataTable Cash: table totals calculated as 118998.0
2021-04-28 02:49:47,208: elements.py: DEBUG: DataTable Cash: table totals are formatted as float
2021-04-28 02:49:47,209: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 02:49:47,209: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:47,210: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:47,210: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:47,213: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:47,213: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:47,215: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:47,215: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:47,218: audit.py: DEBUG: AuditTransactionTab Cash: ID is formatted as ['Branch', 'CH', 'YYMM', '-', '0000']
2021-04-28 02:49:47,218: audit.py: DEBUG: AuditTransactionTab Cash: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CH', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:49:47,218: elements.py: DEBUG: DataTable Return: enabling table action elements
2021-04-28 02:49:47,219: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 02:49:47,221: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 02:49:47,221: elements.py: INFO: DataTable Return: filtering the display table based on user-supplied parameter values
2021-04-28 02:49:47,222: elements.py: INFO: DataTable Return: annotating display table on configured annotation rules
2021-04-28 02:49:47,222: elements.py: DEBUG: DataTable Return: annotating table based on configured annotation rule "ReturnBeforePay"
2021-04-28 02:49:47,225: elements.py: DEBUG: DataTable Return: annotation results of rule ReturnBeforePay are [False, False, True, True, True, True]
2021-04-28 02:49:47,225: elements.py: DEBUG: DataTable Return: table row 2 annotated on annotation code ReturnBeforePay
2021-04-28 02:49:47,225: elements.py: DEBUG: DataTable Return: table row 3 annotated on annotation code ReturnBeforePay
2021-04-28 02:49:47,225: elements.py: DEBUG: DataTable Return: table row 4 annotated on annotation code ReturnBeforePay
2021-04-28 02:49:47,225: elements.py: DEBUG: DataTable Return: table row 5 annotated on annotation code ReturnBeforePay
2021-04-28 02:49:47,256: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 02:49:47,256: elements.py: DEBUG: DataTable Return: table totals calculated as 6617.0
2021-04-28 02:49:47,256: elements.py: DEBUG: DataTable Return: table totals are formatted as float
2021-04-28 02:49:47,257: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 02:49:47,257: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 02:49:47,257: audit.py: DEBUG: AuditTransactionTab Return: ID is formatted as ['Branch', 'CN', 'YYMM', '-', '0000']
2021-04-28 02:49:47,257: audit.py: DEBUG: AuditTransactionTab Return: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CN', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:49:47,257: elements.py: DEBUG: DataTable Receipt: enabling table action elements
2021-04-28 02:49:47,257: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 02:49:47,259: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 02:49:47,259: elements.py: INFO: DataTable Receipt: filtering the display table based on user-supplied parameter values
2021-04-28 02:49:47,260: elements.py: INFO: DataTable Receipt: annotating display table on configured annotation rules
2021-04-28 02:49:47,260: elements.py: DEBUG: DataTable Receipt: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 02:49:47,262: elements.py: DEBUG: DataTable Receipt: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 02:49:47,284: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 02:49:47,284: elements.py: DEBUG: DataTable Receipt: table totals calculated as 157462.0
2021-04-28 02:49:47,285: elements.py: DEBUG: DataTable Receipt: table totals are formatted as float
2021-04-28 02:49:47,285: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 02:49:47,285: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:47,285: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:47,285: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:47,287: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:47,287: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:47,290: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:47,290: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:47,294: audit.py: DEBUG: AuditTransactionTab Receipt: ID is formatted as ['Branch', 'RC', 'YYMM', '-', '0000']
2021-04-28 02:49:47,294: audit.py: DEBUG: AuditTransactionTab Receipt: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'RC', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:49:47,295: elements.py: DEBUG: DataTable Deposit: enabling table action elements
2021-04-28 02:49:47,295: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 02:49:47,296: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 02:49:47,326: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 02:49:47,327: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 02:49:47,328: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 02:49:47,328: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 02:49:47,329: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:47,330: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:47,330: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:47,332: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:47,333: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:47,335: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:47,336: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:47,339: audit.py: DEBUG: AuditTransactionTab Deposit: ID is formatted as ['Branch', 'DR', 'YYMM', '-', '0000']
2021-04-28 02:49:47,340: audit.py: DEBUG: AuditTransactionTab Deposit: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'DR', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 02:49:47,340: elements.py: DEBUG: DataTable ARV: enabling table action elements
2021-04-28 02:49:47,341: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 02:49:47,342: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 02:49:47,377: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 02:49:47,377: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 02:49:47,377: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 02:49:47,378: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 02:49:47,378: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 02:49:47,378: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 02:49:47,379: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 02:49:47,380: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 02:49:47,380: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 02:49:47,381: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 02:49:47,382: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 02:49:47,383: audit.py: DEBUG: AuditTransactionTab ARV: ID is formatted as ['Branch', 'ARV', 'YYMM', '-', '0000']
2021-04-28 02:49:47,384: audit.py: DEBUG: AuditTransactionTab ARV: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'ARV', (1, 4)), ('date', 'YYMM', (4, 8)), ('separator', '-', (8, 9)), ('variable', 4, (9, 13))]
2021-04-28 02:50:04,627: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:04,704: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:04,706: client.py: DEBUG: server process completed
2021-04-28 02:50:04,713: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 02:50:04,781: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:04,853: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:04,856: client.py: DEBUG: server process completed
2021-04-28 02:50:04,938: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,014: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,017: client.py: DEBUG: server process completed
2021-04-28 02:50:05,023: records.py: DEBUG: RecordEntry DepositRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 02:50:05,094: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,170: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,173: client.py: DEBUG: server process completed
2021-04-28 02:50:05,246: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,326: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,328: client.py: DEBUG: server process completed
2021-04-28 02:50:05,335: records.py: DEBUG: RecordEntry BankRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 02:50:05,404: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,481: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,484: client.py: DEBUG: server process completed
2021-04-28 02:50:05,563: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,641: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,646: client.py: DEBUG: server process completed
2021-04-28 02:50:05,649: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 02:50:05,695: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,773: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,776: client.py: DEBUG: server process completed
2021-04-28 02:50:05,833: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:05,906: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:05,909: client.py: DEBUG: server process completed
2021-04-28 02:50:05,913: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to remove IDs ['CAR6201-0001'] from the list of unsaved record IDs
2021-04-28 02:50:05,976: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:06,068: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:06,071: client.py: DEBUG: server process completed
2021-04-28 02:50:06,126: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:06,203: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:06,206: client.py: DEBUG: server process completed
2021-04-28 02:50:06,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs ['NAR6201-0001'] from the list of unsaved record IDs
2021-04-28 02:50:06,269: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 02:50:06,350: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 02:50:06,353: client.py: DEBUG: server process completed
2021-04-28 02:50:06,356: client.py: INFO: closing connection to ('192.168.1.12', 65432)
2021-04-28 20:18:17,976: client.py: INFO: settings locale to Thai
2021-04-28 20:18:17,994: client.py: INFO: dates will be offset by 543 years
2021-04-28 20:18:17,994: client.py: WARNING: unable to find translations for locale en - [Errno 2] No translation file found for domain: 'base'
2021-04-28 20:18:18,005: client.py: INFO: opening a socket to connect to the server
2021-04-28 20:18:18,005: client.py: INFO: socket successfully created
2021-04-28 20:18:18,005: client.py: INFO: initializing connection to server 192.168.1.12 on port 65432
2021-04-28 20:18:18,007: client.py: INFO: loading program configuration from the server
2021-04-28 20:18:19,206: client.py: INFO: sending request "constants" to ('192.168.1.12', 65432)
2021-04-28 20:18:20,440: client.py: INFO: receiving response to request "constants" from ('192.168.1.12', 65432)
2021-04-28 20:18:20,465: client.py: DEBUG: server process completed
2021-04-28 20:18:20,528: main.py: DEBUG: determining screen size
2021-04-28 20:18:20,625: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,626: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:20,650: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:20,651: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:18:20,651: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:18:20,654: records.py: WARNING: no reference record types configured for CashAuditRecord
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:20,659: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:20,660: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:18:20,660: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:18:20,662: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 20:18:20,666: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:20,667: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,667: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:20,667: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,667: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,670: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,670: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:20,670: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,670: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,670: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,674: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,674: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:20,674: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,674: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,678: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,678: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:20,678: parameters.py: DEBUG: DataParameter TransactionType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:20,678: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,678: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:20,682: main.py: DEBUG: creating the layout for accounting method audit_rules, rule Transactions
2021-04-28 20:18:20,698: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:18:20,699: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 20:18:20,699: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:18:20,720: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:18:20,721: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 20:18:20,721: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:18:20,739: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:18:20,739: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 20:18:20,740: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:18:20,762: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:20,763: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:18:20,764: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:18:20,786: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:18:20,787: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 20:18:20,788: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:18:20,789: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,789: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:18:20,803: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:20,804: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:18:20,809: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:18:20,810: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:20,833: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:20,833: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:18:20,834: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:18:20,834: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,835: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:18:20,841: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:20,841: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:18:20,842: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:18:20,842: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:20,861: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:20,861: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:18:20,861: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:18:20,863: main.py: DEBUG: creating the layout for accounting method bank_rules, rule Account 532-6-00669-3
2021-04-28 20:18:20,873: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,874: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:20,875: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:18:20,885: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,886: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:18:20,886: elements.py: INFO: DataTable Withdrawal: calculating table totals
2021-04-28 20:18:20,896: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,897: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:18:20,897: elements.py: INFO: DataTable TransactionsIn: calculating table totals
2021-04-28 20:18:20,908: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:20,909: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:18:20,909: elements.py: INFO: DataTable Account 5045-4: calculating table totals
2021-04-28 20:18:23,706: main.py: INFO: starting the program
2021-04-28 20:18:23,707: main.py: DEBUG: screen size is 1920 x 1080
2021-04-28 20:18:23,708: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:18:23,709: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:18:23,709: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,709: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:18:23,709: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:18:23,710: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,710: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:18:23,710: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:18:23,710: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,710: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:18:23,711: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:23,711: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,711: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:18:23,711: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:18:23,711: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,712: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:18:23,712: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:18:23,712: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:23,713: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:18:23,713: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:18:23,713: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:23,713: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:18:23,713: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:23,714: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:18:23,715: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:18:23,715: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:23,715: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:18:23,715: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:18:23,716: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:18:23,717: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:18:23,717: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,726: main.py: DEBUG: new window size is 1920 x 1017
2021-04-28 20:18:23,727: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:18:23,727: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:18:23,727: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,728: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:18:23,728: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:18:23,728: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,728: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:18:23,728: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:18:23,729: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,729: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:18:23,729: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:23,729: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,730: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:18:23,730: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:18:23,730: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,730: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:23,731: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:18:23,732: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:18:23,732: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:18:23,732: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:23,732: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:18:23,732: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:18:23,733: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:23,733: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:18:23,733: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:18:23,733: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:18:23,734: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:18:23,735: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:18:23,735: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:18:23,735: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:18:23,735: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:18:36,807: main.py: DEBUG: displaying user login screen
2021-04-28 20:18:38,428: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:38,493: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:38,497: client.py: DEBUG: server process completed
2021-04-28 20:18:38,544: main.py: INFO: user signed in as "christopher"
2021-04-28 20:18:41,362: main.py: INFO: displaying selection window for บันทึกการตรวจสอบ records
2021-04-28 20:18:41,362: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:41,362: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:18:41,362: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:41,363: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:41,363: parameters.py: DEBUG: DataParameter Account: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:41,363: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:18:41,380: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:18:41,382: elements.py: DEBUG: DataTable AccountRecord: calculating table column widths
2021-04-28 20:18:41,382: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:41,760: elements.py: DEBUG: DataTable AccountRecord: resizing element display to 1481, 637
2021-04-28 20:18:41,761: elements.py: DEBUG: DataTable AccountRecord: calculating table column widths
2021-04-28 20:18:41,761: elements.py: DEBUG: DataTable AccountRecord: changing the number of rows in the table from 10 to 14 based on table size difference 4
2021-04-28 20:18:41,761: secondary.py: DEBUG: centering window
2021-04-28 20:18:42,155: secondary.py: DEBUG: current window size: (1536, 757)
2021-04-28 20:18:42,155: secondary.py: DEBUG: window current location: (573, 400)
2021-04-28 20:18:42,155: secondary.py: DEBUG: window new location: (192, 161)
2021-04-28 20:18:42,158: secondary.py: DEBUG: window real location: (192, 161)
2021-04-28 20:18:42,158: elements.py: INFO: DataTable AccountRecord: setting column data types to configured data types
2021-04-28 20:18:42,165: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:42,171: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:42,186: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:42,187: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:42,187: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:44,369: parameters.py: DEBUG: DataParameter RecordID: enforcing correct formatting of input value 6
2021-04-28 20:18:44,370: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:44,374: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:44,393: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:44,393: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:44,394: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:44,562: parameters.py: DEBUG: DataParameter RecordID: enforcing correct formatting of input value 63
2021-04-28 20:18:44,562: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:44,566: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:44,586: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:44,587: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:44,587: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:44,788: parameters.py: DEBUG: DataParameter RecordID: enforcing correct formatting of input value 630
2021-04-28 20:18:44,788: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:44,792: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:44,812: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:44,813: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:44,813: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:44,987: parameters.py: DEBUG: DataParameter RecordID: enforcing correct formatting of input value 6301
2021-04-28 20:18:44,988: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:44,991: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:45,010: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:45,011: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:45,011: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:46,063: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo AS RecordID, AccountRecords.DocDate AS RecordDate, AccountRecords.DepartCode AS Branch, AccountRecords.AccountNo AS Account, AccountRecords.PaymentNo, AccountRecords.RefDate AS PaymentDate, AccountRecords.CustomerName AS Customer, AccountRecords.PaymentType, AccountRecords.TotalAmount AS Amount, AccountRecords.CorrectedAmount, AccountRecords.Notes, AccountRecords.CreationTime, AccountRecords.CreatorName, AccountRecords.EditTime, AccountRecords.EditorName, AccountRecords.IsMarkedForDeletion AS MarkedForDeletion, AccountRecords.IsDeleted AS Deleted FROM AccountRecords WHERE AccountRecords.IsDeleted = ? AND AccountRecords.DocNo LIKE ? ;" with parameters "('0', '%6301%')"
2021-04-28 20:18:46,111: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:46,389: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:46,392: client.py: DEBUG: server process completed
2021-04-28 20:18:46,407: elements.py: DEBUG: DataTable AccountRecord: appending 603 rows to the table
2021-04-28 20:18:46,410: elements.py: INFO: DataTable AccountRecord: setting column data types to configured data types
2021-04-28 20:18:46,418: elements.py: INFO: DataTable AccountRecord: sorting table on ['RecordDate', 'Branch']
2021-04-28 20:18:46,422: elements.py: INFO: DataTable AccountRecord: formatting table for displaying
2021-04-28 20:18:46,423: elements.py: INFO: DataTable AccountRecord: filtering the display table based on user-supplied parameter values
2021-04-28 20:18:46,423: elements.py: DEBUG: DataTable AccountRecord: filtering table on parameter RecordID value 6301
2021-04-28 20:18:46,428: elements.py: INFO: DataTable AccountRecord: annotating display table on configured annotation rules
2021-04-28 20:18:46,428: elements.py: DEBUG: DataTable AccountRecord: annotating table based on configured annotation rule "MarkedForDeletion"
2021-04-28 20:18:46,429: elements.py: DEBUG: DataTable AccountRecord: annotation results of rule MarkedForDeletion are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:18:46,497: elements.py: INFO: DataTable AccountRecord: calculating table totals
2021-04-28 20:18:46,497: elements.py: DEBUG: DataTable AccountRecord: table totals are formatted as a string
2021-04-28 20:18:46,497: elements.py: INFO: DataTable AccountRecord: summarizing display table on configured summary rules
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:48,723: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:48,724: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:48,724: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:48,724: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:18:48,724: elements.py: DEBUG: DataElement PaymentType: initializing dropdown element of data type string with default value None and formatted value None
2021-04-28 20:18:48,724: elements.py: DEBUG: DataElement PaymentNo: initializing input element of data type str with default value None and formatted value None
2021-04-28 20:18:48,724: elements.py: DEBUG: DataElement PaymentDate: initializing date element of data type datetime with default value None and formatted value None
2021-04-28 20:18:48,726: elements.py: DEBUG: DataElement Account: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:18:48,726: elements.py: DEBUG: DataElement Customer: initializing input element of data type str with default value None and formatted value None
2021-04-28 20:18:48,726: elements.py: DEBUG: DataElement Amount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:18:48,726: elements.py: DEBUG: DataElement CorrectedAmount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:18:48,726: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:18:48,726: records.py: WARNING: RecordEntry: no component record types configured
2021-04-28 20:18:48,729: records.py: INFO: RecordType AccountRecord: initializing record
2021-04-28 20:18:48,734: records.py: DEBUG: RecordType AccountRecord: {'RecordID': 'AR6301-0442', 'RecordDate': Timestamp('2020-01-02 00:00:00'), 'Branch': 'E', 'Account': '516-602-1347', 'PaymentType': 'Transfer', 'PaymentNo': None, 'PaymentDate': Timestamp('2019-12-28 00:00:00'), 'Amount': 1900.0, 'CorrectedAmount': 1900.0, 'Customer': 'ร้าน ส.เจริญยนต์ (เชียงดาว)', 'Notes': None, 'MarkedForDeletion': False, 'Deleted': False, 'CreationTime': Timestamp('2021-02-15 16:05:11+0000', tz='<bson.tz_util.FixedOffset object at 0x000001C37AD3AD60>'), 'CreatorName': 'ชุติมา วงษ์อุบล', 'EditTime': NaT, 'EditorName': None}
2021-04-28 20:18:48,735: records.py: DEBUG: RecordType AccountRecord: initializing header RecordID with value AR6301-0442
2021-04-28 20:18:48,735: records.py: DEBUG: RecordType AccountRecord: initializing header RecordDate with value 2020-01-02 00:00:00
2021-04-28 20:18:48,735: records.py: DEBUG: RecordType AccountRecord: initializing modifier CreatorName with value ชุติมา วงษ์อุบล
2021-04-28 20:18:48,735: records.py: DEBUG: RecordType AccountRecord: initializing modifier CreationTime with value 2021-02-15 16:05:11+00:00
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing modifier EditorName with value None
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing modifier EditTime with value NaT
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing modifier MarkedForDeletion with value False
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing modifier Deleted with value False
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing data element Branch with value E
2021-04-28 20:18:48,736: elements.py: DEBUG: DataElement Branch: input value E formatted as E
2021-04-28 20:18:48,736: records.py: DEBUG: RecordType AccountRecord: initializing data element PaymentType with value Transfer
2021-04-28 20:18:48,737: elements.py: DEBUG: DataElement PaymentType: input value Transfer formatted as Transfer
2021-04-28 20:18:48,737: records.py: DEBUG: RecordType AccountRecord: no value set for parameter PaymentNo
2021-04-28 20:18:48,737: records.py: DEBUG: RecordType AccountRecord: initializing data element PaymentDate with value 2019-12-28 00:00:00
2021-04-28 20:18:48,737: elements.py: DEBUG: DataElement PaymentDate: input value 2019-12-28 00:00:00 formatted as 2019-12-28 00:00:00
2021-04-28 20:18:48,737: records.py: DEBUG: RecordType AccountRecord: initializing data element Account with value 516-602-1347
2021-04-28 20:18:48,737: elements.py: DEBUG: DataElement Account: input value 516-602-1347 formatted as 516-602-1347
2021-04-28 20:18:48,737: records.py: DEBUG: RecordType AccountRecord: initializing data element Customer with value ร้าน ส.เจริญยนต์ (เชียงดาว)
2021-04-28 20:18:48,737: elements.py: DEBUG: DataElement Customer: input value ร้าน ส.เจริญยนต์ (เชียงดาว) formatted as ร้าน ส.เจริญยนต์ (เชียงดาว)
2021-04-28 20:18:48,737: records.py: DEBUG: RecordType AccountRecord: initializing data element Amount with value 1900.0
2021-04-28 20:18:48,738: elements.py: DEBUG: DataElement Amount: input value 1900.0 formatted as 1900.0
2021-04-28 20:18:48,738: records.py: DEBUG: RecordType AccountRecord: initializing data element CorrectedAmount with value 1900.0
2021-04-28 20:18:48,738: elements.py: DEBUG: DataElement CorrectedAmount: input value 1900.0 formatted as 1900.0
2021-04-28 20:18:48,738: records.py: DEBUG: RecordType AccountRecord: no value set for parameter Notes
2021-04-28 20:18:48,738: records.py: INFO: RecordType AccountRecord: initialized record has ID AR6301-0442
2021-04-28 20:18:48,738: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('AR6301-0442', 'AR6301-0442')"
2021-04-28 20:18:48,878: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:48,939: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:48,943: client.py: DEBUG: server process completed
2021-04-28 20:18:48,948: records.py: INFO: RecordType AccountRecord: importing references and components
2021-04-28 20:18:48,949: records.py: DEBUG: RecordType AccountRecord: adding reference record NAR6301-0105 with record type NonCashAuditRecord
2021-04-28 20:18:48,950: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo AS RecordID, NonCashAuditRecords.DocDate AS RecordDate, NonCashAuditRecords.DepartCode AS Branch, NonCashAuditRecords.Remainder, NonCashAuditRecords.Notes, NonCashAuditRecords.ChequeTotal AS ChequeSum, NonCashAuditRecords.TransferTotal AS BankSum, NonCashAuditRecords.CreditTotal AS CreditSum, NonCashAuditRecords.CreationTime, NonCashAuditRecords.CreatorName, NonCashAuditRecords.EditTime, NonCashAuditRecords.EditorName, NonCashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, NonCashAuditRecords.IsDeleted AS Deleted FROM NonCashAuditRecords WHERE NonCashAuditRecords.DocNo = ? ;" with parameters "('NAR6301-0105',)"
2021-04-28 20:18:49,045: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:49,115: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:49,119: client.py: DEBUG: server process completed
2021-04-28 20:18:49,124: records.py: DEBUG: RecordType AccountRecord: adding reference record BD6301-0308 with record type DepositRecord
2021-04-28 20:18:49,126: client.py: DEBUG: query string is "SELECT DepositRecords.DocNo AS RecordID, DepositRecords.DocDate AS RecordDate, DepositRecords.PaymentType, DepositRecords.PaymentNo, DepositRecords.DepositAmount, DepositRecords.DepositDate, DepositRecords.AccountNo AS Account, DepositRecords.Notes, DepositRecords.Warnings, DepositRecords.CreationTime, DepositRecords.CreatorName, DepositRecords.EditTime, DepositRecords.EditorName, DepositRecords.IsMarkedForDeletion AS MarkedForDeletion, DepositRecords.IsApproved AS Approved, DepositRecords.IsDeleted AS Deleted FROM DepositRecords WHERE DepositRecords.DocNo = ? ;" with parameters "('BD6301-0308',)"
2021-04-28 20:18:49,215: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:49,277: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:49,281: client.py: DEBUG: server process completed
2021-04-28 20:18:49,286: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value AR6301-0442 for display
2021-04-28 20:18:49,289: elements.py: WARNING: DataElement PaymentDate: component Calendar not found in list of element components
2021-04-28 20:18:49,291: parameters.py: DEBUG: DataParameter CreatorName: formatting parameter value ชุติมา วงษ์อุบล for display
2021-04-28 20:18:49,292: parameters.py: DEBUG: DataParameter EditorName: formatting parameter value None for display
2021-04-28 20:18:50,066: records.py: DEBUG: Record AR6301-0442: resizing display to 864, 648
2021-04-28 20:18:50,070: secondary.py: DEBUG: centering window
2021-04-28 20:18:50,916: secondary.py: DEBUG: current window size: (864, 880)
2021-04-28 20:18:50,916: secondary.py: DEBUG: window current location: (640, 24)
2021-04-28 20:18:50,916: secondary.py: DEBUG: window new location: (528, 100)
2021-04-28 20:18:50,920: secondary.py: DEBUG: window real location: (528, 100)
2021-04-28 20:18:50,920: elements.py: WARNING: DataElement Branch: unable to locate values for element key -Branch_267176048_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement PaymentType: unable to locate values for element key -PaymentType_910381120_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement PaymentNo: unable to locate values for element key -PaymentNo_384376879_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement PaymentDate: unable to locate values for element key -PaymentDate_834654460_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement Account: unable to locate values for element key -Account_474163594_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement Customer: unable to locate values for element key -Customer_277437652_Element-
2021-04-28 20:18:50,921: elements.py: WARNING: DataElement Amount: unable to locate values for element key -Amount_291631203_Element-
2021-04-28 20:18:50,922: elements.py: WARNING: DataElement CorrectedAmount: unable to locate values for element key -CorrectedAmount_187526156_Element-
2021-04-28 20:18:50,922: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_530136992_Element-
2021-04-28 20:18:50,922: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value AR6301-0442 for display
2021-04-28 20:18:52,465: elements.py: INFO: ReferenceElement NonCashAuditRecord: running event -NonCashAuditRecord_599866093_Reference-
2021-04-28 20:18:52,466: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:52,466: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:52,466: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:18:52,467: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:52,467: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:52,467: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:18:52,467: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:18:52,468: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:52,468: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:18:52,468: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:18:52,468: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:18:52,473: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 20:18:52,479: records.py: INFO: RecordType NonCashAuditRecord: initializing record
2021-04-28 20:18:52,479: records.py: DEBUG: RecordType NonCashAuditRecord: {'RecordID': 'NAR6301-0105', 'RecordDate': '2020-01-02', 'Branch': 'E', 'Remainder': None, 'Notes': '', 'ChequeSum': 0.0, 'BankSum': 29120.0, 'CreditSum': 0.0, 'CreationTime': Timestamp('2021-02-15 16:05:11+0000', tz='<bson.tz_util.FixedOffset object at 0x000001C37AD3AD60>'), 'CreatorName': 'ชุติมา วงษ์อุบล', 'EditTime': None, 'EditorName': None, 'MarkedForDeletion': False, 'Deleted': False}
2021-04-28 20:18:52,479: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordID with value NAR6301-0105
2021-04-28 20:18:52,479: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordDate with value 2020-01-02
2021-04-28 20:18:52,479: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header Remainder with value None
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier CreatorName with value ชุติมา วงษ์อุบล
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier CreationTime with value 2021-02-15 16:05:11+00:00
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier EditorName with value None
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier EditTime with value None
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier MarkedForDeletion with value False
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing modifier Deleted with value False
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Branch with value E
2021-04-28 20:18:52,480: elements.py: DEBUG: DataElement Branch: input value E formatted as E
2021-04-28 20:18:52,480: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Notes with value 
2021-04-28 20:18:52,482: records.py: INFO: RecordType NonCashAuditRecord: initialized record has ID NAR6301-0105
2021-04-28 20:18:52,483: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('NAR6301-0105', 'NAR6301-0105')"
2021-04-28 20:18:52,544: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:52,622: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:52,627: client.py: DEBUG: server process completed
2021-04-28 20:18:52,634: records.py: INFO: RecordType NonCashAuditRecord: importing references and components
2021-04-28 20:18:52,635: records.py: DEBUG: RecordType NonCashAuditRecord: adding component record AR6301-0442 with record type AccountRecord
2021-04-28 20:18:52,635: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo AS RecordID, AccountRecords.DocDate AS RecordDate, AccountRecords.DepartCode AS Branch, AccountRecords.AccountNo AS Account, AccountRecords.PaymentNo, AccountRecords.RefDate AS PaymentDate, AccountRecords.CustomerName AS Customer, AccountRecords.PaymentType, AccountRecords.TotalAmount AS Amount, AccountRecords.CorrectedAmount, AccountRecords.Notes, AccountRecords.CreationTime, AccountRecords.CreatorName, AccountRecords.EditTime, AccountRecords.EditorName, AccountRecords.IsMarkedForDeletion AS MarkedForDeletion, AccountRecords.IsDeleted AS Deleted FROM AccountRecords WHERE AccountRecords.DocNo = ? ;" with parameters "('AR6301-0442',)"
2021-04-28 20:18:52,700: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:52,793: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:52,797: client.py: DEBUG: server process completed
2021-04-28 20:18:52,806: elements.py: DEBUG: DataTable account: appending 17 rows to the table
2021-04-28 20:18:52,814: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:52,818: records.py: DEBUG: RecordType NonCashAuditRecord: adding component record AR6301-0443 with record type AccountRecord
2021-04-28 20:18:52,819: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo AS RecordID, AccountRecords.DocDate AS RecordDate, AccountRecords.DepartCode AS Branch, AccountRecords.AccountNo AS Account, AccountRecords.PaymentNo, AccountRecords.RefDate AS PaymentDate, AccountRecords.CustomerName AS Customer, AccountRecords.PaymentType, AccountRecords.TotalAmount AS Amount, AccountRecords.CorrectedAmount, AccountRecords.Notes, AccountRecords.CreationTime, AccountRecords.CreatorName, AccountRecords.EditTime, AccountRecords.EditorName, AccountRecords.IsMarkedForDeletion AS MarkedForDeletion, AccountRecords.IsDeleted AS Deleted FROM AccountRecords WHERE AccountRecords.DocNo = ? ;" with parameters "('AR6301-0443',)"
2021-04-28 20:18:52,870: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:52,944: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:52,948: client.py: DEBUG: server process completed
2021-04-28 20:18:52,954: elements.py: DEBUG: DataTable account: appending 17 rows to the table
2021-04-28 20:18:52,963: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:52,967: records.py: DEBUG: RecordType NonCashAuditRecord: adding component record AR6301-0444 with record type AccountRecord
2021-04-28 20:18:52,968: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo AS RecordID, AccountRecords.DocDate AS RecordDate, AccountRecords.DepartCode AS Branch, AccountRecords.AccountNo AS Account, AccountRecords.PaymentNo, AccountRecords.RefDate AS PaymentDate, AccountRecords.CustomerName AS Customer, AccountRecords.PaymentType, AccountRecords.TotalAmount AS Amount, AccountRecords.CorrectedAmount, AccountRecords.Notes, AccountRecords.CreationTime, AccountRecords.CreatorName, AccountRecords.EditTime, AccountRecords.EditorName, AccountRecords.IsMarkedForDeletion AS MarkedForDeletion, AccountRecords.IsDeleted AS Deleted FROM AccountRecords WHERE AccountRecords.DocNo = ? ;" with parameters "('AR6301-0444',)"
2021-04-28 20:18:53,026: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:18:53,102: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:18:53,106: client.py: DEBUG: server process completed
2021-04-28 20:18:53,114: elements.py: DEBUG: DataTable account: appending 17 rows to the table
2021-04-28 20:18:53,124: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:53,131: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value NAR6301-0105 for display
2021-04-28 20:18:53,131: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:18:53,137: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:53,138: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:18:53,138: elements.py: DEBUG: DataTable Totals: table totals calculated as 29120.0
2021-04-28 20:18:53,139: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:18:53,163: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:53,164: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:18:53,164: elements.py: DEBUG: DataTable account: table totals calculated as 29120.0
2021-04-28 20:18:53,165: parameters.py: DEBUG: DataParameter CreatorName: formatting parameter value ชุติมา วงษ์อุบล for display
2021-04-28 20:18:53,166: parameters.py: DEBUG: DataParameter EditorName: formatting parameter value None for display
2021-04-28 20:18:54,029: records.py: DEBUG: Record NAR6301-0105: resizing display to 864, 648
2021-04-28 20:18:54,030: elements.py: DEBUG: DataTable Totals: resizing element display to 800, 1
2021-04-28 20:18:54,031: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:18:54,031: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:18:54,031: elements.py: DEBUG: DataTable account: resizing element display to 800, 129
2021-04-28 20:18:54,031: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:18:54,032: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:18:54,032: secondary.py: DEBUG: centering window
2021-04-28 20:18:55,185: secondary.py: DEBUG: current window size: (864, 880)
2021-04-28 20:18:55,185: secondary.py: DEBUG: window current location: (598, 24)
2021-04-28 20:18:55,185: secondary.py: DEBUG: window new location: (528, 100)
2021-04-28 20:18:55,193: secondary.py: DEBUG: window real location: (528, 100)
2021-04-28 20:18:55,193: elements.py: WARNING: DataElement Branch: unable to locate values for element key -Branch_247562900_Element-
2021-04-28 20:18:55,193: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_7224834_Element-
2021-04-28 20:18:55,193: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 20:18:55,193: elements.py: INFO: DataTable Totals: filtering the display table based on user-supplied parameter values
2021-04-28 20:18:55,194: elements.py: INFO: DataTable Totals: annotating display table on configured annotation rules
2021-04-28 20:18:55,200: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:18:55,200: elements.py: DEBUG: DataTable Totals: table totals calculated as 29120.0
2021-04-28 20:18:55,201: elements.py: DEBUG: DataTable Totals: table totals are formatted as float
2021-04-28 20:18:55,201: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:18:55,201: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:18:55,202: elements.py: INFO: DataTable account: filtering the display table based on user-supplied parameter values
2021-04-28 20:18:55,203: elements.py: INFO: DataTable account: annotating display table on configured annotation rules
2021-04-28 20:18:55,203: elements.py: DEBUG: DataTable account: annotating table based on configured annotation rule "AlteredAmount"
2021-04-28 20:18:55,204: elements.py: DEBUG: DataTable account: annotation results of rule AlteredAmount are [False, False, True]
2021-04-28 20:18:55,205: elements.py: DEBUG: DataTable account: table row 2 annotated on annotation code AlteredAmount
2021-04-28 20:18:55,228: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:18:55,229: elements.py: DEBUG: DataTable account: table totals calculated as 29120.0
2021-04-28 20:18:55,229: elements.py: DEBUG: DataTable account: table totals are formatted as float
2021-04-28 20:18:55,230: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:18:55,230: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:18:55,231: elements.py: DEBUG: DataTable Totals: table totals calculated as 29120.0
2021-04-28 20:18:55,232: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:18:55,232: elements.py: DEBUG: DataTable account: table totals calculated as 29120.0
2021-04-28 20:18:55,232: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value NAR6301-0105 for display
2021-04-28 20:18:55,232: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value 0.0 for display
2021-04-28 20:19:08,483: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs NAR6301-0105 from the list of unsaved record IDs
2021-04-28 20:19:08,534: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:08,610: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:08,614: client.py: DEBUG: server process completed
2021-04-28 20:19:08,617: records.py: ERROR: RecordEntry NonCashAuditRecord: failed to remove IDs ['NAR6301-0105'] from the list of unsaved record IDs of type NonCashAuditRecord - action 'NAR6301-0105' is not in list failed - 'NAR6301-0105' is not in list
2021-04-28 20:19:11,521: elements.py: INFO: ReferenceElement DepositRecord: running event -DepositRecord_434338619_Reference-
2021-04-28 20:19:11,521: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:19:11,522: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:19:11,522: parameters.py: DEBUG: DataParameter DepositAmount: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:19:11,522: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:19:11,522: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:19:11,522: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:19:11,523: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:19:11,523: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:19:11,523: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:19:11,523: elements.py: DEBUG: DataElement DepositDate: initializing date element of data type datetime with default value None and formatted value None
2021-04-28 20:19:11,524: elements.py: DEBUG: DataElement PaymentType: initializing dropdown element of data type string with default value None and formatted value None
2021-04-28 20:19:11,524: elements.py: DEBUG: DataElement Account: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:19:11,524: elements.py: DEBUG: DataElement PaymentNo: initializing input element of data type str with default value None and formatted value None
2021-04-28 20:19:11,524: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:19:11,538: records.py: INFO: RecordType DepositRecord: initializing record
2021-04-28 20:19:11,538: records.py: DEBUG: RecordType DepositRecord: {'RecordID': 'BD6301-0308', 'RecordDate': '2020-01-02', 'PaymentType': 'Transfer', 'PaymentNo': None, 'DepositAmount': 1900.0, 'DepositDate': '2019-12-28', 'Account': '516-602-1347', 'Notes': None, 'Warnings': None, 'CreationTime': Timestamp('2021-02-15 16:05:11+0000', tz='<bson.tz_util.FixedOffset object at 0x000001C37AD3AD60>'), 'CreatorName': 'ชุติมา วงษ์อุบล', 'EditTime': None, 'EditorName': None, 'MarkedForDeletion': False, 'Approved': False, 'Deleted': False}
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing header RecordID with value BD6301-0308
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing header RecordDate with value 2020-01-02
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing header DepositAmount with value 1900.0
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing modifier CreatorName with value ชุติมา วงษ์อุบล
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing modifier CreationTime with value 2021-02-15 16:05:11+00:00
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing modifier EditorName with value None
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing modifier EditTime with value None
2021-04-28 20:19:11,539: records.py: DEBUG: RecordType DepositRecord: initializing modifier MarkedForDeletion with value False
2021-04-28 20:19:11,540: records.py: DEBUG: RecordType DepositRecord: initializing modifier Deleted with value False
2021-04-28 20:19:11,540: records.py: DEBUG: RecordType DepositRecord: initializing data element DepositDate with value 2019-12-28
2021-04-28 20:19:11,540: elements.py: WARNING: DataElement DepositDate: date was selected for the data element but a date format was not provided ... defaulting to "YYYY-MM-DD"
2021-04-28 20:19:11,541: elements.py: DEBUG: DataElement DepositDate: input value 2019-12-28 formatted as 2019-12-28 00:00:00
2021-04-28 20:19:11,541: records.py: DEBUG: RecordType DepositRecord: initializing data element PaymentType with value Transfer
2021-04-28 20:19:11,541: elements.py: DEBUG: DataElement PaymentType: input value Transfer formatted as Transfer
2021-04-28 20:19:11,541: records.py: DEBUG: RecordType DepositRecord: initializing data element Account with value 516-602-1347
2021-04-28 20:19:11,541: elements.py: DEBUG: DataElement Account: input value 516-602-1347 formatted as 516-602-1347
2021-04-28 20:19:11,541: records.py: DEBUG: RecordType DepositRecord: no value set for parameter PaymentNo
2021-04-28 20:19:11,541: records.py: DEBUG: RecordType DepositRecord: no value set for parameter Notes
2021-04-28 20:19:11,541: records.py: INFO: RecordType DepositRecord: initialized record has ID BD6301-0308
2021-04-28 20:19:11,542: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('BD6301-0308', 'BD6301-0308')"
2021-04-28 20:19:11,592: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:19:11,657: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:19:11,661: client.py: DEBUG: server process completed
2021-04-28 20:19:11,668: records.py: INFO: RecordType DepositRecord: importing references and components
2021-04-28 20:19:11,669: records.py: DEBUG: RecordType DepositRecord: adding component record AR6301-0442 with record type AccountRecord
2021-04-28 20:19:11,669: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo AS RecordID, AccountRecords.DocDate AS RecordDate, AccountRecords.DepartCode AS Branch, AccountRecords.AccountNo AS Account, AccountRecords.PaymentNo, AccountRecords.RefDate AS PaymentDate, AccountRecords.CustomerName AS Customer, AccountRecords.PaymentType, AccountRecords.TotalAmount AS Amount, AccountRecords.CorrectedAmount, AccountRecords.Notes, AccountRecords.CreationTime, AccountRecords.CreatorName, AccountRecords.EditTime, AccountRecords.EditorName, AccountRecords.IsMarkedForDeletion AS MarkedForDeletion, AccountRecords.IsDeleted AS Deleted FROM AccountRecords WHERE AccountRecords.DocNo = ? ;" with parameters "('AR6301-0442',)"
2021-04-28 20:19:11,722: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:19:11,796: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:19:11,800: client.py: DEBUG: server process completed
2021-04-28 20:19:11,817: elements.py: DEBUG: DataTable account: appending 17 rows to the table
2021-04-28 20:19:11,824: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:19:11,831: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value BD6301-0308 for display
2021-04-28 20:19:11,832: parameters.py: DEBUG: DataParameter DepositAmount: formatting parameter value 1900.0 for display
2021-04-28 20:19:11,832: elements.py: WARNING: DataElement DepositDate: component Calendar not found in list of element components
2021-04-28 20:19:11,834: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:19:11,852: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:19:11,853: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:11,853: elements.py: DEBUG: DataTable account: table totals calculated as 1900.0
2021-04-28 20:19:11,853: elements.py: INFO: DataTable cash_expense: setting column data types to configured data types
2021-04-28 20:19:11,863: elements.py: DEBUG: DataTable cash_expense: calculating table column widths
2021-04-28 20:19:11,864: elements.py: INFO: DataTable cash_expense: calculating table totals
2021-04-28 20:19:11,864: elements.py: DEBUG: DataTable cash_expense: table totals calculated as 0
2021-04-28 20:19:11,864: parameters.py: DEBUG: DataParameter CreatorName: formatting parameter value ชุติมา วงษ์อุบล for display
2021-04-28 20:19:11,865: parameters.py: DEBUG: DataParameter EditorName: formatting parameter value None for display
2021-04-28 20:19:12,760: records.py: DEBUG: Record BD6301-0308: resizing display to 864, 648
2021-04-28 20:19:12,761: elements.py: DEBUG: DataTable account: resizing element display to 800, 129
2021-04-28 20:19:12,762: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:19:12,763: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:19:12,763: elements.py: DEBUG: DataTable cash_expense: resizing element display to 800, 129
2021-04-28 20:19:12,763: elements.py: DEBUG: DataTable cash_expense: calculating table column widths
2021-04-28 20:19:12,763: elements.py: DEBUG: DataTable cash_expense: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:19:12,764: secondary.py: DEBUG: centering window
2021-04-28 20:19:13,685: secondary.py: DEBUG: current window size: (864, 880)
2021-04-28 20:19:13,685: secondary.py: DEBUG: window current location: (585, 24)
2021-04-28 20:19:13,685: secondary.py: DEBUG: window new location: (528, 100)
2021-04-28 20:19:13,689: secondary.py: DEBUG: window real location: (528, 100)
2021-04-28 20:19:13,689: elements.py: WARNING: DataElement DepositDate: unable to locate values for element key -DepositDate_448403194_Element-
2021-04-28 20:19:13,690: elements.py: WARNING: DataElement PaymentType: unable to locate values for element key -PaymentType_228751225_Element-
2021-04-28 20:19:13,690: elements.py: WARNING: DataElement Account: unable to locate values for element key -Account_371788910_Element-
2021-04-28 20:19:13,690: elements.py: WARNING: DataElement PaymentNo: unable to locate values for element key -PaymentNo_307844838_Element-
2021-04-28 20:19:13,691: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_230999369_Element-
2021-04-28 20:19:13,691: elements.py: INFO: DataTable account: sorting table on ['RecordDate', 'RecordID']
2021-04-28 20:19:13,694: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:19:13,694: elements.py: INFO: DataTable account: filtering the display table based on user-supplied parameter values
2021-04-28 20:19:13,695: elements.py: INFO: DataTable account: annotating display table on configured annotation rules
2021-04-28 20:19:13,707: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:13,707: elements.py: DEBUG: DataTable account: table totals calculated as 1900.0
2021-04-28 20:19:13,707: elements.py: DEBUG: DataTable account: table totals are formatted as float
2021-04-28 20:19:13,707: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:19:13,708: elements.py: INFO: DataTable cash_expense: formatting table for displaying
2021-04-28 20:19:13,714: elements.py: INFO: DataTable cash_expense: calculating table totals
2021-04-28 20:19:13,714: elements.py: DEBUG: DataTable cash_expense: table totals calculated as 0
2021-04-28 20:19:13,714: elements.py: DEBUG: DataTable cash_expense: table totals are formatted as a string
2021-04-28 20:19:13,715: elements.py: INFO: DataTable cash_expense: summarizing display table on configured summary rules
2021-04-28 20:19:13,715: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:13,715: elements.py: DEBUG: DataTable account: table totals calculated as 1900.0
2021-04-28 20:19:13,715: records.py: DEBUG: Record BD6301-0308: total income was calculated from the accounts table is 1900.0
2021-04-28 20:19:13,715: elements.py: INFO: DataTable cash_expense: calculating table totals
2021-04-28 20:19:13,716: elements.py: DEBUG: DataTable cash_expense: table totals calculated as 0
2021-04-28 20:19:13,716: records.py: DEBUG: Record BD6301-0308: total expenditures was calculated from the expense table to be 0
2021-04-28 20:19:13,716: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value BD6301-0308 for display
2021-04-28 20:19:13,716: parameters.py: DEBUG: DataParameter DepositAmount: formatting parameter value 1900.0 for display
2021-04-28 20:19:19,958: records.py: DEBUG: RecordEntry DepositRecord: attempting to remove IDs BD6301-0308 from the list of unsaved record IDs
2021-04-28 20:19:20,004: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:20,080: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:20,085: client.py: DEBUG: server process completed
2021-04-28 20:19:20,090: records.py: ERROR: RecordEntry DepositRecord: failed to remove IDs ['BD6301-0308'] from the list of unsaved record IDs of type DepositRecord - action 'BD6301-0308' is not in list failed - 'BD6301-0308' is not in list
2021-04-28 20:19:21,298: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs AR6301-0442 from the list of unsaved record IDs
2021-04-28 20:19:21,343: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:21,408: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:21,411: client.py: DEBUG: server process completed
2021-04-28 20:19:21,459: records.py: ERROR: RecordEntry AccountRecord: failed to remove IDs ['AR6301-0442'] from the list of unsaved record IDs of type AccountRecord - action 'AR6301-0442' is not in list failed - 'AR6301-0442' is not in list
2021-04-28 20:19:25,338: client.py: INFO: sending request "db_schema" to ('192.168.1.12', 65432)
2021-04-28 20:19:25,430: client.py: INFO: receiving response to request "db_schema" from ('192.168.1.12', 65432)
2021-04-28 20:19:25,434: client.py: DEBUG: server process completed
2021-04-28 20:19:30,539: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:30,539: parameters.py: DEBUG: DataParameter Branch: resetting parameter value None to None
2021-04-28 20:19:30,539: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 20:19:30,540: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 20:19:30,540: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:19:30,540: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:30,540: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:19:30,540: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:19:30,540: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:19:30,544: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 20:19:30,559: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:19:30,560: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:19:30,561: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:19:30,561: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:19:30,565: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:19:30,579: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:30,579: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:19:30,579: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:19:30,580: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:19:30,581: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:19:30,581: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:30,581: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:19:30,582: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:19:30,582: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:19:30,584: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 20:19:30,589: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:19:30,590: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:19:30,590: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:19:30,590: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:19:30,594: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:19:30,608: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:30,608: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:19:30,608: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:19:30,608: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:19:30,612: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:19:30,612: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 20:19:30,625: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 20:19:30,626: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:19:30,626: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 20:19:30,626: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:19:30,626: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:30,626: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:30,627: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:30,628: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:30,628: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:30,629: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:30,629: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:30,630: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 20:19:30,631: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 20:19:30,633: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:19:30,633: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 20:19:30,653: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 20:19:30,654: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:19:30,654: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 20:19:30,654: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:19:30,654: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:19:30,655: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 20:19:30,655: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 20:19:30,657: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:19:30,658: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 20:19:30,676: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 20:19:30,676: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:19:30,676: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 20:19:30,676: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:19:30,676: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:30,677: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:30,677: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:30,678: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:30,678: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:30,679: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:30,679: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:30,680: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 20:19:30,681: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 20:19:30,683: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:19:30,684: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 20:19:30,700: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:19:30,701: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:19:30,701: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:19:30,701: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:19:30,701: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:30,702: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:30,702: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:30,703: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:30,703: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:30,704: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:30,704: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:30,705: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 20:19:30,706: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 20:19:30,708: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:19:30,709: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 20:19:30,727: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 20:19:30,727: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:19:30,727: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 20:19:30,727: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:19:30,728: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:30,728: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:30,728: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:30,729: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:30,729: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:30,730: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:30,730: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:30,732: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 20:19:30,732: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 20:19:30,740: main.py: DEBUG: panel in view is Transactions
2021-04-28 20:19:42,876: main.py: INFO: running window event -Transactions_873044697_Cancel- of rule Transactions
2021-04-28 20:19:42,880: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter Branch: resetting parameter value None to None
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:42,881: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:19:42,882: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:19:42,882: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:19:42,885: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 20:19:42,899: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:19:42,900: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:19:42,900: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:19:42,901: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:19:42,905: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:19:42,919: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:42,920: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:19:42,920: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:19:42,920: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:19:42,922: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:19:42,922: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:19:42,923: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:19:42,923: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:19:42,923: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:19:42,926: elements.py: INFO: DataTable Totals: formatting table for displaying
2021-04-28 20:19:42,931: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:19:42,932: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:19:42,932: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:19:42,933: elements.py: INFO: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:19:42,937: elements.py: INFO: DataTable account: formatting table for displaying
2021-04-28 20:19:42,950: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:19:42,951: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:19:42,951: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:19:42,951: elements.py: INFO: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:19:42,954: elements.py: INFO: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:19:42,955: elements.py: INFO: DataTable Cash: formatting table for displaying
2021-04-28 20:19:42,967: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 20:19:42,968: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:19:42,968: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 20:19:42,968: elements.py: INFO: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:19:42,968: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:42,969: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:42,969: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:42,970: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:42,970: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:42,971: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:42,971: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:42,972: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 20:19:42,972: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 20:19:42,975: elements.py: INFO: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:19:42,976: elements.py: INFO: DataTable Return: formatting table for displaying
2021-04-28 20:19:42,998: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 20:19:42,998: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:19:42,999: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 20:19:42,999: elements.py: INFO: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:19:42,999: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:19:42,999: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 20:19:43,000: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 20:19:43,002: elements.py: INFO: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:19:43,002: elements.py: INFO: DataTable Receipt: formatting table for displaying
2021-04-28 20:19:43,020: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 20:19:43,021: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:19:43,021: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 20:19:43,021: elements.py: INFO: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:19:43,021: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:43,022: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:43,022: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:43,023: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:43,023: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:43,024: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:43,024: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:43,025: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 20:19:43,026: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 20:19:43,028: elements.py: INFO: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:19:43,028: elements.py: INFO: DataTable Deposit: formatting table for displaying
2021-04-28 20:19:43,043: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:19:43,043: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:19:43,043: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:19:43,044: elements.py: INFO: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:19:43,044: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:43,044: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:43,044: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:43,045: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:43,045: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:43,046: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:43,046: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:43,048: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 20:19:43,048: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 20:19:43,050: elements.py: INFO: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:19:43,051: elements.py: INFO: DataTable ARV: formatting table for displaying
2021-04-28 20:19:43,067: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 20:19:43,067: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:19:43,067: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 20:19:43,067: elements.py: INFO: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:19:43,067: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:19:43,068: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:19:43,068: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:19:43,069: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:19:43,069: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:19:43,070: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:19:43,070: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:19:43,071: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 20:19:43,072: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 20:19:45,942: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,001: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,068: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,071: client.py: DEBUG: server process completed
2021-04-28 20:19:46,080: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,081: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:46,135: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,203: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,206: client.py: DEBUG: server process completed
2021-04-28 20:19:46,213: records.py: DEBUG: RecordEntry AccountRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,213: records.py: DEBUG: RecordEntry DepositRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,272: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,344: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,347: client.py: DEBUG: server process completed
2021-04-28 20:19:46,352: records.py: DEBUG: RecordEntry DepositRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,352: records.py: DEBUG: RecordEntry DepositRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:46,407: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,483: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,487: client.py: DEBUG: server process completed
2021-04-28 20:19:46,492: records.py: DEBUG: RecordEntry DepositRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,492: records.py: DEBUG: RecordEntry BankRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,548: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,616: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,619: client.py: DEBUG: server process completed
2021-04-28 20:19:46,626: records.py: DEBUG: RecordEntry BankRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,626: records.py: DEBUG: RecordEntry BankRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:46,683: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,758: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,762: client.py: DEBUG: server process completed
2021-04-28 20:19:46,769: records.py: DEBUG: RecordEntry BankRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,769: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,823: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:46,897: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:46,900: client.py: DEBUG: server process completed
2021-04-28 20:19:46,905: records.py: DEBUG: RecordEntry CashExpenseRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:46,906: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:46,960: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:47,037: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:47,040: client.py: DEBUG: server process completed
2021-04-28 20:19:47,048: records.py: DEBUG: RecordEntry CashExpenseRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,048: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,108: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:47,177: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:47,181: client.py: DEBUG: server process completed
2021-04-28 20:19:47,189: records.py: DEBUG: RecordEntry CashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,190: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:47,255: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:47,341: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:47,345: client.py: DEBUG: server process completed
2021-04-28 20:19:47,352: records.py: DEBUG: RecordEntry CashAuditRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,352: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,405: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:47,477: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:47,480: client.py: DEBUG: server process completed
2021-04-28 20:19:47,485: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,486: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs [] from the list of unsaved record IDs
2021-04-28 20:19:47,539: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:19:47,610: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:19:47,614: client.py: DEBUG: server process completed
2021-04-28 20:19:47,620: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully removed [] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:19:47,621: client.py: INFO: closing connection to ('192.168.1.12', 65432)
2021-04-28 20:22:43,079: client.py: INFO: settings locale to Thai
2021-04-28 20:22:43,095: client.py: INFO: dates will be offset by 543 years
2021-04-28 20:22:43,096: client.py: WARNING: unable to find translations for locale en - [Errno 2] No translation file found for domain: 'base'
2021-04-28 20:22:43,096: client.py: INFO: opening a socket to connect to the server
2021-04-28 20:22:43,097: client.py: INFO: socket successfully created
2021-04-28 20:22:43,097: client.py: INFO: initializing connection to server 192.168.1.12 on port 65432
2021-04-28 20:22:43,098: client.py: INFO: loading program configuration from the server
2021-04-28 20:22:43,557: client.py: INFO: sending request "constants" to ('192.168.1.12', 65432)
2021-04-28 20:22:44,966: client.py: INFO: receiving response to request "constants" from ('192.168.1.12', 65432)
2021-04-28 20:22:44,991: client.py: DEBUG: server process completed
2021-04-28 20:22:45,036: main.py: DEBUG: determining screen size
2021-04-28 20:22:45,147: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,147: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,172: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,172: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,172: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:22:45,172: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,172: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,173: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,173: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,173: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:22:45,173: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:22:45,173: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:22:45,173: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:22:45,176: records.py: WARNING: no reference record types configured for CashAuditRecord
2021-04-28 20:22:45,181: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,181: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,181: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:22:45,181: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,181: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,182: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,182: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:22:45,182: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:22:45,182: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:22:45,182: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:22:45,182: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:22:45,185: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 20:22:45,190: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:22:45,190: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,190: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:22:45,191: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,191: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,194: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,194: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:22:45,194: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,194: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,196: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,198: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,198: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:22:45,198: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,198: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,203: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,203: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:22:45,203: parameters.py: DEBUG: DataParameter TransactionType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:22:45,203: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,203: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:22:45,207: main.py: DEBUG: creating the layout for accounting method audit_rules, rule Transactions
2021-04-28 20:22:45,223: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:22:45,224: elements.py: INFO: DataTable Cash: calculating table totals
2021-04-28 20:22:45,224: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:22:45,253: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:22:45,253: elements.py: INFO: DataTable Return: calculating table totals
2021-04-28 20:22:45,253: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:22:45,278: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:22:45,278: elements.py: INFO: DataTable Receipt: calculating table totals
2021-04-28 20:22:45,279: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:22:45,297: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:45,297: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:22:45,297: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:22:45,319: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:22:45,320: elements.py: INFO: DataTable ARV: calculating table totals
2021-04-28 20:22:45,320: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:22:45,321: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,322: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:22:45,336: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:45,336: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:22:45,342: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:22:45,343: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:22:45,363: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:45,364: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:22:45,364: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:22:45,365: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,365: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:22:45,372: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:45,372: elements.py: INFO: DataTable Totals: calculating table totals
2021-04-28 20:22:45,373: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:22:45,374: elements.py: INFO: DataTable account: setting column data types to configured data types
2021-04-28 20:22:45,395: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:45,395: elements.py: INFO: DataTable account: calculating table totals
2021-04-28 20:22:45,396: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:22:45,398: main.py: DEBUG: creating the layout for accounting method bank_rules, rule Account 532-6-00669-3
2021-04-28 20:22:45,409: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,410: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:45,411: elements.py: INFO: DataTable Deposit: calculating table totals
2021-04-28 20:22:45,422: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,423: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:22:45,423: elements.py: INFO: DataTable Withdrawal: calculating table totals
2021-04-28 20:22:45,433: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,434: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:22:45,435: elements.py: INFO: DataTable TransactionsIn: calculating table totals
2021-04-28 20:22:45,445: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:22:45,446: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:22:45,446: elements.py: INFO: DataTable Account 5045-4: calculating table totals
2021-04-28 20:22:48,096: main.py: INFO: starting the program
2021-04-28 20:22:48,096: main.py: DEBUG: screen size is 1920 x 1080
2021-04-28 20:22:48,099: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:22:48,099: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:22:48,100: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,100: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:22:48,100: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:22:48,101: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,101: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:22:48,102: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:22:48,102: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,102: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:22:48,103: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:48,103: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,103: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:22:48,103: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:22:48,104: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,104: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:22:48,105: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:22:48,105: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:48,106: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:22:48,106: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:22:48,106: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:48,106: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:22:48,106: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:48,108: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:22:48,109: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:22:48,110: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,119: main.py: DEBUG: new window size is 1920 x 1017
2021-04-28 20:22:48,120: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:22:48,120: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:22:48,120: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,121: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:22:48,121: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:22:48,121: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,121: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:22:48,121: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:22:48,122: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:22:48,123: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,123: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:22:48,123: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:22:48,123: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:48,123: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:22:48,124: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:22:48,124: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:48,124: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:22:48,124: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:22:48,124: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:22:48,124: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:22:48,125: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:22:48,126: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:22:48,127: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:22:48,127: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:22:48,127: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:22:48,127: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:22:49,808: main.py: DEBUG: displaying user login screen
2021-04-28 20:22:51,140: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:22:51,207: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:22:51,210: client.py: DEBUG: server process completed
2021-04-28 20:22:51,255: main.py: INFO: user signed in as "christopher"
2021-04-28 20:22:55,955: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,018: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,092: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,096: client.py: DEBUG: server process completed
2021-04-28 20:22:56,102: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,103: records.py: DEBUG: RecordEntry DepositRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,157: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,229: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,231: client.py: DEBUG: server process completed
2021-04-28 20:22:56,238: records.py: DEBUG: RecordEntry DepositRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,238: records.py: DEBUG: RecordEntry BankRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,302: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,381: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,383: client.py: DEBUG: server process completed
2021-04-28 20:22:56,389: records.py: DEBUG: RecordEntry BankRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,390: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,446: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,519: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,522: client.py: DEBUG: server process completed
2021-04-28 20:22:56,528: records.py: DEBUG: RecordEntry CashExpenseRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,528: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,584: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,657: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,660: client.py: DEBUG: server process completed
2021-04-28 20:22:56,666: records.py: DEBUG: RecordEntry CashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,667: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,725: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:22:56,806: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:22:56,809: client.py: DEBUG: server process completed
2021-04-28 20:22:56,816: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:22:56,816: client.py: INFO: closing connection to ('192.168.1.12', 65432)
2021-04-28 20:38:05,917: client.py: INFO: settings locale to Thai
2021-04-28 20:38:05,938: client.py: INFO: dates will be offset by 543 years
2021-04-28 20:38:05,939: client.py: WARNING: unable to find translations for locale en - [Errno 2] No translation file found for domain: 'base'
2021-04-28 20:38:05,939: client.py: INFO: opening a socket to connect to the server
2021-04-28 20:38:05,940: client.py: INFO: socket successfully created
2021-04-28 20:38:05,940: client.py: INFO: initializing connection to server 192.168.1.12 on port 65432
2021-04-28 20:38:05,941: client.py: INFO: loading program configuration from the server
2021-04-28 20:38:06,409: client.py: INFO: sending request "constants" to ('192.168.1.12', 65432)
2021-04-28 20:38:07,790: client.py: INFO: receiving response to request "constants" from ('192.168.1.12', 65432)
2021-04-28 20:38:07,813: client.py: DEBUG: server process completed
2021-04-28 20:38:07,842: main.py: DEBUG: determining screen size
2021-04-28 20:38:07,943: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,944: parameters.py: DEBUG: DataParameter Branch: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,973: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,973: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,974: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:38:07,975: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:38:07,975: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:38:07,975: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:38:07,979: records.py: WARNING: no reference record types configured for CashAuditRecord
2021-04-28 20:38:07,986: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter Remainder: initializing input parameter of data type money with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,987: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:38:07,988: parameters.py: DEBUG: DataParameter MarkedForDeletion: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:38:07,988: parameters.py: DEBUG: DataParameter Deleted: initializing checkbox parameter of data type bool with default value False, formatted value False
2021-04-28 20:38:07,988: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:38:07,988: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:38:07,992: records.py: WARNING: no reference record types configured for NonCashAuditRecord
2021-04-28 20:38:07,998: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:38:07,999: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:07,999: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:38:07,999: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:07,999: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,005: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:08,006: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:38:08,006: parameters.py: DEBUG: DataParameter PaymentType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:08,006: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,006: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,011: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:08,011: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:38:08,011: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,011: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,016: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:08,016: parameters.py: DEBUG: DataParameter RecordDate: initializing date_range parameter of data type date with default value None, and formatted value [None, None]
2021-04-28 20:38:08,016: parameters.py: DEBUG: DataParameter TransactionType: initializing dropdown parameter of data type string with default value None, and formatted value None
2021-04-28 20:38:08,017: parameters.py: DEBUG: DataParameter ReferenceWarnings: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,017: parameters.py: DEBUG: DataParameter ReferenceID: initializing checkbox parameter of data type bool with default value 0, formatted value False
2021-04-28 20:38:08,022: main.py: DEBUG: creating the layout for accounting method audit_rules, rule Transactions
2021-04-28 20:38:08,040: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:38:08,041: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:38:08,041: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:38:08,078: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:38:08,079: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:38:08,079: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:38:08,102: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:38:08,102: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:38:08,104: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:38:08,124: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:08,124: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:38:08,125: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:38:08,150: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:38:08,151: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:38:08,151: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:38:08,152: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,153: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:38:08,168: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:08,168: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:38:08,174: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:38:08,175: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:38:08,206: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:08,206: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:38:08,207: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:38:08,208: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,208: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value None for display
2021-04-28 20:38:08,216: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:08,216: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:38:08,217: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:38:08,217: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:38:08,248: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:08,249: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:38:08,250: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:38:08,252: main.py: DEBUG: creating the layout for accounting method bank_rules, rule Account 532-6-00669-3
2021-04-28 20:38:08,269: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,271: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:08,271: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:38:08,285: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,287: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:38:08,287: elements.py: DEBUG: DataTable Withdrawal: calculating table totals
2021-04-28 20:38:08,301: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,302: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:38:08,302: elements.py: DEBUG: DataTable TransactionsIn: calculating table totals
2021-04-28 20:38:08,315: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value None for display
2021-04-28 20:38:08,317: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:38:08,317: elements.py: DEBUG: DataTable Account 5045-4: calculating table totals
2021-04-28 20:38:11,103: main.py: INFO: starting the program
2021-04-28 20:38:11,103: main.py: DEBUG: screen size is 1920 x 1080
2021-04-28 20:38:11,105: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,106: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:38:11,107: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:38:11,107: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,107: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:38:11,107: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:11,107: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,108: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:38:11,108: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:38:11,108: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,108: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:11,109: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:38:11,109: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:38:11,110: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:38:11,110: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:11,110: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:38:11,110: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:38:11,110: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:11,111: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:38:11,111: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:38:11,111: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:11,111: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:38:11,111: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:38:11,112: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:38:11,113: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,122: main.py: DEBUG: new window size is 1920 x 1017
2021-04-28 20:38:11,123: elements.py: DEBUG: DataTable Cash: resizing element display to 1576, 362
2021-04-28 20:38:11,123: elements.py: DEBUG: DataTable Cash: calculating table column widths
2021-04-28 20:38:11,123: elements.py: DEBUG: DataTable Cash: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,123: elements.py: DEBUG: DataTable Return: resizing element display to 1576, 362
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Return: calculating table column widths
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Return: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Receipt: resizing element display to 1576, 362
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Receipt: calculating table column widths
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Receipt: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,124: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 362
2021-04-28 20:38:11,125: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:11,125: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,125: elements.py: DEBUG: DataTable ARV: resizing element display to 1576, 362
2021-04-28 20:38:11,125: elements.py: DEBUG: DataTable ARV: calculating table column widths
2021-04-28 20:38:11,125: elements.py: DEBUG: DataTable ARV: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,125: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:38:11,126: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:38:11,126: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:11,126: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:38:11,126: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:38:11,126: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:38:11,127: records.py: DEBUG: Record None: resizing display to 1606, 544.005
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable Totals: resizing element display to 1542, 1
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable Totals: calculating table column widths
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable Totals: changing the number of rows in the table from 1 to 1 based on table size difference 0
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable account: resizing element display to 1542, 108
2021-04-28 20:38:11,127: elements.py: DEBUG: DataTable account: calculating table column widths
2021-04-28 20:38:11,128: elements.py: DEBUG: DataTable account: changing the number of rows in the table from 10 to 9 based on table size difference -1
2021-04-28 20:38:11,128: elements.py: DEBUG: DataTable Deposit: resizing element display to 1576, 364
2021-04-28 20:38:11,128: elements.py: DEBUG: DataTable Deposit: calculating table column widths
2021-04-28 20:38:11,128: elements.py: DEBUG: DataTable Deposit: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable TransactionsIn: resizing element display to 1576, 404
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable TransactionsIn: calculating table column widths
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable TransactionsIn: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable Withdrawal: resizing element display to 1576, 364
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable Withdrawal: calculating table column widths
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable Withdrawal: changing the number of rows in the table from 10 to 12 based on table size difference 2
2021-04-28 20:38:11,129: elements.py: DEBUG: DataTable Account 5045-4: resizing element display to 1576, 404
2021-04-28 20:38:11,130: elements.py: DEBUG: DataTable Account 5045-4: calculating table column widths
2021-04-28 20:38:11,130: elements.py: DEBUG: DataTable Account 5045-4: changing the number of rows in the table from 10 to 11 based on table size difference 1
2021-04-28 20:38:12,862: main.py: DEBUG: displaying user login screen
2021-04-28 20:38:14,275: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:14,347: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:14,351: client.py: DEBUG: server process completed
2021-04-28 20:38:14,407: main.py: INFO: user signed in as "christopher"
2021-04-28 20:38:16,385: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter Branch: resetting parameter value None to None
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:38:16,386: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:38:16,387: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:38:16,387: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:38:16,390: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:38:16,404: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:38:16,406: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:38:16,406: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:38:16,406: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:38:16,411: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:38:16,425: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:38:16,425: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:38:16,426: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:38:16,426: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:38:16,427: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value None to None
2021-04-28 20:38:16,428: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value None to None
2021-04-28 20:38:16,428: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value None to None
2021-04-28 20:38:16,428: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:38:16,428: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:38:16,431: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:38:16,436: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:38:16,437: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:38:16,437: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:38:16,437: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:38:16,442: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:38:16,457: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:38:16,457: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:38:16,457: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:38:16,457: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:38:16,461: elements.py: DEBUG: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:38:16,461: elements.py: DEBUG: DataTable Cash: formatting table for displaying
2021-04-28 20:38:16,475: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:38:16,475: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:38:16,475: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 20:38:16,475: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:38:16,475: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:16,476: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:16,476: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:16,477: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:16,477: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:16,478: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:16,478: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:16,480: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 20:38:16,480: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 20:38:16,483: elements.py: DEBUG: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:38:16,483: elements.py: DEBUG: DataTable Return: formatting table for displaying
2021-04-28 20:38:16,505: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:38:16,505: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:38:16,505: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 20:38:16,505: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:38:16,506: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:38:16,506: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 20:38:16,506: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 20:38:16,509: elements.py: DEBUG: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:38:16,509: elements.py: DEBUG: DataTable Receipt: formatting table for displaying
2021-04-28 20:38:16,528: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:38:16,529: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:38:16,529: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 20:38:16,529: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:38:16,529: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:16,530: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:16,530: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:16,531: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:16,531: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:16,532: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:16,532: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:16,534: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 20:38:16,534: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 20:38:16,536: elements.py: DEBUG: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:38:16,537: elements.py: DEBUG: DataTable Deposit: formatting table for displaying
2021-04-28 20:38:16,552: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:38:16,553: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:38:16,553: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:38:16,553: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:38:16,553: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:16,553: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:16,554: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:16,555: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:16,555: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:16,556: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:16,556: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:16,557: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 20:38:16,557: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 20:38:16,560: elements.py: DEBUG: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:38:16,560: elements.py: DEBUG: DataTable ARV: formatting table for displaying
2021-04-28 20:38:16,577: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:38:16,577: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:38:16,578: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 20:38:16,578: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:38:16,578: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:16,578: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:16,578: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:16,580: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:16,580: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:16,581: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:16,581: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:16,582: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 20:38:16,583: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 20:38:16,587: main.py: DEBUG: panel in view is Transactions
2021-04-28 20:38:25,989: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:25,990: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2
2021-04-28 20:38:26,170: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:26,172: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20
2021-04-28 20:38:26,389: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:26,390: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 201
2021-04-28 20:38:26,544: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:26,545: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019
2021-04-28 20:38:26,775: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:26,777: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20190
2021-04-28 20:38:26,985: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:26,987: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01
2021-04-28 20:38:27,289: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:27,291: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-010
2021-04-28 20:38:27,508: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:27,510: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-04
2021-04-28 20:38:29,231: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:29,232: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-0
2021-04-28 20:38:29,566: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:38:29,567: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-09
2021-04-28 20:38:31,370: main.py: INFO: running window event -Branch_546990455_Element- of rule Transactions
2021-04-28 20:38:31,371: parameters.py: DEBUG: DataParameter Branch: enforcing correct formatting of input value แม่อาย
2021-04-28 20:38:32,215: main.py: INFO: running window event -Transactions_21380940_Start- of rule Transactions
2021-04-28 20:38:32,217: audit.py: INFO: AuditRecordTab CashAuditRecord: attempting to load an existing audit record
2021-04-28 20:38:32,217: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo AS RecordID, CashAuditRecords.DocDate AS RecordDate, CashAuditRecords.DepartCode AS Branch, CashAuditRecords.Remainder, CashAuditRecords.Notes, CashAuditRecords.CashTotal AS CashSum, CashAuditRecords.ReceiptTotal AS ReceiptSum, CashAuditRecords.DepositTotal AS DepositSum, CashAuditRecords.ARVTotal AS ARVSum, CashAuditRecords.ReturnTotal AS ReturnSum, CashAuditRecords.OtherIncome AS SumOtherIncome, CashAuditRecords.OtherExpense AS SumExpenseReduction, CashAuditRecords.Withdrawal, CashAuditRecords.CreationTime, CashAuditRecords.CreatorName, CashAuditRecords.EditTime, CashAuditRecords.EditorName, CashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, CashAuditRecords.IsDeleted AS Deleted FROM CashAuditRecords WHERE CashAuditRecords.IsDeleted = ? AND CashAuditRecords.DocDate = ? AND CashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-09 00:00:00', 'B')"
2021-04-28 20:38:32,264: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:32,333: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:32,336: client.py: DEBUG: server process completed
2021-04-28 20:38:32,346: audit.py: INFO: AuditSummaryTab CashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 20:38:32,348: records.py: INFO: creating a new ID for the record
2021-04-28 20:38:32,348: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:38:32,392: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:38:32,454: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:38:32,458: client.py: DEBUG: server process completed
2021-04-28 20:38:32,468: records.py: DEBUG: RecordEntry CashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:38:32,468: records.py: DEBUG: RecordEntry CashAuditRecord: new ID has date component 6201
2021-04-28 20:38:32,468: records.py: DEBUG: RecordEntry CashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:38:32,468: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 20:38:32,468: records.py: DEBUG: RecordEntry CashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 20:38:32,468: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo FROM CashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY CashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 20:38:32,517: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:32,591: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:32,595: client.py: DEBUG: server process completed
2021-04-28 20:38:32,604: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 database records with date component 6201
2021-04-28 20:38:32,604: records.py: INFO: RecordEntry CashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 20:38:32,604: records.py: INFO: RecordEntry CashAuditRecord: new record ID is CAR6201-0001
2021-04-28 20:38:32,604: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to add record ID CAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:38:32,652: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:38:32,719: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:38:32,722: client.py: DEBUG: server process completed
2021-04-28 20:38:32,736: records.py: DEBUG: RecordEntry CashAuditRecord: successfully added record ID CAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:38:32,736: audit.py: DEBUG: AuditRuleTab CashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 20:38:32,736: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Notes
2021-04-28 20:38:32,736: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Totals
2021-04-28 20:38:32,736: records.py: INFO: RecordType CashAuditRecord: initializing record
2021-04-28 20:38:32,737: records.py: DEBUG: RecordType CashAuditRecord: {'RecordID': 'CAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 9, 0, 0), 'Branch': 'B'}
2021-04-28 20:38:32,737: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordID with value CAR6201-0001
2021-04-28 20:38:32,737: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordDate with value 2019-01-09 00:00:00
2021-04-28 20:38:32,737: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for header Remainder
2021-04-28 20:38:32,737: records.py: DEBUG: RecordType CashAuditRecord: initializing data element Branch with value B
2021-04-28 20:38:32,737: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 20:38:32,737: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for data element Notes
2021-04-28 20:38:32,739: records.py: INFO: RecordType CashAuditRecord: initialized record has ID CAR6201-0001
2021-04-28 20:38:32,739: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('CAR6201-0001', 'CAR6201-0001')"
2021-04-28 20:38:32,788: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:32,865: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:32,887: client.py: DEBUG: server process completed
2021-04-28 20:38:32,900: records.py: INFO: RecordType CashAuditRecord: importing references and components
2021-04-28 20:38:32,902: audit.py: INFO: AuditRecordTab NonCashAuditRecord: attempting to load an existing audit record
2021-04-28 20:38:32,902: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo AS RecordID, NonCashAuditRecords.DocDate AS RecordDate, NonCashAuditRecords.DepartCode AS Branch, NonCashAuditRecords.Remainder, NonCashAuditRecords.Notes, NonCashAuditRecords.ChequeTotal AS ChequeSum, NonCashAuditRecords.TransferTotal AS BankSum, NonCashAuditRecords.CreditTotal AS CreditSum, NonCashAuditRecords.CreationTime, NonCashAuditRecords.CreatorName, NonCashAuditRecords.EditTime, NonCashAuditRecords.EditorName, NonCashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, NonCashAuditRecords.IsDeleted AS Deleted FROM NonCashAuditRecords WHERE NonCashAuditRecords.IsDeleted = ? AND NonCashAuditRecords.DocDate = ? AND NonCashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-09 00:00:00', 'B')"
2021-04-28 20:38:32,950: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:33,016: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:33,019: client.py: DEBUG: server process completed
2021-04-28 20:38:33,029: audit.py: INFO: AuditSummaryTab NonCashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 20:38:33,029: records.py: INFO: creating a new ID for the record
2021-04-28 20:38:33,029: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:38:33,075: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:38:33,155: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:38:33,160: client.py: DEBUG: server process completed
2021-04-28 20:38:33,171: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:38:33,171: records.py: DEBUG: RecordEntry NonCashAuditRecord: new ID has date component 6201
2021-04-28 20:38:33,171: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:38:33,172: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 20:38:33,172: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 20:38:33,172: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo FROM NonCashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY NonCashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 20:38:33,219: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:33,298: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:33,301: client.py: DEBUG: server process completed
2021-04-28 20:38:33,313: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 database records with date component 6201
2021-04-28 20:38:33,313: records.py: INFO: RecordEntry NonCashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 20:38:33,313: records.py: INFO: RecordEntry NonCashAuditRecord: new record ID is NAR6201-0001
2021-04-28 20:38:33,313: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to add record ID NAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:38:33,367: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:38:33,441: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:38:33,444: client.py: DEBUG: server process completed
2021-04-28 20:38:33,454: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully added record ID NAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:38:33,455: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 20:38:33,455: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Notes
2021-04-28 20:38:33,455: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Totals
2021-04-28 20:38:33,455: records.py: INFO: RecordType NonCashAuditRecord: initializing record
2021-04-28 20:38:33,455: records.py: DEBUG: RecordType NonCashAuditRecord: {'RecordID': 'NAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 9, 0, 0), 'Branch': 'B'}
2021-04-28 20:38:33,455: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordID with value NAR6201-0001
2021-04-28 20:38:33,455: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordDate with value 2019-01-09 00:00:00
2021-04-28 20:38:33,455: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for header Remainder
2021-04-28 20:38:33,455: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Branch with value B
2021-04-28 20:38:33,455: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 20:38:33,455: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for data element Notes
2021-04-28 20:38:33,458: records.py: INFO: RecordType NonCashAuditRecord: initialized record has ID NAR6201-0001
2021-04-28 20:38:33,458: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('NAR6201-0001', 'NAR6201-0001')"
2021-04-28 20:38:33,510: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:33,577: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:33,581: client.py: DEBUG: server process completed
2021-04-28 20:38:33,592: records.py: INFO: RecordType NonCashAuditRecord: importing references and components
2021-04-28 20:38:33,593: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.DocDate = ? AND BCARInvoice.DepartCode = ? AND BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? ;" with parameters "('2019-01-09 00:00:00', 'B', 0, 0, 2, 1, 0)"
2021-04-28 20:38:33,637: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:34,366: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:34,369: client.py: DEBUG: server process completed
2021-04-28 20:38:34,383: audit.py: INFO: AuditTransactionTab Cash: loaded data for audit rule Transactions
2021-04-28 20:38:34,383: elements.py: DEBUG: DataTable Cash: appending 44 rows to the table
2021-04-28 20:38:34,389: elements.py: DEBUG: DataTable Cash: setting column data types to configured data types
2021-04-28 20:38:34,402: elements.py: DEBUG: DataTable Cash: setting column default values
2021-04-28 20:38:34,403: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.DocDate = ? AND BCCreditNoteSub.DepartCode = ? AND BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? ;" with parameters "('2019-01-09 00:00:00', 'B', 0, 0, 0)"
2021-04-28 20:38:34,446: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:34,525: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:34,528: client.py: DEBUG: server process completed
2021-04-28 20:38:34,541: audit.py: INFO: AuditTransactionTab Return: loaded data for audit rule Transactions
2021-04-28 20:38:34,541: elements.py: DEBUG: DataTable Return: appending 8 rows to the table
2021-04-28 20:38:34,547: elements.py: DEBUG: DataTable Return: setting column data types to configured data types
2021-04-28 20:38:34,555: elements.py: DEBUG: DataTable Return: setting column default values
2021-04-28 20:38:34,556: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.DocDate = ? AND BCReceipt1.DepartCode = ? AND BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-09 00:00:00', 'B', 0, 1, '01', '02', '03', '21902')"
2021-04-28 20:38:34,602: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:34,884: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:34,887: client.py: DEBUG: server process completed
2021-04-28 20:38:34,900: audit.py: INFO: AuditTransactionTab Receipt: loaded data for audit rule Transactions
2021-04-28 20:38:34,901: elements.py: DEBUG: DataTable Receipt: appending 13 rows to the table
2021-04-28 20:38:34,904: elements.py: DEBUG: DataTable Receipt: setting column data types to configured data types
2021-04-28 20:38:34,910: elements.py: DEBUG: DataTable Receipt: setting column default values
2021-04-28 20:38:34,911: client.py: DEBUG: query string is "SELECT BCARDeposit.DocNo AS RecordID, BCARDeposit.DocDate AS RecordDate, BCARDeposit.DepartCode AS Branch, BCARDeposit.RefNo AS PreEmpt, BCARDeposit.BeforeTaxAmount, BCARDeposit.TaxAmount, BCARDeposit.TotalAmount, BCARDeposit.NetAmount AS Amount, BCARDeposit.SumCashAmount, BCARDeposit.SumBankAmount, BCARDeposit.SumCreditAmount, BCARDeposit.SumChqAmount, BCARDeposit.MyDescription AS Notes, BCARDeposit.CreatorCode AS CreatorName, BCARDeposit.CreateDateTime AS CreationTime, BCARDeposit.LastEditorCode AS EditorName, BCARDeposit.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDeposit LEFT JOIN BCRecMoney ON BCARDeposit.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDeposit.ArCode = BCAR.Code WHERE BCARDeposit.DocDate = ? AND BCARDeposit.DepartCode = ? AND BCARDeposit.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-09 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 20:38:34,955: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:35,020: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:35,022: client.py: DEBUG: server process completed
2021-04-28 20:38:35,034: audit.py: INFO: AuditTransactionTab Deposit: loaded data for audit rule Transactions
2021-04-28 20:38:35,035: elements.py: DEBUG: DataTable Deposit: setting column default values
2021-04-28 20:38:35,036: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.DocDate = ? AND BCARDepositSpecial.DepartCode = ? AND BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-09 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 20:38:35,084: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:38:35,450: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:38:35,453: client.py: DEBUG: server process completed
2021-04-28 20:38:35,464: audit.py: INFO: AuditTransactionTab ARV: loaded data for audit rule Transactions
2021-04-28 20:38:35,464: elements.py: DEBUG: DataTable ARV: appending 1 rows to the table
2021-04-28 20:38:35,468: elements.py: DEBUG: DataTable ARV: setting column data types to configured data types
2021-04-28 20:38:35,474: elements.py: DEBUG: DataTable ARV: setting column default values
2021-04-28 20:38:35,475: audit.py: INFO: AuditRule Transactions: transaction audit in progress with parameters RecordDate=2019-01-09 00:00:00, Branch=B
2021-04-28 20:38:35,475: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=True"
2021-04-28 20:38:35,475: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=True"
2021-04-28 20:38:35,475: audit.py: DEBUG: AuditRuleSummary Transactions: summary title components are ['RecordDate', 'Branch']
2021-04-28 20:38:35,475: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value 2562-01-09 to title
2021-04-28 20:38:35,475: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value แม่อาย to title
2021-04-28 20:38:35,475: audit.py: INFO: AuditRuleSummary Transactions: formatted summary title is สรุปยอดขาย วันที่ 2562-01-09 สาขา แม่อาย
2021-04-28 20:38:35,477: elements.py: DEBUG: DataTable Cash: enabling table action elements
2021-04-28 20:38:35,477: elements.py: DEBUG: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:38:35,484: elements.py: DEBUG: DataTable Cash: formatting table for displaying
2021-04-28 20:38:35,484: elements.py: DEBUG: DataTable Cash: filtering the display table based on user-supplied parameter values
2021-04-28 20:38:35,485: elements.py: DEBUG: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 20:38:35,485: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:38:35,487: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:38:35,487: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 20:38:35,488: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:38:35,508: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:38:35,509: elements.py: DEBUG: DataTable Cash: table totals calculated as 61706.0
2021-04-28 20:38:35,509: elements.py: DEBUG: DataTable Cash: table totals are formatted as float
2021-04-28 20:38:35,509: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:38:35,509: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:35,510: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:35,510: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:35,511: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:35,511: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:35,513: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:35,513: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:35,515: audit.py: DEBUG: AuditTransactionTab Cash: ID is formatted as ['Branch', 'CH', 'YYMM', '-', '0000']
2021-04-28 20:38:35,515: audit.py: DEBUG: AuditTransactionTab Cash: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CH', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:38:35,515: elements.py: DEBUG: DataTable Return: enabling table action elements
2021-04-28 20:38:35,516: elements.py: DEBUG: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:38:35,517: elements.py: DEBUG: DataTable Return: formatting table for displaying
2021-04-28 20:38:35,517: elements.py: DEBUG: DataTable Return: filtering the display table based on user-supplied parameter values
2021-04-28 20:38:35,518: elements.py: DEBUG: DataTable Return: annotating display table on configured annotation rules
2021-04-28 20:38:35,518: elements.py: DEBUG: DataTable Return: annotating table based on configured annotation rule "ReturnBeforePay"
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: annotation results of rule ReturnBeforePay are [True, True, True, True, True, False, False, False]
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: table row 0 annotated on annotation code ReturnBeforePay
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: table row 1 annotated on annotation code ReturnBeforePay
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: table row 2 annotated on annotation code ReturnBeforePay
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: table row 3 annotated on annotation code ReturnBeforePay
2021-04-28 20:38:35,520: elements.py: DEBUG: DataTable Return: table row 4 annotated on annotation code ReturnBeforePay
2021-04-28 20:38:35,548: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:38:35,548: elements.py: DEBUG: DataTable Return: table totals calculated as 1935.0
2021-04-28 20:38:35,548: elements.py: DEBUG: DataTable Return: table totals are formatted as float
2021-04-28 20:38:35,549: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:38:35,549: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:38:35,549: audit.py: DEBUG: AuditTransactionTab Return: ID is formatted as ['Branch', 'CN', 'YYMM', '-', '0000']
2021-04-28 20:38:35,549: audit.py: DEBUG: AuditTransactionTab Return: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CN', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:38:35,550: elements.py: DEBUG: DataTable Receipt: enabling table action elements
2021-04-28 20:38:35,550: elements.py: DEBUG: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:38:35,551: elements.py: DEBUG: DataTable Receipt: formatting table for displaying
2021-04-28 20:38:35,551: elements.py: DEBUG: DataTable Receipt: filtering the display table based on user-supplied parameter values
2021-04-28 20:38:35,552: elements.py: DEBUG: DataTable Receipt: annotating display table on configured annotation rules
2021-04-28 20:38:35,552: elements.py: DEBUG: DataTable Receipt: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:38:35,553: elements.py: DEBUG: DataTable Receipt: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:38:35,576: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:38:35,576: elements.py: DEBUG: DataTable Receipt: table totals calculated as 204540.0
2021-04-28 20:38:35,576: elements.py: DEBUG: DataTable Receipt: table totals are formatted as float
2021-04-28 20:38:35,577: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:38:35,577: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:35,577: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:35,577: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:35,579: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:35,579: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:35,581: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:35,581: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:35,583: audit.py: DEBUG: AuditTransactionTab Receipt: ID is formatted as ['Branch', 'RC', 'YYMM', '-', '0000']
2021-04-28 20:38:35,583: audit.py: DEBUG: AuditTransactionTab Receipt: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'RC', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:38:35,583: elements.py: DEBUG: DataTable Deposit: enabling table action elements
2021-04-28 20:38:35,583: elements.py: DEBUG: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:38:35,584: elements.py: DEBUG: DataTable Deposit: formatting table for displaying
2021-04-28 20:38:35,599: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:38:35,600: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:38:35,600: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:38:35,600: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:38:35,600: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:35,601: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:35,601: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:35,602: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:35,602: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:35,603: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:35,603: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:35,604: audit.py: DEBUG: AuditTransactionTab Deposit: ID is formatted as ['Branch', 'DR', 'YYMM', '-', '0000']
2021-04-28 20:38:35,604: audit.py: DEBUG: AuditTransactionTab Deposit: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'DR', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:38:35,604: elements.py: DEBUG: DataTable ARV: enabling table action elements
2021-04-28 20:38:35,605: elements.py: DEBUG: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:38:35,606: elements.py: DEBUG: DataTable ARV: formatting table for displaying
2021-04-28 20:38:35,606: elements.py: DEBUG: DataTable ARV: filtering the display table based on user-supplied parameter values
2021-04-28 20:38:35,607: elements.py: DEBUG: DataTable ARV: annotating display table on configured annotation rules
2021-04-28 20:38:35,627: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:38:35,628: elements.py: DEBUG: DataTable ARV: table totals calculated as 20000.0
2021-04-28 20:38:35,628: elements.py: DEBUG: DataTable ARV: table totals are formatted as float
2021-04-28 20:38:35,628: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:38:35,628: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:38:35,629: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:38:35,629: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:38:35,630: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:38:35,630: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:38:35,632: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:38:35,632: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:38:35,634: audit.py: DEBUG: AuditTransactionTab ARV: ID is formatted as ['Branch', 'ARV', 'YYMM', '-', '0000']
2021-04-28 20:38:35,634: audit.py: DEBUG: AuditTransactionTab ARV: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'ARV', (1, 4)), ('date', 'YYMM', (4, 8)), ('separator', '-', (8, 9)), ('variable', 4, (9, 13))]
2021-04-28 20:39:16,940: main.py: INFO: running window event -Cash_27818626_Element- of rule Transactions
2021-04-28 20:39:16,944: elements.py: DEBUG: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 20:39:16,944: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:39:16,945: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:39:16,945: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 20:39:16,946: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter RecordID: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter RecordDate: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter CreatorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter CreationTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter EditorName: initializing input parameter of data type string with default value None, and formatted value None
2021-04-28 20:39:16,946: parameters.py: DEBUG: DataParameter EditTime: initializing date parameter of data type date with default value None, and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement Branch: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement Customer: initializing input element of data type string with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement BillType: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement Amount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement BillBalance: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement PaymentType: initializing dropdown element of data type str with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement SumCashAmount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement SumChqAmount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,947: elements.py: DEBUG: DataElement SumBankAmount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,948: elements.py: DEBUG: DataElement SumCreditAmount: initializing input element of data type money with default value None and formatted value None
2021-04-28 20:39:16,948: elements.py: DEBUG: DataElement Warnings: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:39:16,948: elements.py: DEBUG: DataElement Notes: initializing multiline element of data type str with default value None and formatted value None
2021-04-28 20:39:16,948: records.py: WARNING: no reference record types configured for CustomRecord
2021-04-28 20:39:16,948: records.py: WARNING: RecordEntry: no component record types configured
2021-04-28 20:39:16,950: records.py: INFO: RecordType CustomRecord: initializing record
2021-04-28 20:39:16,950: records.py: DEBUG: RecordType CustomRecord: {'RecordID': 'BCH6201-0379', 'RecordDate': Timestamp('2019-01-09 00:00:00+0000', tz='<bson.tz_util.FixedOffset object at 0x0000024CA3249D90>'), 'Branch': 'B', 'BillType': 0, 'Customer': 'สด.แม่อาย', 'SumofItemAmount': 190.0, 'DiscountAmount': 0.0, 'Amount': 190.0, 'SumCashAmount': 190.0, 'SumCreditAmount': 0.0, 'SumChqAmount': 0.0, 'SumBankAmount': 0.0, 'BillBalance': 0.0, 'Notes': None, 'PayAmount': 190.0, 'PaymentType': 0, 'RefNo': None, 'RefDate': NaT, 'CreatorName': 'นาถยา แสนส', 'CreationTime': Timestamp('2019-01-08 12:44:17+0000', tz='<bson.tz_util.FixedOffset object at 0x0000024CA3249D90>'), 'EditorName': None, 'EditTime': NaT, 'SaveFrom': 1.0, 'Bank': None, 'BankBranch': None}
2021-04-28 20:39:16,950: records.py: DEBUG: RecordType CustomRecord: initializing header RecordID with value BCH6201-0379
2021-04-28 20:39:16,950: records.py: DEBUG: RecordType CustomRecord: initializing header RecordDate with value 2019-01-09 00:00:00+00:00
2021-04-28 20:39:16,950: records.py: DEBUG: RecordType CustomRecord: initializing modifier CreatorName with value นาถยา แสนส
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing modifier CreationTime with value 2019-01-08 12:44:17+00:00
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing modifier EditorName with value None
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing modifier EditTime with value NaT
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing data element Branch with value B
2021-04-28 20:39:16,951: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing data element Customer with value สด.แม่อาย
2021-04-28 20:39:16,951: elements.py: DEBUG: DataElement Customer: input value สด.แม่อาย formatted as สด.แม่อาย
2021-04-28 20:39:16,951: records.py: DEBUG: RecordType CustomRecord: initializing data element BillType with value 0
2021-04-28 20:39:16,957: elements.py: DEBUG: DataElement BillType: input value 0 formatted as 0
2021-04-28 20:39:16,957: records.py: DEBUG: RecordType CustomRecord: initializing data element Amount with value 190.0
2021-04-28 20:39:16,957: elements.py: DEBUG: DataElement Amount: input value 190.0 formatted as 190.0
2021-04-28 20:39:16,957: records.py: DEBUG: RecordType CustomRecord: initializing data element BillBalance with value 0.0
2021-04-28 20:39:16,957: elements.py: DEBUG: DataElement BillBalance: input value 0.0 formatted as 0.0
2021-04-28 20:39:16,957: records.py: DEBUG: RecordType CustomRecord: initializing data element PaymentType with value 0
2021-04-28 20:39:16,957: elements.py: DEBUG: DataElement PaymentType: input value 0 formatted as 0
2021-04-28 20:39:16,957: records.py: DEBUG: RecordType CustomRecord: initializing data element SumCashAmount with value 190.0
2021-04-28 20:39:16,957: elements.py: DEBUG: DataElement SumCashAmount: input value 190.0 formatted as 190.0
2021-04-28 20:39:16,958: records.py: DEBUG: RecordType CustomRecord: initializing data element SumChqAmount with value 0.0
2021-04-28 20:39:16,958: elements.py: DEBUG: DataElement SumChqAmount: input value 0.0 formatted as 0.0
2021-04-28 20:39:16,958: records.py: DEBUG: RecordType CustomRecord: initializing data element SumBankAmount with value 0.0
2021-04-28 20:39:16,958: elements.py: DEBUG: DataElement SumBankAmount: input value 0.0 formatted as 0.0
2021-04-28 20:39:16,958: records.py: DEBUG: RecordType CustomRecord: initializing data element SumCreditAmount with value 0.0
2021-04-28 20:39:16,958: elements.py: DEBUG: DataElement SumCreditAmount: input value 0.0 formatted as 0.0
2021-04-28 20:39:16,958: records.py: WARNING: RecordType CustomRecord: input data is missing a value for data element Warnings
2021-04-28 20:39:16,958: records.py: DEBUG: RecordType CustomRecord: no value set for parameter Notes
2021-04-28 20:39:16,958: records.py: INFO: RecordType CustomRecord: initialized record has ID BCH6201-0379
2021-04-28 20:39:16,959: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('BCH6201-0379', 'BCH6201-0379')"
2021-04-28 20:39:17,091: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:39:17,156: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:39:17,159: client.py: DEBUG: server process completed
2021-04-28 20:39:17,208: records.py: INFO: RecordType CustomRecord: importing references and components
2021-04-28 20:39:17,210: elements.py: INFO: DataTable Cash: opening record BCH6201-0379 at row 5
2021-04-28 20:39:17,210: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value BCH6201-0379 for display
2021-04-28 20:39:17,214: parameters.py: DEBUG: DataParameter CreatorName: formatting parameter value นาถยา แสนส for display
2021-04-28 20:39:17,214: parameters.py: DEBUG: DataParameter EditorName: formatting parameter value None for display
2021-04-28 20:39:17,921: records.py: DEBUG: Record BCH6201-0379: resizing display to 864, 648
2021-04-28 20:39:17,924: secondary.py: DEBUG: centering window
2021-04-28 20:39:18,726: secondary.py: DEBUG: current window size: (864, 880)
2021-04-28 20:39:18,727: secondary.py: DEBUG: window current location: (640, 24)
2021-04-28 20:39:18,727: secondary.py: DEBUG: window new location: (528, 100)
2021-04-28 20:39:18,733: secondary.py: DEBUG: window real location: (528, 100)
2021-04-28 20:39:18,734: elements.py: WARNING: DataElement Branch: unable to locate values for element key -Branch_236251176_Element-
2021-04-28 20:39:18,734: elements.py: WARNING: DataElement Customer: unable to locate values for element key -Customer_461153133_Element-
2021-04-28 20:39:18,734: elements.py: WARNING: DataElement BillType: unable to locate values for element key -BillType_915411102_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement Amount: unable to locate values for element key -Amount_872406701_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement BillBalance: unable to locate values for element key -BillBalance_434960046_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement PaymentType: unable to locate values for element key -PaymentType_661165434_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement SumCashAmount: unable to locate values for element key -SumCashAmount_561385930_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement SumChqAmount: unable to locate values for element key -SumChqAmount_382238945_Element-
2021-04-28 20:39:18,735: elements.py: WARNING: DataElement SumBankAmount: unable to locate values for element key -SumBankAmount_725009826_Element-
2021-04-28 20:39:18,737: elements.py: WARNING: DataElement SumCreditAmount: unable to locate values for element key -SumCreditAmount_12022204_Element-
2021-04-28 20:39:18,737: elements.py: WARNING: DataElement Warnings: unable to locate values for element key -Warnings_599061978_Element-
2021-04-28 20:39:18,737: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_78730425_Element-
2021-04-28 20:39:18,737: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value BCH6201-0379 for display
2021-04-28 20:39:30,587: main.py: INFO: running window event -Cash_94162440_Audit- of rule Transactions
2021-04-28 20:39:30,588: audit.py: INFO: AuditTransactionTab Cash: searching for missing transactions
2021-04-28 20:39:30,588: audit.py: DEBUG: AuditTransactionTab Cash: first transaction ID is BCH6201-0374
2021-04-28 20:39:30,589: client.py: DEBUG: query string is "SELECT DISTINCT DocDate FROM BCARInvoice  ;" with parameters "None"
2021-04-28 20:39:30,635: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:39:30,708: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:39:30,712: client.py: DEBUG: server process completed
2021-04-28 20:39:30,725: audit.py: INFO: AuditTransactionTab Cash: searching for most recent transaction created on 2019-01-08
2021-04-28 20:39:30,725: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? AND BCARInvoice.DocDate = ? ;" with parameters "(0, 0, 2, 1, 0, '2019-01-08 00:00:00')"
2021-04-28 20:39:30,774: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:39:33,515: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:39:33,518: client.py: DEBUG: server process completed
2021-04-28 20:39:33,532: audit.py: DEBUG: AuditTransactionTab Cash: last transaction ID is BCH6201-0373 from 2019-01-08
2021-04-28 20:39:33,532: audit.py: INFO: AuditTransactionTab Cash: searching for skipped transactions
2021-04-28 20:39:33,532: audit.py: INFO: AuditTransactionTab Cash: searching for transactions created at the end of the day
2021-04-28 20:39:33,533: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? AND BCARInvoice.DocDate = ? ;" with parameters "(0, 0, 2, 1, 0, '2019-01-09 00:00:00')"
2021-04-28 20:39:33,578: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:39:37,926: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:39:37,929: client.py: DEBUG: server process completed
2021-04-28 20:39:37,937: audit.py: DEBUG: AuditRuleTransactions Cash: potentially missing transactions: []
2021-04-28 20:39:37,941: audit.py: INFO: AuditRuleTransactions Cash: adding 0 records to the table
2021-04-28 20:39:37,942: elements.py: DEBUG: DataTable Cash: filtering display table on configured filter rules
2021-04-28 20:39:37,942: elements.py: DEBUG: DataTable Cash: filtering table on column RecordID based on rule "PaymentType = 0"
2021-04-28 20:39:37,945: elements.py: DEBUG: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:39:37,946: elements.py: DEBUG: DataTable Cash: formatting table for displaying
2021-04-28 20:39:37,946: elements.py: DEBUG: DataTable Cash: filtering the display table based on user-supplied parameter values
2021-04-28 20:39:37,947: elements.py: DEBUG: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 20:39:37,947: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:39:37,947: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:39:37,947: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 20:39:37,948: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:39:37,975: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:39:37,976: elements.py: DEBUG: DataTable Cash: table totals calculated as 61706.0
2021-04-28 20:39:37,976: elements.py: DEBUG: DataTable Cash: table totals are formatted as float
2021-04-28 20:39:37,976: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:39:37,976: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:39:37,977: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:39:37,977: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:39:37,979: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:39:37,979: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:39:37,982: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:39:37,982: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:39:37,984: audit.py: INFO: AuditRule Transactions: auditing of transaction เงินสด was successful
2021-04-28 20:39:37,984: audit.py: DEBUG: AuditRule Transactions: enabling next tab รับคืน with index 1
2021-04-28 20:40:41,849: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:40:41,850: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Return
2021-04-28 20:40:44,943: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:40:44,945: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Cash
2021-04-28 20:40:45,540: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:40:45,541: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Return
2021-04-28 20:40:46,622: main.py: INFO: running window event -Return_708563363_Audit- of rule Transactions
2021-04-28 20:40:46,623: audit.py: INFO: AuditTransactionTab Return: searching for missing transactions
2021-04-28 20:40:46,624: audit.py: DEBUG: AuditTransactionTab Return: first transaction ID is BCN6201-0056
2021-04-28 20:40:46,624: client.py: DEBUG: query string is "SELECT DISTINCT DocDate FROM BCCreditNoteSub  ;" with parameters "None"
2021-04-28 20:40:46,673: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:46,756: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:46,759: client.py: DEBUG: server process completed
2021-04-28 20:40:46,775: audit.py: INFO: AuditTransactionTab Return: searching for most recent transaction created on 2019-01-08
2021-04-28 20:40:46,775: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? AND BCCreditNoteSub.DocDate = ? ;" with parameters "(0, 0, 0, '2019-01-08 00:00:00')"
2021-04-28 20:40:46,825: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:46,917: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:46,920: client.py: DEBUG: server process completed
2021-04-28 20:40:46,936: audit.py: DEBUG: AuditTransactionTab Return: last transaction ID is BCN6201-0055 from 2019-01-08
2021-04-28 20:40:46,937: audit.py: INFO: AuditTransactionTab Return: searching for skipped transactions
2021-04-28 20:40:46,937: audit.py: INFO: AuditTransactionTab Return: searching for transactions created at the end of the day
2021-04-28 20:40:46,937: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? AND BCCreditNoteSub.DocDate = ? ;" with parameters "(0, 0, 0, '2019-01-09 00:00:00')"
2021-04-28 20:40:46,983: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:47,121: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:47,125: client.py: DEBUG: server process completed
2021-04-28 20:40:47,142: audit.py: DEBUG: AuditRuleTransactions Return: potentially missing transactions: []
2021-04-28 20:40:47,148: audit.py: INFO: AuditRuleTransactions Return: adding 0 records to the table
2021-04-28 20:40:47,149: elements.py: DEBUG: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:40:47,150: elements.py: DEBUG: DataTable Return: formatting table for displaying
2021-04-28 20:40:47,151: elements.py: DEBUG: DataTable Return: filtering the display table based on user-supplied parameter values
2021-04-28 20:40:47,152: elements.py: DEBUG: DataTable Return: annotating display table on configured annotation rules
2021-04-28 20:40:47,152: elements.py: DEBUG: DataTable Return: annotating table based on configured annotation rule "ReturnBeforePay"
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: annotation results of rule ReturnBeforePay are [True, True, True, True, True, False, False, False]
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: table row 0 annotated on annotation code ReturnBeforePay
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: table row 1 annotated on annotation code ReturnBeforePay
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: table row 2 annotated on annotation code ReturnBeforePay
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: table row 3 annotated on annotation code ReturnBeforePay
2021-04-28 20:40:47,154: elements.py: DEBUG: DataTable Return: table row 4 annotated on annotation code ReturnBeforePay
2021-04-28 20:40:47,192: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:40:47,192: elements.py: DEBUG: DataTable Return: table totals calculated as 1935.0
2021-04-28 20:40:47,192: elements.py: DEBUG: DataTable Return: table totals are formatted as float
2021-04-28 20:40:47,192: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:40:47,192: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:40:47,193: audit.py: INFO: AuditRule Transactions: auditing of transaction รับคืน was successful
2021-04-28 20:40:47,193: audit.py: DEBUG: AuditRule Transactions: enabling next tab ใบเสร็จ with index 2
2021-04-28 20:40:48,026: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:40:48,027: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Receipt
2021-04-28 20:40:48,776: main.py: INFO: running window event -Receipt_240600551_Audit- of rule Transactions
2021-04-28 20:40:48,777: audit.py: INFO: AuditTransactionTab Receipt: searching for missing transactions
2021-04-28 20:40:48,778: audit.py: DEBUG: AuditTransactionTab Receipt: first transaction ID is BRC6201-0087
2021-04-28 20:40:48,778: client.py: DEBUG: query string is "SELECT DISTINCT DocDate FROM BCReceipt1  ;" with parameters "None"
2021-04-28 20:40:48,826: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:48,907: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:48,910: client.py: DEBUG: server process completed
2021-04-28 20:40:48,923: audit.py: INFO: AuditTransactionTab Receipt: searching for most recent transaction created on 2019-01-08
2021-04-28 20:40:48,923: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) AND BCReceipt1.DocDate = ? ;" with parameters "(0, 1, '01', '02', '03', '21902', '2019-01-08 00:00:00')"
2021-04-28 20:40:48,970: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:49,077: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:49,081: client.py: DEBUG: server process completed
2021-04-28 20:40:49,094: audit.py: DEBUG: AuditTransactionTab Receipt: last transaction ID is BRC6201-0086 from 2019-01-08
2021-04-28 20:40:49,094: audit.py: INFO: AuditTransactionTab Receipt: searching for skipped transactions
2021-04-28 20:40:49,094: audit.py: INFO: AuditTransactionTab Receipt: searching for transactions created at the end of the day
2021-04-28 20:40:49,095: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) AND BCReceipt1.DocDate = ? ;" with parameters "(0, 1, '01', '02', '03', '21902', '2019-01-09 00:00:00')"
2021-04-28 20:40:49,141: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:40:49,238: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:40:49,241: client.py: DEBUG: server process completed
2021-04-28 20:40:49,254: audit.py: DEBUG: AuditRuleTransactions Receipt: potentially missing transactions: []
2021-04-28 20:40:49,259: audit.py: INFO: AuditRuleTransactions Receipt: adding 0 records to the table
2021-04-28 20:40:49,259: elements.py: DEBUG: DataTable Receipt: filtering display table on configured filter rules
2021-04-28 20:40:49,259: elements.py: DEBUG: DataTable Receipt: filtering table on column RecordID based on rule "PaymentType = 0"
2021-04-28 20:40:49,262: elements.py: INFO: DataTable Receipt: rows [8] were removed after applying filter rule on column RecordID
2021-04-28 20:40:49,264: elements.py: DEBUG: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:40:49,265: elements.py: DEBUG: DataTable Receipt: formatting table for displaying
2021-04-28 20:40:49,266: elements.py: DEBUG: DataTable Receipt: filtering the display table based on user-supplied parameter values
2021-04-28 20:40:49,266: elements.py: DEBUG: DataTable Receipt: annotating display table on configured annotation rules
2021-04-28 20:40:49,267: elements.py: DEBUG: DataTable Receipt: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:40:49,267: elements.py: DEBUG: DataTable Receipt: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:40:49,290: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:40:49,291: elements.py: DEBUG: DataTable Receipt: table totals calculated as 202843.0
2021-04-28 20:40:49,291: elements.py: DEBUG: DataTable Receipt: table totals are formatted as float
2021-04-28 20:40:49,291: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:40:49,291: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:40:49,292: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:40:49,292: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:40:49,294: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:40:49,294: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:40:49,295: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:40:49,295: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:40:49,298: audit.py: INFO: AuditRule Transactions: auditing of transaction ใบเสร็จ was successful
2021-04-28 20:40:49,299: audit.py: DEBUG: AuditRule Transactions: enabling next tab เงินมัดจำ with index 3
2021-04-28 20:41:43,055: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:41:43,056: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Deposit
2021-04-28 20:41:44,344: main.py: INFO: running window event -Deposit_309652914_Audit- of rule Transactions
2021-04-28 20:41:44,346: audit.py: INFO: AuditTransactionTab Deposit: searching for missing transactions
2021-04-28 20:41:44,346: audit.py: DEBUG: AuditRuleTransactions Deposit: potentially missing transactions: []
2021-04-28 20:41:44,350: audit.py: INFO: AuditRuleTransactions Deposit: adding 0 records to the table
2021-04-28 20:41:44,350: elements.py: DEBUG: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:41:44,351: elements.py: DEBUG: DataTable Deposit: formatting table for displaying
2021-04-28 20:41:44,370: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:41:44,370: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:41:44,370: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:41:44,371: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:41:44,371: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:44,371: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:44,371: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:44,373: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:44,373: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:44,374: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:44,374: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:44,375: audit.py: INFO: AuditRule Transactions: auditing of transaction เงินมัดจำ was successful
2021-04-28 20:41:44,376: audit.py: DEBUG: AuditRule Transactions: enabling next tab รับเงินล่วงหน้า with index 4
2021-04-28 20:41:45,082: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:41:45,084: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab ARV
2021-04-28 20:41:45,797: main.py: INFO: running window event -ARV_278189141_Audit- of rule Transactions
2021-04-28 20:41:45,798: audit.py: INFO: AuditTransactionTab ARV: searching for missing transactions
2021-04-28 20:41:45,799: audit.py: DEBUG: AuditTransactionTab ARV: first transaction ID is BARV6201-0009
2021-04-28 20:41:45,799: client.py: DEBUG: query string is "SELECT DISTINCT DocDate FROM BCARDepositSpecial  ;" with parameters "None"
2021-04-28 20:41:45,846: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:41:45,923: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:41:45,927: client.py: DEBUG: server process completed
2021-04-28 20:41:45,941: audit.py: INFO: AuditTransactionTab ARV: searching for most recent transaction created on 2019-01-08
2021-04-28 20:41:45,941: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) AND BCARDepositSpecial.DocDate = ? ;" with parameters "(0, '01', '02', '03', '21902', '2019-01-08 00:00:00')"
2021-04-28 20:41:45,988: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:41:46,083: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:41:46,087: client.py: DEBUG: server process completed
2021-04-28 20:41:46,103: audit.py: DEBUG: AuditTransactionTab ARV: last transaction ID is BARV6201-0008 from 2019-01-08
2021-04-28 20:41:46,103: audit.py: INFO: AuditTransactionTab ARV: searching for skipped transactions
2021-04-28 20:41:46,103: audit.py: INFO: AuditTransactionTab ARV: searching for transactions created at the end of the day
2021-04-28 20:41:46,103: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) AND BCARDepositSpecial.DocDate = ? ;" with parameters "(0, '01', '02', '03', '21902', '2019-01-09 00:00:00')"
2021-04-28 20:41:46,151: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:41:46,247: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:41:46,250: client.py: DEBUG: server process completed
2021-04-28 20:41:46,266: audit.py: DEBUG: AuditRuleTransactions ARV: potentially missing transactions: []
2021-04-28 20:41:46,270: audit.py: INFO: AuditRuleTransactions ARV: adding 0 records to the table
2021-04-28 20:41:46,270: elements.py: DEBUG: DataTable ARV: filtering display table on configured filter rules
2021-04-28 20:41:46,271: elements.py: DEBUG: DataTable ARV: filtering table on column RecordID based on rule "PaymentType = 0"
2021-04-28 20:41:46,273: elements.py: DEBUG: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:41:46,274: elements.py: DEBUG: DataTable ARV: formatting table for displaying
2021-04-28 20:41:46,274: elements.py: DEBUG: DataTable ARV: filtering the display table based on user-supplied parameter values
2021-04-28 20:41:46,276: elements.py: DEBUG: DataTable ARV: annotating display table on configured annotation rules
2021-04-28 20:41:46,298: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:41:46,299: elements.py: DEBUG: DataTable ARV: table totals calculated as 20000.0
2021-04-28 20:41:46,299: elements.py: DEBUG: DataTable ARV: table totals are formatted as float
2021-04-28 20:41:46,299: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:41:46,299: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:46,300: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:46,300: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:46,301: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:46,301: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:46,304: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:46,304: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:46,306: audit.py: INFO: AuditRule Transactions: auditing of transaction รับเงินล่วงหน้า was successful
2021-04-28 20:41:46,306: audit.py: INFO: AuditRule Transactions: all audits have been performed - preparing audit summary
2021-04-28 20:41:47,360: main.py: INFO: running window event -Transactions_21380940_Next- of rule Transactions
2021-04-28 20:41:47,361: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:41:47,361: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:47,362: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:47,362: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:47,364: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:47,364: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:47,366: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:47,366: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:47,368: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:41:47,368: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:41:47,368: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:41:47,368: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:47,369: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:47,369: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:47,371: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:47,371: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:47,373: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:47,373: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:47,375: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:41:47,375: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:47,376: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:47,376: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:47,377: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:47,377: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:47,378: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:47,378: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:47,379: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:41:47,380: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:47,380: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:47,380: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:47,382: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:47,382: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:47,384: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:47,384: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:47,394: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCashAmount > 0
2021-04-28 20:41:47,648: elements.py: DEBUG: DataTable Return: subsetting table on rule Amount > 0
2021-04-28 20:41:47,701: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCashAmount > 0
2021-04-28 20:41:47,745: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCashAmount > 0
2021-04-28 20:41:47,746: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCashAmount > 0
2021-04-28 20:41:47,775: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:41:47,778: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:47,778: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:47,837: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:47,908: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:47,911: client.py: DEBUG: server process completed
2021-04-28 20:41:47,922: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:47,923: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:47,923: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:47,923: records.py: DEBUG: RecordEntry AccountRecord: found 0 unsaved records with date component 6201
2021-04-28 20:41:47,923: records.py: DEBUG: RecordEntry AccountRecord: searching for database record IDs with date component 6201
2021-04-28 20:41:47,923: client.py: DEBUG: query string is "SELECT AccountRecords.DocNo FROM AccountRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY AccountRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 20:41:47,973: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,050: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,054: client.py: DEBUG: server process completed
2021-04-28 20:41:48,066: records.py: DEBUG: RecordEntry AccountRecord: found 0 database records with date component 6201
2021-04-28 20:41:48,066: records.py: INFO: RecordEntry AccountRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 20:41:48,066: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0001
2021-04-28 20:41:48,066: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,118: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,188: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,191: client.py: DEBUG: server process completed
2021-04-28 20:41:48,201: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,203: elements.py: DEBUG: DataTable account: appending 1 rows to the table
2021-04-28 20:41:48,206: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:41:48,215: elements.py: DEBUG: DataTable account: setting column default values
2021-04-28 20:41:48,215: elements.py: DEBUG: DataTable account: setting default values for column PaymentType
2021-04-28 20:41:48,215: elements.py: DEBUG: DataTable account: assigning value Cash to empty cells in column PaymentType
2021-04-28 20:41:48,216: elements.py: DEBUG: DataTable account: setting default values for column PaymentDate
2021-04-28 20:41:48,217: elements.py: DEBUG: DataTable account: assigning values [Timestamp('2019-01-09 00:00:00')] to empty cells in column PaymentDate
2021-04-28 20:41:48,222: elements.py: DEBUG: DataTable account: setting default values for column Account
2021-04-28 20:41:48,226: elements.py: DEBUG: DataTable account: setting default values for column Customer
2021-04-28 20:41:48,227: elements.py: DEBUG: DataTable account: assigning value Tila to empty cells in column Customer
2021-04-28 20:41:48,227: elements.py: DEBUG: DataTable account: setting default values for column Amount
2021-04-28 20:41:48,227: elements.py: DEBUG: DataTable account: assigning value 0 to empty cells in column Amount
2021-04-28 20:41:48,228: elements.py: DEBUG: DataTable account: setting default values for column CorrectedAmount
2021-04-28 20:41:48,228: elements.py: DEBUG: DataTable account: assigning values [169283.0] to empty cells in column CorrectedAmount
2021-04-28 20:41:48,228: elements.py: WARNING: DataElement Branch: unable to locate values for element key -Branch_922113562_Element-
2021-04-28 20:41:48,228: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_696235510_Element-
2021-04-28 20:41:48,228: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:41:48,229: elements.py: DEBUG: DataTable Totals: filtering the display table based on user-supplied parameter values
2021-04-28 20:41:48,229: elements.py: DEBUG: DataTable Totals: annotating display table on configured annotation rules
2021-04-28 20:41:48,240: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:41:48,243: elements.py: DEBUG: DataTable Totals: table totals calculated as 169283.0
2021-04-28 20:41:48,243: elements.py: DEBUG: DataTable Totals: table totals are formatted as float
2021-04-28 20:41:48,243: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:41:48,244: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:41:48,244: elements.py: DEBUG: DataTable account: filtering the display table based on user-supplied parameter values
2021-04-28 20:41:48,245: elements.py: DEBUG: DataTable account: annotating display table on configured annotation rules
2021-04-28 20:41:48,258: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:41:48,258: elements.py: DEBUG: DataTable account: table totals calculated as 169283.0
2021-04-28 20:41:48,258: elements.py: DEBUG: DataTable account: table totals are formatted as float
2021-04-28 20:41:48,259: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:41:48,259: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:41:48,260: elements.py: DEBUG: DataTable Totals: table totals calculated as 169283.0
2021-04-28 20:41:48,260: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:41:48,261: elements.py: DEBUG: DataTable account: table totals calculated as 169283.0
2021-04-28 20:41:48,261: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value CAR6201-0001 for display
2021-04-28 20:41:48,261: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value 0.0 for display
2021-04-28 20:41:48,261: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:41:48,262: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:48,262: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:48,262: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,264: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:48,264: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,265: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:48,265: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,267: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:41:48,267: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:41:48,267: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:41:48,267: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:48,268: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:48,268: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,269: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:48,270: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,271: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:48,271: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,273: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:41:48,273: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:48,274: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:48,274: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,275: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:48,275: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,276: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:48,276: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,277: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:41:48,277: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:41:48,278: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:41:48,278: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,279: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:41:48,279: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,281: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:41:48,281: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,285: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,287: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,302: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,304: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:41:48,305: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,307: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,351: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,353: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:41:48,356: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,358: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,361: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,363: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:41:48,368: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:41:48,372: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:48,372: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,436: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,505: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,509: client.py: DEBUG: server process completed
2021-04-28 20:41:48,519: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,519: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:48,519: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:48,519: records.py: DEBUG: RecordEntry AccountRecord: found 1 unsaved records with date component 6201
2021-04-28 20:41:48,519: records.py: INFO: RecordEntry AccountRecord: last ID encountered is AR6201-0001
2021-04-28 20:41:48,520: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0002
2021-04-28 20:41:48,520: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0002 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,575: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,660: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,664: client.py: DEBUG: server process completed
2021-04-28 20:41:48,676: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0002 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,679: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:48,679: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,746: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,813: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,816: client.py: DEBUG: server process completed
2021-04-28 20:41:48,828: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,828: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:48,829: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:48,829: records.py: DEBUG: RecordEntry AccountRecord: found 2 unsaved records with date component 6201
2021-04-28 20:41:48,829: records.py: INFO: RecordEntry AccountRecord: last ID encountered is AR6201-0002
2021-04-28 20:41:48,829: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0003
2021-04-28 20:41:48,829: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0003 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,877: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:48,946: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:48,949: client.py: DEBUG: server process completed
2021-04-28 20:41:48,958: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0003 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:48,959: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:48,959: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,011: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,095: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,097: client.py: DEBUG: server process completed
2021-04-28 20:41:49,111: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,111: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:49,111: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:49,111: records.py: DEBUG: RecordEntry AccountRecord: found 3 unsaved records with date component 6201
2021-04-28 20:41:49,111: records.py: INFO: RecordEntry AccountRecord: last ID encountered is AR6201-0003
2021-04-28 20:41:49,112: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0004
2021-04-28 20:41:49,112: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0004 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,168: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,238: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,241: client.py: DEBUG: server process completed
2021-04-28 20:41:49,248: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0004 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,249: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:49,249: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,299: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,391: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,395: client.py: DEBUG: server process completed
2021-04-28 20:41:49,398: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,398: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:49,398: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:49,398: records.py: DEBUG: RecordEntry AccountRecord: found 4 unsaved records with date component 6201
2021-04-28 20:41:49,398: records.py: INFO: RecordEntry AccountRecord: last ID encountered is AR6201-0004
2021-04-28 20:41:49,398: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0005
2021-04-28 20:41:49,398: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0005 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,443: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,510: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,513: client.py: DEBUG: server process completed
2021-04-28 20:41:49,516: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0005 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,516: records.py: INFO: creating a new ID for the record
2021-04-28 20:41:49,517: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,562: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,634: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,637: client.py: DEBUG: server process completed
2021-04-28 20:41:49,643: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,643: records.py: DEBUG: RecordEntry AccountRecord: new ID has date component 6201
2021-04-28 20:41:49,643: records.py: DEBUG: RecordEntry AccountRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:41:49,643: records.py: DEBUG: RecordEntry AccountRecord: found 5 unsaved records with date component 6201
2021-04-28 20:41:49,644: records.py: INFO: RecordEntry AccountRecord: last ID encountered is AR6201-0005
2021-04-28 20:41:49,644: records.py: INFO: RecordEntry AccountRecord: new record ID is AR6201-0006
2021-04-28 20:41:49,644: records.py: DEBUG: RecordEntry AccountRecord: attempting to add record ID AR6201-0006 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,702: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:41:49,788: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:41:49,792: client.py: DEBUG: server process completed
2021-04-28 20:41:49,796: records.py: DEBUG: RecordEntry AccountRecord: successfully added record ID AR6201-0006 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:41:49,797: elements.py: DEBUG: DataTable account: appending 5 rows to the table
2021-04-28 20:41:49,800: elements.py: DEBUG: DataTable account: setting column data types to configured data types
2021-04-28 20:41:49,806: elements.py: DEBUG: DataTable account: setting column default values
2021-04-28 20:41:49,807: elements.py: DEBUG: DataTable account: setting default values for column Amount
2021-04-28 20:41:49,807: elements.py: DEBUG: DataTable account: assigning value 0 to empty cells in column Amount
2021-04-28 20:41:49,808: elements.py: DEBUG: DataTable account: setting default values for column CorrectedAmount
2021-04-28 20:41:49,809: elements.py: DEBUG: DataTable account: assigning values [20803.0, 25700.0, 5430.0, 8500.0, 54595.0] to empty cells in column CorrectedAmount
2021-04-28 20:41:49,809: elements.py: WARNING: DataElement Branch: unable to locate values for element key -Branch_217626185_Element-
2021-04-28 20:41:49,810: elements.py: WARNING: DataElement Notes: unable to locate values for element key -Notes_726399628_Element-
2021-04-28 20:41:49,810: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:41:49,811: elements.py: DEBUG: DataTable Totals: filtering the display table based on user-supplied parameter values
2021-04-28 20:41:49,812: elements.py: DEBUG: DataTable Totals: annotating display table on configured annotation rules
2021-04-28 20:41:49,819: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:41:49,820: elements.py: DEBUG: DataTable Totals: table totals calculated as 115028.0
2021-04-28 20:41:49,820: elements.py: DEBUG: DataTable Totals: table totals are formatted as float
2021-04-28 20:41:49,820: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:41:49,821: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:41:49,821: elements.py: DEBUG: DataTable account: filtering the display table based on user-supplied parameter values
2021-04-28 20:41:49,822: elements.py: DEBUG: DataTable account: annotating display table on configured annotation rules
2021-04-28 20:41:49,822: elements.py: DEBUG: DataTable account: annotating table based on configured annotation rule "AlteredAmount"
2021-04-28 20:41:49,823: elements.py: DEBUG: DataTable account: annotation results of rule AlteredAmount are [False, False, False, False, False]
2021-04-28 20:41:49,847: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:41:49,847: elements.py: DEBUG: DataTable account: table totals calculated as 115028.0
2021-04-28 20:41:49,847: elements.py: DEBUG: DataTable account: table totals are formatted as float
2021-04-28 20:41:49,848: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:41:49,848: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:41:49,848: elements.py: DEBUG: DataTable Totals: table totals calculated as 115028.0
2021-04-28 20:41:49,849: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:41:49,849: elements.py: DEBUG: DataTable account: table totals calculated as 115028.0
2021-04-28 20:41:49,849: parameters.py: DEBUG: DataParameter RecordID: formatting parameter value NAR6201-0001 for display
2021-04-28 20:41:49,850: parameters.py: DEBUG: DataParameter Remainder: formatting parameter value 0.0 for display
2021-04-28 20:42:23,312: main.py: INFO: running window event -Transactions_21380940_Cancel- of rule Transactions
2021-04-28 20:42:24,750: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to remove IDs ['CAR6201-0001'] from the list of unsaved record IDs
2021-04-28 20:42:24,806: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:24,888: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:24,891: client.py: DEBUG: server process completed
2021-04-28 20:42:24,903: records.py: DEBUG: RecordEntry CashAuditRecord: successfully removed ['CAR6201-0001'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:24,905: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0001'] from the list of unsaved record IDs
2021-04-28 20:42:24,958: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,034: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,038: client.py: DEBUG: server process completed
2021-04-28 20:42:25,049: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0001'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,049: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs ['NAR6201-0001'] from the list of unsaved record IDs
2021-04-28 20:42:25,101: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,176: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,179: client.py: DEBUG: server process completed
2021-04-28 20:42:25,190: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully removed ['NAR6201-0001'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,192: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0002'] from the list of unsaved record IDs
2021-04-28 20:42:25,248: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,327: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,331: client.py: DEBUG: server process completed
2021-04-28 20:42:25,346: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0002'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,346: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0003'] from the list of unsaved record IDs
2021-04-28 20:42:25,399: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,471: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,474: client.py: DEBUG: server process completed
2021-04-28 20:42:25,485: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0003'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,485: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0004'] from the list of unsaved record IDs
2021-04-28 20:42:25,537: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,619: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,633: client.py: DEBUG: server process completed
2021-04-28 20:42:25,646: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0004'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,648: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0005'] from the list of unsaved record IDs
2021-04-28 20:42:25,702: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,779: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,783: client.py: DEBUG: server process completed
2021-04-28 20:42:25,797: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0005'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,798: records.py: DEBUG: RecordEntry AccountRecord: attempting to remove IDs ['AR6201-0006'] from the list of unsaved record IDs
2021-04-28 20:42:25,859: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:42:25,933: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:42:25,936: client.py: DEBUG: server process completed
2021-04-28 20:42:25,948: records.py: DEBUG: RecordEntry AccountRecord: successfully removed ['AR6201-0006'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:42:25,953: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value 2019-01-09 00:00:00 to None
2021-04-28 20:42:25,953: parameters.py: DEBUG: DataParameter Branch: resetting parameter value B to None
2021-04-28 20:42:25,953: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=False"
2021-04-28 20:42:25,954: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=False"
2021-04-28 20:42:25,954: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value CAR6201-0001 to None
2021-04-28 20:42:25,954: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value 2019-01-09 00:00:00 to None
2021-04-28 20:42:25,954: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value 0.0 to None
2021-04-28 20:42:25,954: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:42:25,954: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:42:25,959: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:42:25,971: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:42:25,973: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:42:25,973: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:42:25,973: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:42:25,977: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:42:25,991: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:42:25,991: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:42:25,992: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:42:25,992: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:42:25,994: parameters.py: DEBUG: DataParameter RecordID: resetting parameter value NAR6201-0001 to None
2021-04-28 20:42:25,995: parameters.py: DEBUG: DataParameter RecordDate: resetting parameter value 2019-01-09 00:00:00 to None
2021-04-28 20:42:25,995: parameters.py: DEBUG: DataParameter Remainder: resetting parameter value 0.0 to None
2021-04-28 20:42:25,995: elements.py: DEBUG: DataElement Branch: resetting data element to default None
2021-04-28 20:42:25,995: elements.py: DEBUG: DataElement Notes: resetting data element to default None
2021-04-28 20:42:25,998: elements.py: DEBUG: DataTable Totals: formatting table for displaying
2021-04-28 20:42:26,005: elements.py: DEBUG: DataTable Totals: calculating table totals
2021-04-28 20:42:26,007: elements.py: DEBUG: DataTable Totals: table totals calculated as 0
2021-04-28 20:42:26,007: elements.py: DEBUG: DataTable Totals: table totals are formatted as a string
2021-04-28 20:42:26,007: elements.py: DEBUG: DataTable Totals: summarizing display table on configured summary rules
2021-04-28 20:42:26,013: elements.py: DEBUG: DataTable account: formatting table for displaying
2021-04-28 20:42:26,028: elements.py: DEBUG: DataTable account: calculating table totals
2021-04-28 20:42:26,028: elements.py: DEBUG: DataTable account: table totals calculated as 0
2021-04-28 20:42:26,028: elements.py: DEBUG: DataTable account: table totals are formatted as a string
2021-04-28 20:42:26,028: elements.py: DEBUG: DataTable account: summarizing display table on configured summary rules
2021-04-28 20:42:26,031: elements.py: DEBUG: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:42:26,033: elements.py: DEBUG: DataTable Cash: formatting table for displaying
2021-04-28 20:42:26,051: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:42:26,052: elements.py: DEBUG: DataTable Cash: table totals calculated as 0
2021-04-28 20:42:26,052: elements.py: DEBUG: DataTable Cash: table totals are formatted as a string
2021-04-28 20:42:26,052: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:42:26,052: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:42:26,052: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:42:26,054: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:42:26,055: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:42:26,055: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:42:26,055: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:42:26,055: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:42:26,057: elements.py: DEBUG: DataTable Cash: disabling table action elements
2021-04-28 20:42:26,058: audit.py: DEBUG: AuditTransactionTab Cash: re-setting visibility of rule tab to True
2021-04-28 20:42:26,060: elements.py: DEBUG: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:42:26,061: elements.py: DEBUG: DataTable Return: formatting table for displaying
2021-04-28 20:42:26,084: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:42:26,084: elements.py: DEBUG: DataTable Return: table totals calculated as 0
2021-04-28 20:42:26,084: elements.py: DEBUG: DataTable Return: table totals are formatted as a string
2021-04-28 20:42:26,084: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:42:26,085: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:42:26,085: elements.py: DEBUG: DataTable Return: disabling table action elements
2021-04-28 20:42:26,085: audit.py: DEBUG: AuditTransactionTab Return: re-setting visibility of rule tab to False
2021-04-28 20:42:26,088: elements.py: DEBUG: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:42:26,088: elements.py: DEBUG: DataTable Receipt: formatting table for displaying
2021-04-28 20:42:26,107: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:42:26,107: elements.py: DEBUG: DataTable Receipt: table totals calculated as 0
2021-04-28 20:42:26,108: elements.py: DEBUG: DataTable Receipt: table totals are formatted as a string
2021-04-28 20:42:26,108: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:42:26,108: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:42:26,109: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:42:26,109: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:42:26,110: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:42:26,110: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:42:26,111: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:42:26,111: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:42:26,112: elements.py: DEBUG: DataTable Receipt: disabling table action elements
2021-04-28 20:42:26,113: audit.py: DEBUG: AuditTransactionTab Receipt: re-setting visibility of rule tab to False
2021-04-28 20:42:26,116: elements.py: DEBUG: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:42:26,117: elements.py: DEBUG: DataTable Deposit: formatting table for displaying
2021-04-28 20:42:26,148: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:42:26,150: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:42:26,150: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:42:26,150: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:42:26,150: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:42:26,151: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:42:26,151: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:42:26,153: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:42:26,153: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:42:26,153: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:42:26,153: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:42:26,156: elements.py: DEBUG: DataTable Deposit: disabling table action elements
2021-04-28 20:42:26,156: audit.py: DEBUG: AuditTransactionTab Deposit: re-setting visibility of rule tab to False
2021-04-28 20:42:26,159: elements.py: DEBUG: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:42:26,160: elements.py: DEBUG: DataTable ARV: formatting table for displaying
2021-04-28 20:42:26,182: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:42:26,182: elements.py: DEBUG: DataTable ARV: table totals calculated as 0
2021-04-28 20:42:26,182: elements.py: DEBUG: DataTable ARV: table totals are formatted as a string
2021-04-28 20:42:26,183: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:42:26,183: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:42:26,183: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:42:26,183: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:42:26,184: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:42:26,185: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:42:26,186: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:42:26,186: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:42:26,187: elements.py: DEBUG: DataTable ARV: disabling table action elements
2021-04-28 20:42:26,187: audit.py: DEBUG: AuditTransactionTab ARV: re-setting visibility of rule tab to False
2021-04-28 20:42:26,208: main.py: INFO: running window event -Transactions_21380940_TG- of rule Transactions
2021-04-28 20:42:26,209: audit.py: DEBUG: AuditRule Transactions: moving to transaction audit tab Cash
2021-04-28 20:43:09,014: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:09,015: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2
2021-04-28 20:43:09,215: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:09,217: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20
2021-04-28 20:43:09,700: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:09,702: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 201
2021-04-28 20:43:10,049: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:10,050: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019
2021-04-28 20:43:10,304: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:10,306: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 20190
2021-04-28 20:43:10,617: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:10,619: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01
2021-04-28 20:43:11,037: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:11,039: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-010
2021-04-28 20:43:12,327: main.py: INFO: running window event -RecordDate_953835110_Element- of rule Transactions
2021-04-28 20:43:12,328: parameters.py: DEBUG: DataParameter RecordDate: enforcing correct formatting of input value 2019-01-08
2021-04-28 20:43:14,215: main.py: INFO: running window event -Branch_546990455_Element- of rule Transactions
2021-04-28 20:43:14,216: parameters.py: DEBUG: DataParameter Branch: enforcing correct formatting of input value แม่อาย
2021-04-28 20:43:15,080: main.py: INFO: running window event -Transactions_21380940_Start- of rule Transactions
2021-04-28 20:43:15,081: audit.py: INFO: AuditRecordTab CashAuditRecord: attempting to load an existing audit record
2021-04-28 20:43:15,082: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo AS RecordID, CashAuditRecords.DocDate AS RecordDate, CashAuditRecords.DepartCode AS Branch, CashAuditRecords.Remainder, CashAuditRecords.Notes, CashAuditRecords.CashTotal AS CashSum, CashAuditRecords.ReceiptTotal AS ReceiptSum, CashAuditRecords.DepositTotal AS DepositSum, CashAuditRecords.ARVTotal AS ARVSum, CashAuditRecords.ReturnTotal AS ReturnSum, CashAuditRecords.OtherIncome AS SumOtherIncome, CashAuditRecords.OtherExpense AS SumExpenseReduction, CashAuditRecords.Withdrawal, CashAuditRecords.CreationTime, CashAuditRecords.CreatorName, CashAuditRecords.EditTime, CashAuditRecords.EditorName, CashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, CashAuditRecords.IsDeleted AS Deleted FROM CashAuditRecords WHERE CashAuditRecords.IsDeleted = ? AND CashAuditRecords.DocDate = ? AND CashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-08 00:00:00', 'B')"
2021-04-28 20:43:15,133: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:15,285: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:15,289: client.py: DEBUG: server process completed
2021-04-28 20:43:15,300: audit.py: INFO: AuditSummaryTab CashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 20:43:15,300: records.py: INFO: creating a new ID for the record
2021-04-28 20:43:15,300: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:43:15,351: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:15,423: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:15,428: client.py: DEBUG: server process completed
2021-04-28 20:43:15,440: records.py: DEBUG: RecordEntry CashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:15,440: records.py: DEBUG: RecordEntry CashAuditRecord: new ID has date component 6201
2021-04-28 20:43:15,440: records.py: DEBUG: RecordEntry CashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:43:15,441: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 20:43:15,441: records.py: DEBUG: RecordEntry CashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 20:43:15,441: client.py: DEBUG: query string is "SELECT CashAuditRecords.DocNo FROM CashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY CashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 20:43:15,504: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:15,592: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:15,597: client.py: DEBUG: server process completed
2021-04-28 20:43:15,618: records.py: DEBUG: RecordEntry CashAuditRecord: found 0 database records with date component 6201
2021-04-28 20:43:15,619: records.py: INFO: RecordEntry CashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 20:43:15,619: records.py: INFO: RecordEntry CashAuditRecord: new record ID is CAR6201-0001
2021-04-28 20:43:15,619: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to add record ID CAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:15,672: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:15,744: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:15,747: client.py: DEBUG: server process completed
2021-04-28 20:43:15,756: records.py: DEBUG: RecordEntry CashAuditRecord: successfully added record ID CAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:15,756: audit.py: DEBUG: AuditRuleTab CashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 20:43:15,757: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Notes
2021-04-28 20:43:15,757: audit.py: DEBUG: AuditRuleTab CashAuditRecord: no values found for data element Totals
2021-04-28 20:43:15,757: records.py: INFO: RecordType CashAuditRecord: initializing record
2021-04-28 20:43:15,757: records.py: DEBUG: RecordType CashAuditRecord: {'RecordID': 'CAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 8, 0, 0), 'Branch': 'B'}
2021-04-28 20:43:15,757: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordID with value CAR6201-0001
2021-04-28 20:43:15,757: records.py: DEBUG: RecordType CashAuditRecord: initializing header RecordDate with value 2019-01-08 00:00:00
2021-04-28 20:43:15,757: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for header Remainder
2021-04-28 20:43:15,757: records.py: DEBUG: RecordType CashAuditRecord: initializing data element Branch with value B
2021-04-28 20:43:15,758: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 20:43:15,758: records.py: WARNING: RecordType CashAuditRecord: input data is missing a value for data element Notes
2021-04-28 20:43:15,760: records.py: INFO: RecordType CashAuditRecord: initialized record has ID CAR6201-0001
2021-04-28 20:43:15,760: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('CAR6201-0001', 'CAR6201-0001')"
2021-04-28 20:43:15,815: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:15,894: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:15,898: client.py: DEBUG: server process completed
2021-04-28 20:43:15,911: records.py: INFO: RecordType CashAuditRecord: importing references and components
2021-04-28 20:43:15,912: audit.py: INFO: AuditRecordTab NonCashAuditRecord: attempting to load an existing audit record
2021-04-28 20:43:15,912: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo AS RecordID, NonCashAuditRecords.DocDate AS RecordDate, NonCashAuditRecords.DepartCode AS Branch, NonCashAuditRecords.Remainder, NonCashAuditRecords.Notes, NonCashAuditRecords.ChequeTotal AS ChequeSum, NonCashAuditRecords.TransferTotal AS BankSum, NonCashAuditRecords.CreditTotal AS CreditSum, NonCashAuditRecords.CreationTime, NonCashAuditRecords.CreatorName, NonCashAuditRecords.EditTime, NonCashAuditRecords.EditorName, NonCashAuditRecords.IsMarkedForDeletion AS MarkedForDeletion, NonCashAuditRecords.IsDeleted AS Deleted FROM NonCashAuditRecords WHERE NonCashAuditRecords.IsDeleted = ? AND NonCashAuditRecords.DocDate = ? AND NonCashAuditRecords.DepartCode = ? ;" with parameters "('0', '2019-01-08 00:00:00', 'B')"
2021-04-28 20:43:15,974: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:16,057: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:16,060: client.py: DEBUG: server process completed
2021-04-28 20:43:16,073: audit.py: INFO: AuditSummaryTab NonCashAuditRecord: no existing audit record for the supplied parameters ... creating a new record
2021-04-28 20:43:16,073: records.py: INFO: creating a new ID for the record
2021-04-28 20:43:16,073: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to obtain list of unsaved record IDs associated with the record entry
2021-04-28 20:43:16,123: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:16,195: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:16,198: client.py: DEBUG: server process completed
2021-04-28 20:43:16,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:16,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: new ID has date component 6201
2021-04-28 20:43:16,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for unsaved record IDs with date component 6201
2021-04-28 20:43:16,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 unsaved records with date component 6201
2021-04-28 20:43:16,209: records.py: DEBUG: RecordEntry NonCashAuditRecord: searching for database record IDs with date component 6201
2021-04-28 20:43:16,209: client.py: DEBUG: query string is "SELECT NonCashAuditRecords.DocNo FROM NonCashAuditRecords WHERE DocDate BETWEEN ? AND ?  ORDER BY NonCashAuditRecords.DocNo;" with parameters "(datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2019, 1, 31, 0, 0))"
2021-04-28 20:43:16,263: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:16,335: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:16,338: client.py: DEBUG: server process completed
2021-04-28 20:43:16,348: records.py: DEBUG: RecordEntry NonCashAuditRecord: found 0 database records with date component 6201
2021-04-28 20:43:16,348: records.py: INFO: RecordEntry NonCashAuditRecord: no previous IDs found for date 6201 - starting new iteration at 1
2021-04-28 20:43:16,349: records.py: INFO: RecordEntry NonCashAuditRecord: new record ID is NAR6201-0001
2021-04-28 20:43:16,349: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to add record ID NAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:16,399: client.py: INFO: sending request "add_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:16,475: client.py: INFO: receiving response to request "add_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:16,479: client.py: DEBUG: server process completed
2021-04-28 20:43:16,489: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully added record ID NAR6201-0001 to the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:16,490: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: adding value B from parameter Branch to data element Branch
2021-04-28 20:43:16,490: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Notes
2021-04-28 20:43:16,490: audit.py: DEBUG: AuditRuleTab NonCashAuditRecord: no values found for data element Totals
2021-04-28 20:43:16,490: records.py: INFO: RecordType NonCashAuditRecord: initializing record
2021-04-28 20:43:16,490: records.py: DEBUG: RecordType NonCashAuditRecord: {'RecordID': 'NAR6201-0001', 'RecordDate': datetime.datetime(2019, 1, 8, 0, 0), 'Branch': 'B'}
2021-04-28 20:43:16,491: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordID with value NAR6201-0001
2021-04-28 20:43:16,491: records.py: DEBUG: RecordType NonCashAuditRecord: initializing header RecordDate with value 2019-01-08 00:00:00
2021-04-28 20:43:16,491: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for header Remainder
2021-04-28 20:43:16,491: records.py: DEBUG: RecordType NonCashAuditRecord: initializing data element Branch with value B
2021-04-28 20:43:16,491: elements.py: DEBUG: DataElement Branch: input value B formatted as B
2021-04-28 20:43:16,491: records.py: WARNING: RecordType NonCashAuditRecord: input data is missing a value for data element Notes
2021-04-28 20:43:16,494: records.py: INFO: RecordType NonCashAuditRecord: initialized record has ID NAR6201-0001
2021-04-28 20:43:16,494: client.py: DEBUG: query string is "SELECT DocNo, RefNo, RefDate, DocType, RefType, IsDeleted, Warnings, IsParentChild FROM RecordReferences WHERE DocNo = ? OR RefNo = ? ;" with parameters "('NAR6201-0001', 'NAR6201-0001')"
2021-04-28 20:43:16,549: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:16,629: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:16,633: client.py: DEBUG: server process completed
2021-04-28 20:43:16,643: records.py: INFO: RecordType NonCashAuditRecord: importing references and components
2021-04-28 20:43:16,646: client.py: DEBUG: query string is "SELECT BCARInvoice.DocNo AS RecordID, BCARInvoice.DocDate AS RecordDate, BCARInvoice.DepartCode AS Branch, BCARInvoice.BillType, BCARInvoice.SumofItemAmount, BCARInvoice.DiscountAmount, BCARInvoice.TotalAmount AS Amount, BCARInvoice.SumCashAmount, BCARInvoice.SumCreditAmount, BCARInvoice.SumChqAmount, BCARInvoice.SumBankAmount, BCARInvoice.BillBalance, BCARInvoice.MyDescription AS Notes, BCARInvoice.CreatorCode AS CreatorName, BCARInvoice.CreateDateTime AS CreationTime, BCARInvoice.LastEditorCode AS EditorName, BCARInvoice.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARInvoice LEFT JOIN BCRecMoney ON BCARInvoice.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARInvoice.ArCode = BCAR.Code WHERE BCARInvoice.DocDate = ? AND BCARInvoice.DepartCode = ? AND BCARInvoice.IsCancel = ? AND (BCARInvoice.BillType IN (?, ?) OR BCARInvoice.BillType IS NULL) AND BCARInvoice.IsCompleteSave = ? AND BCARInvoice.PosStatus = ? ;" with parameters "('2019-01-08 00:00:00', 'B', 0, 0, 2, 1, 0)"
2021-04-28 20:43:16,707: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:18,192: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:18,196: client.py: DEBUG: server process completed
2021-04-28 20:43:18,203: audit.py: INFO: AuditTransactionTab Cash: loaded data for audit rule Transactions
2021-04-28 20:43:18,203: elements.py: DEBUG: DataTable Cash: appending 43 rows to the table
2021-04-28 20:43:18,208: elements.py: DEBUG: DataTable Cash: setting column data types to configured data types
2021-04-28 20:43:18,215: elements.py: DEBUG: DataTable Cash: setting column default values
2021-04-28 20:43:18,216: client.py: DEBUG: query string is "SELECT BCCreditNoteSub.DocNo AS RecordID, BCCreditNoteSub.DocDate AS RecordDate, BCCreditNoteSub.DepartCode AS Branch, BCCreditNoteSub.ItemCode, BCCreditNoteSub.ItemName, BCCreditNoteSub.UnitCode, BCCreditNoteSub.DiscQty, BCCreditNoteSub.DiscountAmount, BCCreditNoteSub.Amount, BCCreditNoteSub.NetAmount, BCCreditNoteSub.InvoiceNo, BCCreditNoteSub.MyDescription AS Notes, BCCreditNote.ReturnMoney, BCCreditNote.CreatorCode AS CreatorName, BCCreditNote.CreateDateTime AS CreationTime, BCCreditNote.LastEditorCode AS EditorName, BCCreditNote.LastEditDateT AS EditTime, BCARInvoice.BillType, BCARInvoice.BillBalance, BCARInvoice.DocDate AS InvoiceDate, BCReceiptSub1.DocDate AS RecDate, BCReceiptSub1.DocNo AS RecNo, BCAR.Name1 AS Customer FROM BCCreditNoteSub LEFT JOIN BCCreditNote ON BCCreditNoteSub.DocNo = BCCreditNote.DocNo LEFT JOIN BCARInvoice ON BCCreditNoteSub.InvoiceNo = BCARInvoice.DocNo LEFT JOIN BCReceiptSub1 ON BCCreditNoteSub.InvoiceNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCAR ON BCCreditNoteSub.ArCode = BCAR.Code WHERE BCCreditNoteSub.DocDate = ? AND BCCreditNoteSub.DepartCode = ? AND BCCreditNoteSub.IsCancel = ? AND BCCreditNoteSub.TransState = ? AND BCCreditNoteSub.IsPos = ? ;" with parameters "('2019-01-08 00:00:00', 'B', 0, 0, 0)"
2021-04-28 20:43:18,265: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:18,339: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:18,342: client.py: DEBUG: server process completed
2021-04-28 20:43:18,350: audit.py: INFO: AuditTransactionTab Return: loaded data for audit rule Transactions
2021-04-28 20:43:18,350: elements.py: DEBUG: DataTable Return: appending 5 rows to the table
2021-04-28 20:43:18,353: elements.py: DEBUG: DataTable Return: setting column data types to configured data types
2021-04-28 20:43:18,359: elements.py: DEBUG: DataTable Return: setting column default values
2021-04-28 20:43:18,360: client.py: DEBUG: query string is "SELECT BCReceipt1.DocNo AS RecordID, BCReceipt1.DocDate AS RecordDate, BCReceipt1.DepartCode AS Branch, BCReceipt1.TotalAmount, BCReceipt1.DiscountAmount, BCReceipt1.NetAmount AS Amount, BCReceipt1.TaxAmount, BCReceipt1.SumCashAmount, BCReceipt1.SumCreditAmount, BCReceipt1.SumChqAmount, BCReceipt1.SumBankAmount, BCReceipt1.OtherIncome, BCReceipt1.OtherExpense, BCReceipt1.MyDescription AS Notes, BCReceipt1.CreatorCode AS CreatorName, BCReceipt1.CreateDateTime AS CreationTime, BCReceipt1.LastEditorCode AS EditorName, BCReceipt1.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCReceipt1 LEFT JOIN BCRecMoney ON BCReceipt1.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCReceipt1.ArCode = BCAR.Code WHERE BCReceipt1.DocDate = ? AND BCReceipt1.DepartCode = ? AND BCReceipt1.IsCancel = ? AND BCReceipt1.IsCompleteSave = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-08 00:00:00', 'B', 0, 1, '01', '02', '03', '21902')"
2021-04-28 20:43:18,411: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:19,229: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:19,233: client.py: DEBUG: server process completed
2021-04-28 20:43:19,240: audit.py: INFO: AuditTransactionTab Receipt: loaded data for audit rule Transactions
2021-04-28 20:43:19,240: elements.py: DEBUG: DataTable Receipt: appending 28 rows to the table
2021-04-28 20:43:19,243: elements.py: DEBUG: DataTable Receipt: setting column data types to configured data types
2021-04-28 20:43:19,249: elements.py: DEBUG: DataTable Receipt: setting column default values
2021-04-28 20:43:19,249: client.py: DEBUG: query string is "SELECT BCARDeposit.DocNo AS RecordID, BCARDeposit.DocDate AS RecordDate, BCARDeposit.DepartCode AS Branch, BCARDeposit.RefNo AS PreEmpt, BCARDeposit.BeforeTaxAmount, BCARDeposit.TaxAmount, BCARDeposit.TotalAmount, BCARDeposit.NetAmount AS Amount, BCARDeposit.SumCashAmount, BCARDeposit.SumBankAmount, BCARDeposit.SumCreditAmount, BCARDeposit.SumChqAmount, BCARDeposit.MyDescription AS Notes, BCARDeposit.CreatorCode AS CreatorName, BCARDeposit.CreateDateTime AS CreationTime, BCARDeposit.LastEditorCode AS EditorName, BCARDeposit.LastEditDateT AS EditTime, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDeposit LEFT JOIN BCRecMoney ON BCARDeposit.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDeposit.ArCode = BCAR.Code WHERE BCARDeposit.DocDate = ? AND BCARDeposit.DepartCode = ? AND BCARDeposit.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-08 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 20:43:19,297: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:19,377: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:19,380: client.py: DEBUG: server process completed
2021-04-28 20:43:19,384: audit.py: INFO: AuditTransactionTab Deposit: loaded data for audit rule Transactions
2021-04-28 20:43:19,385: elements.py: DEBUG: DataTable Deposit: setting column default values
2021-04-28 20:43:19,385: client.py: DEBUG: query string is "SELECT BCARDepositSpecial.DocNo AS RecordID, BCARDepositSpecial.DocDate AS RecordDate, BCARDepositSpecial.DepartCode AS Branch, BCARDepositSpecial.NetAmount AS Amount, BCARDepositSpecial.BeforeTaxAmount, BCARDepositSpecial.SumCashAmount, BCARDepositSpecial.SumChqAmount, BCARDepositSpecial.SumBankAmount, BCARDepositSpecial.SumCreditAmount, BCARDepositSpecial.ExcessAmount1, BCARDepositSpecial.MyDescription AS Notes, BCARDepositSpecial.CreatorCode AS CreatorName, BCARDepositSpecial.CreateDateTime AS CreationTime, BCARDepositSpecial.LastEditorCode AS EditorName, BCARDepositSpecial.LastEditDateT AS EditTime, BCReceiptSub1.InvoiceNo, BCReceiptSub1.DocNo AS ReceiptNo, BCReceiptSub1.DocDate AS CutOff, BCReceiptSub1.PayAmount AS RecPayAmount, BCReceiptSub1.MyDescription AS Description, BCReceiptSub1.BillType, BCRecMoney.PayAmount, BCRecMoney.PaymentType, BCRecMoney.RefNo, COALESCE(BCRecMoney.RefDate,BCRecMoney.TransBankDate) AS RefDate, BCRecMoney.SaveFrom, BCBank.Name AS Bank, BCBankBranch.Name AS BankBranch, BCAR.Name1 AS Customer FROM BCARDepositSpecial LEFT JOIN BCReceiptSub1 ON BCARDepositSpecial.DocNo = BCReceiptSub1.InvoiceNo LEFT JOIN BCRecMoney ON BCARDepositSpecial.DocNo = BCRecMoney.DocNo LEFT JOIN BCBank ON BCRecMoney.BankCode = BCBank.Code LEFT JOIN BCBankBranch ON BCRecMoney.BankBranchCode = BCBankBranch.Code LEFT JOIN BCAR ON BCARDepositSpecial.ArCode = BCAR.Code WHERE BCARDepositSpecial.DocDate = ? AND BCARDepositSpecial.DepartCode = ? AND BCARDepositSpecial.IsCancel = ? AND (BCRecMoney.RefNo NOT IN (?, ?, ?, ?) OR BCRecMoney.RefNo IS NULL) ;" with parameters "('2019-01-08 00:00:00', 'B', 0, '01', '02', '03', '21902')"
2021-04-28 20:43:19,430: client.py: INFO: sending request "db_transact" to ('192.168.1.12', 65432)
2021-04-28 20:43:19,518: client.py: INFO: receiving response to request "db_transact" from ('192.168.1.12', 65432)
2021-04-28 20:43:19,522: client.py: DEBUG: server process completed
2021-04-28 20:43:19,530: audit.py: INFO: AuditTransactionTab ARV: loaded data for audit rule Transactions
2021-04-28 20:43:19,530: elements.py: DEBUG: DataTable ARV: appending 1 rows to the table
2021-04-28 20:43:19,535: elements.py: DEBUG: DataTable ARV: setting column data types to configured data types
2021-04-28 20:43:19,543: elements.py: DEBUG: DataTable ARV: setting column default values
2021-04-28 20:43:19,544: audit.py: INFO: AuditRule Transactions: transaction audit in progress with parameters RecordDate=2019-01-08 00:00:00, Branch=B
2021-04-28 20:43:19,544: parameters.py: DEBUG: DataParameter RecordDate: updating elements to "disabled=True"
2021-04-28 20:43:19,545: parameters.py: DEBUG: DataParameter Branch: updating element to "disabled=True"
2021-04-28 20:43:19,545: audit.py: DEBUG: AuditRuleSummary Transactions: summary title components are ['RecordDate', 'Branch']
2021-04-28 20:43:19,545: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value 2562-01-08 to title
2021-04-28 20:43:19,546: audit.py: DEBUG: AuditRuleSummary Transactions: adding parameter value แม่อาย to title
2021-04-28 20:43:19,546: audit.py: INFO: AuditRuleSummary Transactions: formatted summary title is สรุปยอดขาย วันที่ 2562-01-08 สาขา แม่อาย
2021-04-28 20:43:19,546: elements.py: DEBUG: DataTable Cash: enabling table action elements
2021-04-28 20:43:19,547: elements.py: DEBUG: DataTable Cash: sorting table on ['RecordID']
2021-04-28 20:43:19,550: elements.py: DEBUG: DataTable Cash: formatting table for displaying
2021-04-28 20:43:19,550: elements.py: DEBUG: DataTable Cash: filtering the display table based on user-supplied parameter values
2021-04-28 20:43:19,552: elements.py: DEBUG: DataTable Cash: annotating display table on configured annotation rules
2021-04-28 20:43:19,552: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:43:19,553: elements.py: DEBUG: DataTable Cash: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:43:19,553: elements.py: DEBUG: DataTable Cash: annotating table based on configured annotation rule "NonZeroBalance"
2021-04-28 20:43:19,554: elements.py: DEBUG: DataTable Cash: annotation results of rule NonZeroBalance are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:43:19,586: elements.py: DEBUG: DataTable Cash: calculating table totals
2021-04-28 20:43:19,587: elements.py: DEBUG: DataTable Cash: table totals calculated as 83574.0
2021-04-28 20:43:19,587: elements.py: DEBUG: DataTable Cash: table totals are formatted as float
2021-04-28 20:43:19,587: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rules
2021-04-28 20:43:19,588: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:43:19,588: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:43:19,588: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumChqAmount > 0
2021-04-28 20:43:19,590: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:43:19,590: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumBankAmount > 0
2021-04-28 20:43:19,592: elements.py: DEBUG: DataTable Cash: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:43:19,592: elements.py: DEBUG: DataTable Cash: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:43:19,596: audit.py: DEBUG: AuditTransactionTab Cash: ID is formatted as ['Branch', 'CH', 'YYMM', '-', '0000']
2021-04-28 20:43:19,596: audit.py: DEBUG: AuditTransactionTab Cash: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CH', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:43:19,597: elements.py: DEBUG: DataTable Return: enabling table action elements
2021-04-28 20:43:19,597: elements.py: DEBUG: DataTable Return: sorting table on ['RecordID']
2021-04-28 20:43:19,599: elements.py: DEBUG: DataTable Return: formatting table for displaying
2021-04-28 20:43:19,600: elements.py: DEBUG: DataTable Return: filtering the display table based on user-supplied parameter values
2021-04-28 20:43:19,601: elements.py: DEBUG: DataTable Return: annotating display table on configured annotation rules
2021-04-28 20:43:19,601: elements.py: DEBUG: DataTable Return: annotating table based on configured annotation rule "ReturnBeforePay"
2021-04-28 20:43:19,603: elements.py: DEBUG: DataTable Return: annotation results of rule ReturnBeforePay are [False, True, True, False, True]
2021-04-28 20:43:19,603: elements.py: DEBUG: DataTable Return: table row 1 annotated on annotation code ReturnBeforePay
2021-04-28 20:43:19,603: elements.py: DEBUG: DataTable Return: table row 2 annotated on annotation code ReturnBeforePay
2021-04-28 20:43:19,603: elements.py: DEBUG: DataTable Return: table row 4 annotated on annotation code ReturnBeforePay
2021-04-28 20:43:19,641: elements.py: DEBUG: DataTable Return: calculating table totals
2021-04-28 20:43:19,642: elements.py: DEBUG: DataTable Return: table totals calculated as 47459.0
2021-04-28 20:43:19,642: elements.py: DEBUG: DataTable Return: table totals are formatted as float
2021-04-28 20:43:19,643: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rules
2021-04-28 20:43:19,644: elements.py: DEBUG: DataTable Return: summarizing display table on configured summary rule "{'Column': 'Amount', 'Description': 'ลดหนี้สาขา', 'Condition': None}"
2021-04-28 20:43:19,645: audit.py: DEBUG: AuditTransactionTab Return: ID is formatted as ['Branch', 'CN', 'YYMM', '-', '0000']
2021-04-28 20:43:19,646: audit.py: DEBUG: AuditTransactionTab Return: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'CN', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:43:19,646: elements.py: DEBUG: DataTable Receipt: enabling table action elements
2021-04-28 20:43:19,647: elements.py: DEBUG: DataTable Receipt: sorting table on ['RecordID']
2021-04-28 20:43:19,649: elements.py: DEBUG: DataTable Receipt: formatting table for displaying
2021-04-28 20:43:19,649: elements.py: DEBUG: DataTable Receipt: filtering the display table based on user-supplied parameter values
2021-04-28 20:43:19,650: elements.py: DEBUG: DataTable Receipt: annotating display table on configured annotation rules
2021-04-28 20:43:19,651: elements.py: DEBUG: DataTable Receipt: annotating table based on configured annotation rule "NegativeAmount"
2021-04-28 20:43:19,652: elements.py: DEBUG: DataTable Receipt: annotation results of rule NegativeAmount are [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
2021-04-28 20:43:19,693: elements.py: DEBUG: DataTable Receipt: calculating table totals
2021-04-28 20:43:19,694: elements.py: DEBUG: DataTable Receipt: table totals calculated as 668086.0
2021-04-28 20:43:19,695: elements.py: DEBUG: DataTable Receipt: table totals are formatted as float
2021-04-28 20:43:19,695: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rules
2021-04-28 20:43:19,695: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:43:19,696: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:43:19,696: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumChqAmount > 0
2021-04-28 20:43:19,699: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:43:19,699: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumBankAmount > 0
2021-04-28 20:43:19,702: elements.py: DEBUG: DataTable Receipt: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:43:19,702: elements.py: DEBUG: DataTable Receipt: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:43:19,705: audit.py: DEBUG: AuditTransactionTab Receipt: ID is formatted as ['Branch', 'RC', 'YYMM', '-', '0000']
2021-04-28 20:43:19,705: audit.py: DEBUG: AuditTransactionTab Receipt: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'RC', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:43:19,706: elements.py: DEBUG: DataTable Deposit: enabling table action elements
2021-04-28 20:43:19,706: elements.py: DEBUG: DataTable Deposit: sorting table on ['RecordID']
2021-04-28 20:43:19,707: elements.py: DEBUG: DataTable Deposit: formatting table for displaying
2021-04-28 20:43:19,736: elements.py: DEBUG: DataTable Deposit: calculating table totals
2021-04-28 20:43:19,736: elements.py: DEBUG: DataTable Deposit: table totals calculated as 0
2021-04-28 20:43:19,736: elements.py: DEBUG: DataTable Deposit: table totals are formatted as a string
2021-04-28 20:43:19,736: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rules
2021-04-28 20:43:19,736: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:43:19,737: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:43:19,737: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumChqAmount > 0
2021-04-28 20:43:19,738: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:43:19,738: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumBankAmount > 0
2021-04-28 20:43:19,740: elements.py: DEBUG: DataTable Deposit: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:43:19,740: elements.py: DEBUG: DataTable Deposit: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:43:19,743: audit.py: DEBUG: AuditTransactionTab Deposit: ID is formatted as ['Branch', 'DR', 'YYMM', '-', '0000']
2021-04-28 20:43:19,744: audit.py: DEBUG: AuditTransactionTab Deposit: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'DR', (1, 3)), ('date', 'YYMM', (3, 7)), ('separator', '-', (7, 8)), ('variable', 4, (8, 12))]
2021-04-28 20:43:19,744: elements.py: DEBUG: DataTable ARV: enabling table action elements
2021-04-28 20:43:19,744: elements.py: DEBUG: DataTable ARV: sorting table on ['RecordID']
2021-04-28 20:43:19,746: elements.py: DEBUG: DataTable ARV: formatting table for displaying
2021-04-28 20:43:19,748: elements.py: DEBUG: DataTable ARV: filtering the display table based on user-supplied parameter values
2021-04-28 20:43:19,748: elements.py: DEBUG: DataTable ARV: annotating display table on configured annotation rules
2021-04-28 20:43:19,776: elements.py: DEBUG: DataTable ARV: calculating table totals
2021-04-28 20:43:19,777: elements.py: DEBUG: DataTable ARV: table totals calculated as 150000.0
2021-04-28 20:43:19,777: elements.py: DEBUG: DataTable ARV: table totals are formatted as float
2021-04-28 20:43:19,777: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rules
2021-04-28 20:43:19,777: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'SumCashAmount', 'Description': 'ยอดขายสินค้า', 'Condition': None}"
2021-04-28 20:43:19,778: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเช็ครับ', 'Condition': 'SumChqAmount > 0'}"
2021-04-28 20:43:19,778: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumChqAmount > 0
2021-04-28 20:43:19,780: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดเงินโอนรับ', 'Condition': 'SumBankAmount > 0'}"
2021-04-28 20:43:19,780: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumBankAmount > 0
2021-04-28 20:43:19,782: elements.py: DEBUG: DataTable ARV: summarizing display table on configured summary rule "{'Column': 'PayAmount', 'Description': 'ยอดบัตรเครดิตรับ', 'Condition': 'SumCreditAmount > 0'}"
2021-04-28 20:43:19,782: elements.py: DEBUG: DataTable ARV: subsetting table on rule SumCreditAmount > 0
2021-04-28 20:43:19,784: audit.py: DEBUG: AuditTransactionTab ARV: ID is formatted as ['Branch', 'ARV', 'YYMM', '-', '0000']
2021-04-28 20:43:19,785: audit.py: DEBUG: AuditTransactionTab ARV: ID updated with components [('Branch', 'B', (0, 1)), ('separator', 'ARV', (1, 4)), ('date', 'YYMM', (4, 8)), ('separator', '-', (8, 9)), ('variable', 4, (9, 13))]
2021-04-28 20:43:30,371: main.py: INFO: removing all unsaved record IDs associated with the program instance
2021-04-28 20:43:30,372: records.py: DEBUG: RecordEntry AccountRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,428: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:30,499: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:30,502: client.py: DEBUG: server process completed
2021-04-28 20:43:30,509: records.py: DEBUG: RecordEntry AccountRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,509: records.py: DEBUG: RecordEntry DepositRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,564: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:30,640: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:30,643: client.py: DEBUG: server process completed
2021-04-28 20:43:30,649: records.py: DEBUG: RecordEntry DepositRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,649: records.py: DEBUG: RecordEntry BankRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,713: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:30,791: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:30,794: client.py: DEBUG: server process completed
2021-04-28 20:43:30,800: records.py: DEBUG: RecordEntry BankRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,801: records.py: DEBUG: RecordEntry CashExpenseRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,870: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:30,956: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:30,959: client.py: DEBUG: server process completed
2021-04-28 20:43:30,965: records.py: DEBUG: RecordEntry CashExpenseRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:30,965: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,025: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:31,101: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:31,103: client.py: DEBUG: server process completed
2021-04-28 20:43:31,110: records.py: DEBUG: RecordEntry CashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,110: records.py: DEBUG: RecordEntry CashAuditRecord: attempting to remove IDs ['CAR6201-0001'] from the list of unsaved record IDs
2021-04-28 20:43:31,169: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:31,245: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:31,248: client.py: DEBUG: server process completed
2021-04-28 20:43:31,255: records.py: DEBUG: RecordEntry CashAuditRecord: successfully removed ['CAR6201-0001'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,255: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to obtain an instance-specific list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,313: client.py: INFO: sending request "request_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:31,396: client.py: INFO: receiving response to request "request_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:31,398: client.py: DEBUG: server process completed
2021-04-28 20:43:31,406: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully obtained a list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,406: records.py: DEBUG: RecordEntry NonCashAuditRecord: attempting to remove IDs ['NAR6201-0001'] from the list of unsaved record IDs
2021-04-28 20:43:31,458: client.py: INFO: sending request "remove_ids" to ('192.168.1.12', 65432)
2021-04-28 20:43:31,537: client.py: INFO: receiving response to request "remove_ids" from ('192.168.1.12', 65432)
2021-04-28 20:43:31,540: client.py: DEBUG: server process completed
2021-04-28 20:43:31,546: records.py: DEBUG: RecordEntry NonCashAuditRecord: successfully removed ['NAR6201-0001'] from the list of unsaved record IDs associated with the record entry
2021-04-28 20:43:31,546: client.py: INFO: closing connection to ('192.168.1.12', 65432)
